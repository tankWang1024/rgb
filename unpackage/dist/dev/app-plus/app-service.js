(this["webpackJsonp"] = this["webpackJsonp"] || []).push([["app-service"],[
/* 0 */
/*!*************************************************!*\
  !*** C:/Users/猪儿虫啊/Desktop/HBuildX/rgb/main.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("__webpack_require__(/*! uni-pages */ 1);var _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 36));\nvar _App = _interopRequireDefault(__webpack_require__(/*! ./App */ 9));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function ownKeys(object, enumerableOnly) {var keys = Object.keys(object);if (Object.getOwnPropertySymbols) {var symbols = Object.getOwnPropertySymbols(object);if (enumerableOnly) symbols = symbols.filter(function (sym) {return Object.getOwnPropertyDescriptor(object, sym).enumerable;});keys.push.apply(keys, symbols);}return keys;}function _objectSpread(target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i] != null ? arguments[i] : {};if (i % 2) {ownKeys(Object(source), true).forEach(function (key) {_defineProperty(target, key, source[key]);});} else if (Object.getOwnPropertyDescriptors) {Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));} else {ownKeys(Object(source)).forEach(function (key) {Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));});}}return target;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}\n\n_vue.default.config.productionTip = false;\n\n_App.default.mpType = 'app';\n\nvar app = new _vue.default(_objectSpread({},\n_App.default));\n\napp.$mount();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vbWFpbi5qcyJdLCJuYW1lcyI6WyJWdWUiLCJjb25maWciLCJwcm9kdWN0aW9uVGlwIiwiQXBwIiwibXBUeXBlIiwiYXBwIiwiJG1vdW50Il0sIm1hcHBpbmdzIjoiQUFBQSx3Q0FBbUI7QUFDbkIsdUU7O0FBRUFBLGFBQUlDLE1BQUosQ0FBV0MsYUFBWCxHQUEyQixLQUEzQjs7QUFFQUMsYUFBSUMsTUFBSixHQUFhLEtBQWI7O0FBRUEsSUFBTUMsR0FBRyxHQUFHLElBQUlMLFlBQUo7QUFDTEcsWUFESyxFQUFaOztBQUdBRSxHQUFHLENBQUNDLE1BQUoiLCJmaWxlIjoiMC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAndW5pLXBhZ2VzJztpbXBvcnQgVnVlIGZyb20gJ3Z1ZSdcclxuaW1wb3J0IEFwcCBmcm9tICcuL0FwcCdcclxuXHJcblZ1ZS5jb25maWcucHJvZHVjdGlvblRpcCA9IGZhbHNlXHJcblxyXG5BcHAubXBUeXBlID0gJ2FwcCdcclxuXHJcbmNvbnN0IGFwcCA9IG5ldyBWdWUoe1xyXG4gICAgLi4uQXBwXHJcbn0pXHJcbmFwcC4kbW91bnQoKSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///0\n");

/***/ }),
/* 1 */
/*!****************************************************!*\
  !*** C:/Users/猪儿虫啊/Desktop/HBuildX/rgb/pages.json ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


if (typeof Promise !== 'undefined' && !Promise.prototype.finally) {
  Promise.prototype.finally = function (callback) {
    var promise = this.constructor;
    return this.then(
    function (value) {return promise.resolve(callback()).then(function () {return value;});},
    function (reason) {return promise.resolve(callback()).then(function () {
        throw reason;
      });});

  };
}
if (uni.restoreGlobal) {
  uni.restoreGlobal(weex, plus, setTimeout, clearTimeout, setInterval, clearInterval);
}
__definePage('pages/index/index', function () {return Vue.extend(__webpack_require__(/*! pages/index/index.vue?mpType=page */ 2).default);});
__definePage('pages/res/res', function () {return Vue.extend(__webpack_require__(/*! pages/res/res.vue?mpType=page */ 13).default);});
__definePage('pages/canvas/canvas', function () {return Vue.extend(__webpack_require__(/*! pages/canvas/canvas.vue?mpType=page */ 18).default);});
__definePage('pages/chart/chart', function () {return Vue.extend(__webpack_require__(/*! pages/chart/chart.vue?mpType=page */ 30).default);});

/***/ }),
/* 2 */
/*!***************************************************************************!*\
  !*** C:/Users/猪儿虫啊/Desktop/HBuildX/rgb/pages/index/index.vue?mpType=page ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _index_vue_vue_type_template_id_2be84a3c_mpType_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.vue?vue&type=template&id=2be84a3c&mpType=page */ 3);\n/* harmony import */ var _index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.vue?vue&type=script&lang=js&mpType=page */ 6);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n/* harmony import */ var _E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js */ 12);\n\nvar renderjs\n\n\n\n\n/* normalize component */\n\nvar component = Object(_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\n  _index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  _index_vue_vue_type_template_id_2be84a3c_mpType_page__WEBPACK_IMPORTED_MODULE_0__[\"render\"],\n  _index_vue_vue_type_template_id_2be84a3c_mpType_page__WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"],\n  false,\n  null,\n  null,\n  null,\n  false,\n  _index_vue_vue_type_template_id_2be84a3c_mpType_page__WEBPACK_IMPORTED_MODULE_0__[\"components\"],\n  renderjs\n)\n\ncomponent.options.__file = \"pages/index/index.vue\"\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBNkg7QUFDN0g7QUFDb0U7QUFDTDs7O0FBRy9EO0FBQzBMO0FBQzFMLGdCQUFnQixrTUFBVTtBQUMxQixFQUFFLHNGQUFNO0FBQ1IsRUFBRSwyRkFBTTtBQUNSLEVBQUUsb0dBQWU7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUUsK0ZBQVU7QUFDWjtBQUNBOztBQUVBO0FBQ2UsZ0YiLCJmaWxlIjoiMi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zLCByZWN5Y2xhYmxlUmVuZGVyLCBjb21wb25lbnRzIH0gZnJvbSBcIi4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTJiZTg0YTNjJm1wVHlwZT1wYWdlXCJcbnZhciByZW5kZXJqc1xuaW1wb3J0IHNjcmlwdCBmcm9tIFwiLi9pbmRleC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmbXBUeXBlPXBhZ2VcIlxuZXhwb3J0ICogZnJvbSBcIi4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJm1wVHlwZT1wYWdlXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIUU6XFxcXGRvd25sb2FkXFxcXEhCdWlsZGVyWFxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHZ1ZS1sb2FkZXJcXFxcbGliXFxcXHJ1bnRpbWVcXFxcY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIG51bGwsXG4gIG51bGwsXG4gIGZhbHNlLFxuICBjb21wb25lbnRzLFxuICByZW5kZXJqc1xuKVxuXG5jb21wb25lbnQub3B0aW9ucy5fX2ZpbGUgPSBcInBhZ2VzL2luZGV4L2luZGV4LnZ1ZVwiXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///2\n");

/***/ }),
/* 3 */
/*!*********************************************************************************************************!*\
  !*** C:/Users/猪儿虫啊/Desktop/HBuildX/rgb/pages/index/index.vue?vue&type=template&id=2be84a3c&mpType=page ***!
  \*********************************************************************************************************/
/*! exports provided: render, staticRenderFns, recyclableRender, components */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_2be84a3c_mpType_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--10-0!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/filter-modules-template.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!./index.vue?vue&type=template&id=2be84a3c&mpType=page */ 4);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_2be84a3c_mpType_page__WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_2be84a3c_mpType_page__WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "recyclableRender", function() { return _E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_2be84a3c_mpType_page__WEBPACK_IMPORTED_MODULE_0__["recyclableRender"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "components", function() { return _E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_2be84a3c_mpType_page__WEBPACK_IMPORTED_MODULE_0__["components"]; });



/***/ }),
/* 4 */

  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--10-0!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/filter-modules-template.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!C:/Users/猪儿虫啊/Desktop/HBuildX/rgb/pages/index/index.vue?vue&type=template&id=2be84a3c&mpType=page ***!

/*! exports provided: render, staticRenderFns, recyclableRender, components */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "recyclableRender", function() { return recyclableRender; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "components", function() { return components; });
var components
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "view",
    { staticClass: _vm._$s(0, "sc", "content"), attrs: { _i: 0 } },
    [
      _c("view", { staticClass: _vm._$s(1, "sc", "main"), attrs: { _i: 1 } }, [
        _c("image", {
          staticClass: _vm._$s(2, "sc", "logo-img"),
          attrs: {
            src: _vm._$s(2, "a-src", __webpack_require__(/*! ../../static/logo.svg */ 5)),
            _i: 2
          }
        }),
        _c("text")
      ]),
      _c(
        "view",
        { staticClass: _vm._$s(4, "sc", "btn-box"), attrs: { _i: 4 } },
        [
          _c("button", {
            staticClass: _vm._$s(5, "sc", "btn"),
            attrs: { _i: 5 },
            on: { click: _vm.toPhoto }
          })
        ]
      )
    ]
  )
}
var recyclableRender = false
var staticRenderFns = []
render._withStripped = true



/***/ }),
/* 5 */
/*!*********************************************************!*\
  !*** C:/Users/猪儿虫啊/Desktop/HBuildX/rgb/static/logo.svg ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"static/img/logo.de98c913.svg\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGlCQUFpQixxQkFBdUIiLCJmaWxlIjoiNS5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcInN0YXRpYy9pbWcvbG9nby5kZTk4YzkxMy5zdmdcIjsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///5\n");

/***/ }),
/* 6 */
/*!***************************************************************************************************!*\
  !*** C:/Users/猪儿虫啊/Desktop/HBuildX/rgb/pages/index/index.vue?vue&type=script&lang=js&mpType=page ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-1!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/using-components.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!./index.vue?vue&type=script&lang=js&mpType=page */ 7);\n/* harmony import */ var _E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n /* harmony default export */ __webpack_exports__[\"default\"] = (_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0___default.a); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQStuQixDQUFnQiwwcEJBQUcsRUFBQyIsImZpbGUiOiI2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vZCBmcm9tIFwiLSFFOlxcXFxkb3dubG9hZFxcXFxIQnVpbGRlclhcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcYmFiZWwtbG9hZGVyXFxcXGxpYlxcXFxpbmRleC5qcyFFOlxcXFxkb3dubG9hZFxcXFxIQnVpbGRlclhcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx3ZWJwYWNrLXByZXByb2Nlc3MtbG9hZGVyXFxcXGluZGV4LmpzPz9yZWYtLTYtMSFFOlxcXFxkb3dubG9hZFxcXFxIQnVpbGRlclhcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx3ZWJwYWNrLXVuaS1hcHAtbG9hZGVyXFxcXHVzaW5nLWNvbXBvbmVudHMuanMhRTpcXFxcZG93bmxvYWRcXFxcSEJ1aWxkZXJYXFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcdnVlLWxvYWRlclxcXFxsaWJcXFxcaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZtcFR5cGU9cGFnZVwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIUU6XFxcXGRvd25sb2FkXFxcXEhCdWlsZGVyWFxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxiYWJlbC1sb2FkZXJcXFxcbGliXFxcXGluZGV4LmpzIUU6XFxcXGRvd25sb2FkXFxcXEhCdWlsZGVyWFxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stcHJlcHJvY2Vzcy1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tNi0xIUU6XFxcXGRvd25sb2FkXFxcXEhCdWlsZGVyWFxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stdW5pLWFwcC1sb2FkZXJcXFxcdXNpbmctY29tcG9uZW50cy5qcyFFOlxcXFxkb3dubG9hZFxcXFxIQnVpbGRlclhcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx2dWUtbG9hZGVyXFxcXGxpYlxcXFxpbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJm1wVHlwZT1wYWdlXCIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///6\n");

/***/ }),
/* 7 */
/*!********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-1!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/using-components.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!C:/Users/猪儿虫啊/Desktop/HBuildX/rgb/pages/index/index.vue?vue&type=script&lang=js&mpType=page ***!
  \********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(__f__) {Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;\n\n\n\n\n\n\n\n\n\n\n\n\nvar _App = _interopRequireDefault(__webpack_require__(/*! ../../App.vue */ 9));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };} //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = { data: function data() {return {};}, onLoad: function onLoad() {}, methods: { toPhoto: function toPhoto() {var that = this;\n      uni.chooseImage({\n        count: 1,\n        sizeType: 'original',\n        success: function success(res) {\n          var tempFilePath = res.tempFilePaths[0];\n          var systemInfo = uni.getSystemInfoSync();\n          __f__(\"log\", systemInfo, \" at pages/index/index.vue:33\");\n          _App.default.globalData.windowHeight = systemInfo.windowHeight;\n          _App.default.globalData.windowWidth = systemInfo.windowWidth; // 屏幕可视宽度\n          uni.getImageInfo({\n            src: tempFilePath,\n            success: function success(res) {\n              __f__(\"log\", res, \" at pages/index/index.vue:39\");\n              _App.default.globalData.imgInfo = res;\n              uni.navigateTo({\n                url: '../canvas/canvas' });\n\n            },\n            fail: function fail(err) {\n\n            } });\n\n        },\n        fail: function fail(err) {\n          __f__(\"log\", '取消选图', \" at pages/index/index.vue:51\");\n        } });\n\n    } } };exports.default = _default;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js */ 8)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vcGFnZXMvaW5kZXgvaW5kZXgudnVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFhQSwrRTs7Ozs7Ozs7Ozs7O2VBRUEsRUFDQSxJQURBLGtCQUNBLENBQ0EsVUFFQSxDQUpBLEVBS0EsTUFMQSxvQkFLQSxDQUVBLENBUEEsRUFRQSxXQUNBLE9BREEscUJBQ0EsQ0FDQTtBQUNBO0FBQ0EsZ0JBREE7QUFFQSw0QkFGQTtBQUdBLGVBSEEsbUJBR0EsR0FIQSxFQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1RUFMQSxDQUtBO0FBQ0E7QUFDQSw2QkFEQTtBQUVBLG1CQUZBLG1CQUVBLEdBRkEsRUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQURBOztBQUdBLGFBUkE7QUFTQSxnQkFUQSxnQkFTQSxHQVRBLEVBU0E7O0FBRUEsYUFYQTs7QUFhQSxTQXRCQTtBQXVCQSxZQXZCQSxnQkF1QkEsR0F2QkEsRUF1QkE7QUFDQTtBQUNBLFNBekJBOztBQTJCQSxLQTlCQSxFQVJBLEUiLCJmaWxlIjoiNy5qcyIsInNvdXJjZXNDb250ZW50IjpbIjx0ZW1wbGF0ZT5cclxuXHQ8dmlldyBjbGFzcz1cImNvbnRlbnRcIj5cclxuXHRcdDx2aWV3IGNsYXNzPVwibWFpblwiPlxyXG5cdFx0XHQ8aW1hZ2UgY2xhc3M9XCJsb2dvLWltZ1wiIHNyYz1cIi4uLy4uL3N0YXRpYy9sb2dvLnN2Z1wiIG1vZGU9XCJzY2FsZVRvRmlsbFwiPjwvaW1hZ2U+XHJcblx0XHRcdDx0ZXh0Pua1k+W6puajgOa1izwvdGV4dD5cclxuXHRcdDwvdmlldz5cclxuXHRcdDx2aWV3IGNsYXNzPVwiYnRuLWJveFwiPlxyXG5cdFx0XHQ8YnV0dG9uIHR5cGU9XCJkZWZhdWx0XCIgY2xhc3M9XCJidG5cIiBAY2xpY2s9XCJ0b1Bob3RvXCI+5byA5aeL5qOA5rWLPC9idXR0b24+XHJcblx0XHQ8L3ZpZXc+XHJcblx0PC92aWV3PlxyXG48L3RlbXBsYXRlPlxyXG5cclxuPHNjcmlwdD5cclxuXHRpbXBvcnQgYXBwIGZyb20gJy4uLy4uL0FwcC52dWUnXHJcblxyXG5cdGV4cG9ydCBkZWZhdWx0IHtcclxuXHRcdGRhdGEoKSB7XHJcblx0XHRcdHJldHVybiB7XHJcblx0XHRcdH1cclxuXHRcdH0sXHJcblx0XHRvbkxvYWQoKSB7XHJcblxyXG5cdFx0fSxcclxuXHRcdG1ldGhvZHM6IHtcclxuXHRcdFx0dG9QaG90bygpIHtcclxuXHRcdFx0XHRsZXQgdGhhdCA9IHRoaXNcclxuXHRcdFx0XHR1bmkuY2hvb3NlSW1hZ2Uoe1xyXG5cdFx0XHRcdFx0Y291bnQ6IDEsXHJcblx0XHRcdFx0XHRzaXplVHlwZTogJ29yaWdpbmFsJyxcclxuXHRcdFx0XHRcdHN1Y2Nlc3MocmVzKSB7XHJcblx0XHRcdFx0XHRcdGxldCB0ZW1wRmlsZVBhdGggPSByZXMudGVtcEZpbGVQYXRoc1swXVxyXG5cdFx0XHRcdFx0XHRsZXQgc3lzdGVtSW5mbyA9IHVuaS5nZXRTeXN0ZW1JbmZvU3luYygpXHJcblx0XHRcdFx0XHRcdGNvbnNvbGUubG9nKHN5c3RlbUluZm8pXHJcblx0XHRcdFx0XHRcdGFwcC5nbG9iYWxEYXRhLndpbmRvd0hlaWdodCA9IHN5c3RlbUluZm8ud2luZG93SGVpZ2h0XHJcblx0XHRcdFx0XHRcdGFwcC5nbG9iYWxEYXRhLndpbmRvd1dpZHRoID0gc3lzdGVtSW5mby53aW5kb3dXaWR0aFx0Ly8g5bGP5bmV5Y+v6KeG5a695bqmXHJcblx0XHRcdFx0XHRcdHVuaS5nZXRJbWFnZUluZm8oe1xyXG5cdFx0XHRcdFx0XHRcdHNyYzogdGVtcEZpbGVQYXRoLFxyXG5cdFx0XHRcdFx0XHRcdHN1Y2Nlc3MocmVzKSB7XHJcblx0XHRcdFx0XHRcdFx0XHRjb25zb2xlLmxvZyhyZXMpXHJcblx0XHRcdFx0XHRcdFx0XHRhcHAuZ2xvYmFsRGF0YS5pbWdJbmZvID0gcmVzXHJcblx0XHRcdFx0XHRcdFx0XHR1bmkubmF2aWdhdGVUbyh7XHJcblx0XHRcdFx0XHRcdFx0XHRcdHVybDogJy4uL2NhbnZhcy9jYW52YXMnXHJcblx0XHRcdFx0XHRcdFx0XHR9KVxyXG5cdFx0XHRcdFx0XHRcdH0sXHJcblx0XHRcdFx0XHRcdFx0ZmFpbChlcnIpIHtcclxuIFxyXG5cdFx0XHRcdFx0XHRcdH0sXHJcblx0XHRcdFx0XHRcdH0pIFxyXG5cdFx0XHRcdFx0fSxcclxuXHRcdFx0XHRcdGZhaWwoZXJyKSB7XHJcblx0XHRcdFx0XHRcdGNvbnNvbGUubG9nKCflj5bmtojpgInlm74nKVxyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH0pXHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9XHJcbjwvc2NyaXB0PlxyXG5cclxuPHN0eWxlPlxyXG5cdC5jb250ZW50IHtcclxuXHRcdGhlaWdodDogMTAwJTtcclxuXHR9XHJcblxyXG5cdC5tYWluIHtcclxuXHRcdGhlaWdodDogNzAlO1xyXG5cdFx0bGV0dGVyLXNwYWNpbmc6IDI4cnB4O1xyXG5cdFx0ZGlzcGxheTogZmxleDtcclxuXHRcdGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcblx0XHRhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cdFx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcblx0fVxyXG5cclxuXHQubG9nby1pbWcge1xyXG5cdFx0d2lkdGg6IDE0MHJweDtcclxuXHRcdGhlaWdodDogMTQwcnB4O1xyXG5cdFx0cGFkZGluZzogNDBycHg7XHJcblx0XHRiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoOTIsIDgwLCAyNDEpO1xyXG5cdFx0Ym9yZGVyLXJhZGl1czogMjBycHg7XHJcblx0XHRtYXJnaW4tYm90dG9tOiA0MHJweDtcclxuXHR9XHJcblxyXG5cdC5idG4tYm94IHtcclxuXHRcdGhlaWdodDogMzAlO1xyXG5cdFx0cGFkZGluZzogMCA0MHJweDtcclxuXHRcdGRpc3BsYXk6IGZsZXg7XHJcblx0XHRhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cdH1cclxuXHJcblx0LmJ0biB7XHJcblx0XHRiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoOTIsIDgwLCAyNDEpO1xyXG5cdFx0Y29sb3I6ICNGRkZGRkY7XHJcblx0XHRmbGV4OiAxO1xyXG5cdH1cclxuPC9zdHlsZT5cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///7\n");

/***/ }),
/* 8 */
/*!*********************************************************************!*\
  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js ***!
  \*********************************************************************/
/*! exports provided: log, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "log", function() { return log; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return formatLog; });
function typof (v) {
  var s = Object.prototype.toString.call(v)
  return s.substring(8, s.length - 1)
}

function isDebugMode () {
  /* eslint-disable no-undef */
  return typeof __channelId__ === 'string' && __channelId__
}

function log (type) {
  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key]
  }
  console[type].apply(console, args)
}

function formatLog () {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key]
  }
  var type = args.shift()
  if (isDebugMode()) {
    args.push(args.pop().replace('at ', 'uni-app:///'))
    return console[type].apply(console, args)
  }

  var msgs = args.map(function (v) {
    var type = Object.prototype.toString.call(v).toLowerCase()

    if (type === '[object object]' || type === '[object array]') {
      try {
        v = '---BEGIN:JSON---' + JSON.stringify(v) + '---END:JSON---'
      } catch (e) {
        v = '[object object]'
      }
    } else {
      if (v === null) {
        v = '---NULL---'
      } else if (v === undefined) {
        v = '---UNDEFINED---'
      } else {
        var vType = typof(v).toUpperCase()

        if (vType === 'NUMBER' || vType === 'BOOLEAN') {
          v = '---BEGIN:' + vType + '---' + v + '---END:' + vType + '---'
        } else {
          v = String(v)
        }
      }
    }

    return v
  })
  var msg = ''

  if (msgs.length > 1) {
    var lastMsg = msgs.pop()
    msg = msgs.join('---COMMA---')

    if (lastMsg.indexOf(' at ') === 0) {
      msg += lastMsg
    } else {
      msg += '---COMMA---' + lastMsg
    }
  } else {
    msg = msgs[0]
  }

  console[type](msg)
}


/***/ }),
/* 9 */
/*!*************************************************!*\
  !*** C:/Users/猪儿虫啊/Desktop/HBuildX/rgb/App.vue ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./App.vue?vue&type=script&lang=js& */ 10);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n/* harmony import */ var _E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js */ 12);\nvar render, staticRenderFns, recyclableRender, components\nvar renderjs\n\n\n\n\n/* normalize component */\n\nvar component = Object(_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(\n  _App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"App.vue\"\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUN1RDtBQUNMOzs7QUFHbEQ7QUFDMEw7QUFDMUwsZ0JBQWdCLGtNQUFVO0FBQzFCLEVBQUUseUVBQU07QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNlLGdGIiwiZmlsZSI6IjkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMsIHJlY3ljbGFibGVSZW5kZXIsIGNvbXBvbmVudHNcbnZhciByZW5kZXJqc1xuaW1wb3J0IHNjcmlwdCBmcm9tIFwiLi9BcHAudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5leHBvcnQgKiBmcm9tIFwiLi9BcHAudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiFFOlxcXFxkb3dubG9hZFxcXFxIQnVpbGRlclhcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx2dWUtbG9hZGVyXFxcXGxpYlxcXFxydW50aW1lXFxcXGNvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsLFxuICBmYWxzZSxcbiAgY29tcG9uZW50cyxcbiAgcmVuZGVyanNcbilcblxuY29tcG9uZW50Lm9wdGlvbnMuX19maWxlID0gXCJBcHAudnVlXCJcbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///9\n");

/***/ }),
/* 10 */
/*!**************************************************************************!*\
  !*** C:/Users/猪儿虫啊/Desktop/HBuildX/rgb/App.vue?vue&type=script&lang=js& ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-1!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/using-components.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!./App.vue?vue&type=script&lang=js& */ 11);\n/* harmony import */ var _E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n /* harmony default export */ __webpack_exports__[\"default\"] = (_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQWtuQixDQUFnQiw2b0JBQUcsRUFBQyIsImZpbGUiOiIxMC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb2QgZnJvbSBcIi0hRTpcXFxcZG93bmxvYWRcXFxcSEJ1aWxkZXJYXFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXGJhYmVsLWxvYWRlclxcXFxsaWJcXFxcaW5kZXguanMhRTpcXFxcZG93bmxvYWRcXFxcSEJ1aWxkZXJYXFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay1wcmVwcm9jZXNzLWxvYWRlclxcXFxpbmRleC5qcz8/cmVmLS02LTEhRTpcXFxcZG93bmxvYWRcXFxcSEJ1aWxkZXJYXFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay11bmktYXBwLWxvYWRlclxcXFx1c2luZy1jb21wb25lbnRzLmpzIUU6XFxcXGRvd25sb2FkXFxcXEhCdWlsZGVyWFxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHZ1ZS1sb2FkZXJcXFxcbGliXFxcXGluZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9BcHAudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIUU6XFxcXGRvd25sb2FkXFxcXEhCdWlsZGVyWFxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxiYWJlbC1sb2FkZXJcXFxcbGliXFxcXGluZGV4LmpzIUU6XFxcXGRvd25sb2FkXFxcXEhCdWlsZGVyWFxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stcHJlcHJvY2Vzcy1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tNi0xIUU6XFxcXGRvd25sb2FkXFxcXEhCdWlsZGVyWFxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stdW5pLWFwcC1sb2FkZXJcXFxcdXNpbmctY29tcG9uZW50cy5qcyFFOlxcXFxkb3dubG9hZFxcXFxIQnVpbGRlclhcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx2dWUtbG9hZGVyXFxcXGxpYlxcXFxpbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vQXBwLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///10\n");

/***/ }),
/* 11 */
/*!*******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-1!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/using-components.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!C:/Users/猪儿虫啊/Desktop/HBuildX/rgb/App.vue?vue&type=script&lang=js& ***!
  \*******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(__f__) {Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _default =\n{\n  globalData: {\n    // windowWidth: 0,\n    // windowHeight: 0,\n    //pixelRatio:1,\n    // imgInfo: {\n    // \t\"path\": \"\",\n    // \t\"width\": 0,\n    // \t\"height\": 0,\n    // },\n    // MIC: [],\n    // rgbArr: [],\n    // rect:[],\n    MIC: [\"1\", \"3\", \"2\", \"2\", \"5\"],\n    rgbArr: [{\n      \"r\": 152.88227201257862,\n      \"g\": 135.96128144654088,\n      \"b\": 128.10416666666666 },\n    {\n      \"r\": 103.99124452782989,\n      \"g\": 90.11757348342714,\n      \"b\": 83.92370231394622 },\n    {\n      \"r\": 132.60180995475113,\n      \"g\": 113.77149321266968,\n      \"b\": 107.19683257918552 },\n    {\n      \"r\": 125.6574074074074,\n      \"g\": 105.30324074074075,\n      \"b\": 98.40046296296296 },\n    {\n      \"r\": 88.20408163265306,\n      \"g\": 74.22704081632654,\n      \"b\": 66.3078231292517 }],\n\n    windowWidth: 360,\n    windowHeight: 572,\n    imgInfo: {\n      \"errMsg\": \"getImageInfo:ok\",\n      \"path\": \"file:///storage/emulated/0/Pictures/雅安博物馆/IMG_20170926_115457.jpg\",\n      \"width\": 4608,\n      \"height\": 3456,\n      \"orientation\": \"up\",\n      \"type\": \"jpeg\" },\n\n    rect: [{\n      \"startx\": 146,\n      \"starty\": 209,\n      \"endx\": 194,\n      \"endy\": 315 },\n    {\n      \"startx\": 303,\n      \"starty\": 284,\n      \"endx\": 344,\n      \"endy\": 323 },\n    {\n      \"startx\": 210,\n      \"starty\": 230,\n      \"endx\": 227,\n      \"endy\": 256 },\n    {\n      \"startx\": 259,\n      \"starty\": 230,\n      \"endx\": 271,\n      \"endy\": 266 },\n    {\n      \"startx\": 316,\n      \"starty\": 199,\n      \"endx\": 340,\n      \"endy\": 248 }] },\n\n\n\n\n  onLaunch: function onLaunch() {\n    var globalData = this.$options.globalData;\n    __f__(\"log\", 'App Launch', \" at App.vue:78\");\n  },\n  onShow: function onShow() {\n    __f__(\"log\", 'App Show', \" at App.vue:81\");\n  },\n  onHide: function onHide() {\n    __f__(\"log\", 'App Hide', \" at App.vue:84\");\n  } };exports.default = _default;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js */ 8)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vQXBwLnZ1ZSJdLCJuYW1lcyI6WyJnbG9iYWxEYXRhIiwiTUlDIiwicmdiQXJyIiwid2luZG93V2lkdGgiLCJ3aW5kb3dIZWlnaHQiLCJpbWdJbmZvIiwicmVjdCIsIm9uTGF1bmNoIiwiJG9wdGlvbnMiLCJvblNob3ciLCJvbkhpZGUiXSwibWFwcGluZ3MiOiI7QUFDZTtBQUNkQSxZQUFVLEVBQUU7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0FDLE9BQUcsRUFBRSxDQUFDLEdBQUQsRUFBTSxHQUFOLEVBQVcsR0FBWCxFQUFnQixHQUFoQixFQUFxQixHQUFyQixDQVpNO0FBYVhDLFVBQU0sRUFBRSxDQUFDO0FBQ1IsV0FBSyxrQkFERztBQUVSLFdBQUssa0JBRkc7QUFHUixXQUFLLGtCQUhHLEVBQUQ7QUFJTDtBQUNGLFdBQUssa0JBREg7QUFFRixXQUFLLGlCQUZIO0FBR0YsV0FBSyxpQkFISCxFQUpLO0FBUUw7QUFDRixXQUFLLGtCQURIO0FBRUYsV0FBSyxrQkFGSDtBQUdGLFdBQUssa0JBSEgsRUFSSztBQVlMO0FBQ0YsV0FBSyxpQkFESDtBQUVGLFdBQUssa0JBRkg7QUFHRixXQUFLLGlCQUhILEVBWks7QUFnQkw7QUFDRixXQUFLLGlCQURIO0FBRUYsV0FBSyxpQkFGSDtBQUdGLFdBQUssZ0JBSEgsRUFoQkssQ0FiRzs7QUFrQ1hDLGVBQVcsRUFBRSxHQWxDRjtBQW1DWEMsZ0JBQVksRUFBRSxHQW5DSDtBQW9DWEMsV0FBTyxFQUFFO0FBQ1IsZ0JBQVUsaUJBREY7QUFFUixjQUFRLG1FQUZBO0FBR1IsZUFBUyxJQUhEO0FBSVIsZ0JBQVUsSUFKRjtBQUtSLHFCQUFlLElBTFA7QUFNUixjQUFRLE1BTkEsRUFwQ0U7O0FBNENYQyxRQUFJLEVBQUUsQ0FBQztBQUNOLGdCQUFVLEdBREo7QUFFTixnQkFBVSxHQUZKO0FBR04sY0FBUSxHQUhGO0FBSU4sY0FBUSxHQUpGLEVBQUQ7QUFLSDtBQUNGLGdCQUFVLEdBRFI7QUFFRixnQkFBVSxHQUZSO0FBR0YsY0FBUSxHQUhOO0FBSUYsY0FBUSxHQUpOLEVBTEc7QUFVSDtBQUNGLGdCQUFVLEdBRFI7QUFFRixnQkFBVSxHQUZSO0FBR0YsY0FBUSxHQUhOO0FBSUYsY0FBUSxHQUpOLEVBVkc7QUFlSDtBQUNGLGdCQUFVLEdBRFI7QUFFRixnQkFBVSxHQUZSO0FBR0YsY0FBUSxHQUhOO0FBSUYsY0FBUSxHQUpOLEVBZkc7QUFvQkg7QUFDRixnQkFBVSxHQURSO0FBRUYsZ0JBQVUsR0FGUjtBQUdGLGNBQVEsR0FITjtBQUlGLGNBQVEsR0FKTixFQXBCRyxDQTVDSyxFQURFOzs7OztBQTBFZEMsVUFBUSxFQUFFLG9CQUFXO0FBQ3BCLFFBQUlQLFVBQVUsR0FBRyxLQUFLUSxRQUFMLENBQWNSLFVBQS9CO0FBQ0EsaUJBQVksWUFBWjtBQUNBLEdBN0VhO0FBOEVkUyxRQUFNLEVBQUUsa0JBQVc7QUFDbEIsaUJBQVksVUFBWjtBQUNBLEdBaEZhO0FBaUZkQyxRQUFNLEVBQUUsa0JBQVc7QUFDbEIsaUJBQVksVUFBWjtBQUNBLEdBbkZhLEUiLCJmaWxlIjoiMTEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmV4cG9ydCBkZWZhdWx0IHtcblx0Z2xvYmFsRGF0YToge1xuXHRcdC8vIHdpbmRvd1dpZHRoOiAwLFxuXHRcdC8vIHdpbmRvd0hlaWdodDogMCxcblx0XHQvL3BpeGVsUmF0aW86MSxcblx0XHQvLyBpbWdJbmZvOiB7XG5cdFx0Ly8gXHRcInBhdGhcIjogXCJcIixcblx0XHQvLyBcdFwid2lkdGhcIjogMCxcblx0XHQvLyBcdFwiaGVpZ2h0XCI6IDAsXG5cdFx0Ly8gfSxcblx0XHQvLyBNSUM6IFtdLFxuXHRcdC8vIHJnYkFycjogW10sXG5cdFx0Ly8gcmVjdDpbXSxcblx0XHRNSUM6IFtcIjFcIiwgXCIzXCIsIFwiMlwiLCBcIjJcIiwgXCI1XCJdLFxuXHRcdHJnYkFycjogW3tcblx0XHRcdFwiclwiOiAxNTIuODgyMjcyMDEyNTc4NjIsXG5cdFx0XHRcImdcIjogMTM1Ljk2MTI4MTQ0NjU0MDg4LFxuXHRcdFx0XCJiXCI6IDEyOC4xMDQxNjY2NjY2NjY2NlxuXHRcdH0sIHtcblx0XHRcdFwiclwiOiAxMDMuOTkxMjQ0NTI3ODI5ODksXG5cdFx0XHRcImdcIjogOTAuMTE3NTczNDgzNDI3MTQsXG5cdFx0XHRcImJcIjogODMuOTIzNzAyMzEzOTQ2MjJcblx0XHR9LCB7XG5cdFx0XHRcInJcIjogMTMyLjYwMTgwOTk1NDc1MTEzLFxuXHRcdFx0XCJnXCI6IDExMy43NzE0OTMyMTI2Njk2OCxcblx0XHRcdFwiYlwiOiAxMDcuMTk2ODMyNTc5MTg1NTJcblx0XHR9LCB7XG5cdFx0XHRcInJcIjogMTI1LjY1NzQwNzQwNzQwNzQsXG5cdFx0XHRcImdcIjogMTA1LjMwMzI0MDc0MDc0MDc1LFxuXHRcdFx0XCJiXCI6IDk4LjQwMDQ2Mjk2Mjk2Mjk2XG5cdFx0fSwge1xuXHRcdFx0XCJyXCI6IDg4LjIwNDA4MTYzMjY1MzA2LFxuXHRcdFx0XCJnXCI6IDc0LjIyNzA0MDgxNjMyNjU0LFxuXHRcdFx0XCJiXCI6IDY2LjMwNzgyMzEyOTI1MTdcblx0XHR9XSxcblx0XHR3aW5kb3dXaWR0aDogMzYwLFxuXHRcdHdpbmRvd0hlaWdodDogNTcyLFxuXHRcdGltZ0luZm86IHtcblx0XHRcdFwiZXJyTXNnXCI6IFwiZ2V0SW1hZ2VJbmZvOm9rXCIsXG5cdFx0XHRcInBhdGhcIjogXCJmaWxlOi8vL3N0b3JhZ2UvZW11bGF0ZWQvMC9QaWN0dXJlcy/pm4XlronljZrnianppoYvSU1HXzIwMTcwOTI2XzExNTQ1Ny5qcGdcIixcblx0XHRcdFwid2lkdGhcIjogNDYwOCxcblx0XHRcdFwiaGVpZ2h0XCI6IDM0NTYsXG5cdFx0XHRcIm9yaWVudGF0aW9uXCI6IFwidXBcIixcblx0XHRcdFwidHlwZVwiOiBcImpwZWdcIlxuXHRcdH0sXG5cdFx0cmVjdDogW3tcblx0XHRcdFwic3RhcnR4XCI6IDE0Nixcblx0XHRcdFwic3RhcnR5XCI6IDIwOSxcblx0XHRcdFwiZW5keFwiOiAxOTQsXG5cdFx0XHRcImVuZHlcIjogMzE1XG5cdFx0fSwge1xuXHRcdFx0XCJzdGFydHhcIjogMzAzLFxuXHRcdFx0XCJzdGFydHlcIjogMjg0LFxuXHRcdFx0XCJlbmR4XCI6IDM0NCxcblx0XHRcdFwiZW5keVwiOiAzMjNcblx0XHR9LCB7XG5cdFx0XHRcInN0YXJ0eFwiOiAyMTAsXG5cdFx0XHRcInN0YXJ0eVwiOiAyMzAsXG5cdFx0XHRcImVuZHhcIjogMjI3LFxuXHRcdFx0XCJlbmR5XCI6IDI1NlxuXHRcdH0sIHtcblx0XHRcdFwic3RhcnR4XCI6IDI1OSxcblx0XHRcdFwic3RhcnR5XCI6IDIzMCxcblx0XHRcdFwiZW5keFwiOiAyNzEsXG5cdFx0XHRcImVuZHlcIjogMjY2XG5cdFx0fSwge1xuXHRcdFx0XCJzdGFydHhcIjogMzE2LFxuXHRcdFx0XCJzdGFydHlcIjogMTk5LFxuXHRcdFx0XCJlbmR4XCI6IDM0MCxcblx0XHRcdFwiZW5keVwiOiAyNDhcblx0XHR9XVxuXG5cblx0fSxcblx0b25MYXVuY2g6IGZ1bmN0aW9uKCkge1xuXHRcdGxldCBnbG9iYWxEYXRhID0gdGhpcy4kb3B0aW9ucy5nbG9iYWxEYXRhXG5cdFx0Y29uc29sZS5sb2coJ0FwcCBMYXVuY2gnKVxuXHR9LFxuXHRvblNob3c6IGZ1bmN0aW9uKCkge1xuXHRcdGNvbnNvbGUubG9nKCdBcHAgU2hvdycpXG5cdH0sXG5cdG9uSGlkZTogZnVuY3Rpb24oKSB7XG5cdFx0Y29uc29sZS5sb2coJ0FwcCBIaWRlJylcblx0fVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///11\n");

/***/ }),
/* 12 */
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js ***!
  \**********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return normalizeComponent; });
/* globals __VUE_SSR_CONTEXT__ */

// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
// This module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle.

function normalizeComponent (
  scriptExports,
  render,
  staticRenderFns,
  functionalTemplate,
  injectStyles,
  scopeId,
  moduleIdentifier, /* server only */
  shadowMode, /* vue-cli only */
  components, // fixed by xxxxxx auto components
  renderjs // fixed by xxxxxx renderjs
) {
  // Vue.extend constructor export interop
  var options = typeof scriptExports === 'function'
    ? scriptExports.options
    : scriptExports

  // fixed by xxxxxx auto components
  if (components) {
    if (!options.components) {
      options.components = {}
    }
    var hasOwn = Object.prototype.hasOwnProperty
    for (var name in components) {
      if (hasOwn.call(components, name) && !hasOwn.call(options.components, name)) {
        options.components[name] = components[name]
      }
    }
  }
  // fixed by xxxxxx renderjs
  if (renderjs) {
    (renderjs.beforeCreate || (renderjs.beforeCreate = [])).unshift(function() {
      this[renderjs.__module] = this
    });
    (options.mixins || (options.mixins = [])).push(renderjs)
  }

  // render functions
  if (render) {
    options.render = render
    options.staticRenderFns = staticRenderFns
    options._compiled = true
  }

  // functional template
  if (functionalTemplate) {
    options.functional = true
  }

  // scopedId
  if (scopeId) {
    options._scopeId = 'data-v-' + scopeId
  }

  var hook
  if (moduleIdentifier) { // server build
    hook = function (context) {
      // 2.3 injection
      context =
        context || // cached call
        (this.$vnode && this.$vnode.ssrContext) || // stateful
        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
      // 2.2 with runInNewContext: true
      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__
      }
      // inject component styles
      if (injectStyles) {
        injectStyles.call(this, context)
      }
      // register component module identifier for async chunk inferrence
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier)
      }
    }
    // used by ssr in case component is cached and beforeCreate
    // never gets called
    options._ssrRegister = hook
  } else if (injectStyles) {
    hook = shadowMode
      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }
      : injectStyles
  }

  if (hook) {
    if (options.functional) {
      // for template-only hot-reload because in that case the render fn doesn't
      // go through the normalizer
      options._injectStyles = hook
      // register for functioal component in vue file
      var originalRender = options.render
      options.render = function renderWithStyleInjection (h, context) {
        hook.call(context)
        return originalRender(h, context)
      }
    } else {
      // inject component registration as beforeCreate hook
      var existing = options.beforeCreate
      options.beforeCreate = existing
        ? [].concat(existing, hook)
        : [hook]
    }
  }

  return {
    exports: scriptExports,
    options: options
  }
}


/***/ }),
/* 13 */
/*!***********************************************************************!*\
  !*** C:/Users/猪儿虫啊/Desktop/HBuildX/rgb/pages/res/res.vue?mpType=page ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _res_vue_vue_type_template_id_49de3718_mpType_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./res.vue?vue&type=template&id=49de3718&mpType=page */ 14);\n/* harmony import */ var _res_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./res.vue?vue&type=script&lang=js&mpType=page */ 16);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _res_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _res_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n/* harmony import */ var _E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js */ 12);\n\nvar renderjs\n\n\n\n\n/* normalize component */\n\nvar component = Object(_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\n  _res_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  _res_vue_vue_type_template_id_49de3718_mpType_page__WEBPACK_IMPORTED_MODULE_0__[\"render\"],\n  _res_vue_vue_type_template_id_49de3718_mpType_page__WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"],\n  false,\n  null,\n  null,\n  null,\n  false,\n  _res_vue_vue_type_template_id_49de3718_mpType_page__WEBPACK_IMPORTED_MODULE_0__[\"components\"],\n  renderjs\n)\n\ncomponent.options.__file = \"pages/res/res.vue\"\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBMkg7QUFDM0g7QUFDa0U7QUFDTDs7O0FBRzdEO0FBQzBMO0FBQzFMLGdCQUFnQixrTUFBVTtBQUMxQixFQUFFLG9GQUFNO0FBQ1IsRUFBRSx5RkFBTTtBQUNSLEVBQUUsa0dBQWU7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUUsNkZBQVU7QUFDWjtBQUNBOztBQUVBO0FBQ2UsZ0YiLCJmaWxlIjoiMTMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucywgcmVjeWNsYWJsZVJlbmRlciwgY29tcG9uZW50cyB9IGZyb20gXCIuL3Jlcy52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NDlkZTM3MTgmbXBUeXBlPXBhZ2VcIlxudmFyIHJlbmRlcmpzXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL3Jlcy52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmbXBUeXBlPXBhZ2VcIlxuZXhwb3J0ICogZnJvbSBcIi4vcmVzLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZtcFR5cGU9cGFnZVwiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiFFOlxcXFxkb3dubG9hZFxcXFxIQnVpbGRlclhcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx2dWUtbG9hZGVyXFxcXGxpYlxcXFxydW50aW1lXFxcXGNvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsLFxuICBmYWxzZSxcbiAgY29tcG9uZW50cyxcbiAgcmVuZGVyanNcbilcblxuY29tcG9uZW50Lm9wdGlvbnMuX19maWxlID0gXCJwYWdlcy9yZXMvcmVzLnZ1ZVwiXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///13\n");

/***/ }),
/* 14 */
/*!*****************************************************************************************************!*\
  !*** C:/Users/猪儿虫啊/Desktop/HBuildX/rgb/pages/res/res.vue?vue&type=template&id=49de3718&mpType=page ***!
  \*****************************************************************************************************/
/*! exports provided: render, staticRenderFns, recyclableRender, components */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_res_vue_vue_type_template_id_49de3718_mpType_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--10-0!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/filter-modules-template.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!./res.vue?vue&type=template&id=49de3718&mpType=page */ 15);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_res_vue_vue_type_template_id_49de3718_mpType_page__WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_res_vue_vue_type_template_id_49de3718_mpType_page__WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "recyclableRender", function() { return _E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_res_vue_vue_type_template_id_49de3718_mpType_page__WEBPACK_IMPORTED_MODULE_0__["recyclableRender"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "components", function() { return _E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_res_vue_vue_type_template_id_49de3718_mpType_page__WEBPACK_IMPORTED_MODULE_0__["components"]; });



/***/ }),
/* 15 */

  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--10-0!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/filter-modules-template.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!C:/Users/猪儿虫啊/Desktop/HBuildX/rgb/pages/res/res.vue?vue&type=template&id=49de3718&mpType=page ***!

/*! exports provided: render, staticRenderFns, recyclableRender, components */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "recyclableRender", function() { return recyclableRender; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "components", function() { return components; });
var components
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "view",
    [
      _c(
        "view",
        { staticClass: _vm._$s(1, "sc", "title-box"), attrs: { _i: 1 } },
        [
          _c("view", {
            staticClass: _vm._$s(2, "sc", "rect"),
            attrs: { _i: 2 }
          }),
          _c("view", {
            staticClass: _vm._$s(3, "sc", "title-num"),
            attrs: { _i: 3 }
          }),
          _c(
            "view",
            { staticClass: _vm._$s(4, "sc", "rgb"), attrs: { _i: 4 } },
            [_c("text"), _c("text"), _c("text")]
          )
        ]
      ),
      _vm._l(_vm._$s(8, "f", { forItems: _vm.rect }), function(
        item,
        index,
        $20,
        $30
      ) {
        return _c(
          "view",
          {
            key: _vm._$s(8, "f", { forIndex: $20, key: 8 + "-" + $30 }),
            staticClass: _vm._$s("8-" + $30, "sc", "box"),
            attrs: { _i: "8-" + $30 }
          },
          [
            _c("canvas", {
              style: _vm._$s("9-" + $30, "s", {
                width: "50px",
                height: "60px"
              }),
              attrs: {
                "canvas-id": _vm._$s("9-" + $30, "a-canvas-id", index + "c"),
                _i: "9-" + $30
              }
            }),
            _c(
              "view",
              {
                staticClass: _vm._$s("10-" + $30, "sc", "num"),
                attrs: { _i: "10-" + $30 }
              },
              [_vm._v(_vm._$s("10-" + $30, "t0-0", _vm._s(_vm.MIC[index])))]
            ),
            _c(
              "view",
              {
                staticClass: _vm._$s("11-" + $30, "sc", "rgb"),
                attrs: { _i: "11-" + $30 }
              },
              [
                _c("text", [
                  _vm._v(
                    _vm._$s(
                      "12-" + $30,
                      "t0-0",
                      _vm._s(_vm.rgbArr[index].r.toFixed(2))
                    )
                  )
                ]),
                _c("text", [
                  _vm._v(
                    _vm._$s(
                      "13-" + $30,
                      "t0-0",
                      _vm._s(_vm.rgbArr[index].g.toFixed(2))
                    )
                  )
                ]),
                _c("text", [
                  _vm._v(
                    _vm._$s(
                      "14-" + $30,
                      "t0-0",
                      _vm._s(_vm.rgbArr[index].b.toFixed(2))
                    )
                  )
                ])
              ]
            )
          ]
        )
      }),
      _c(
        "view",
        { staticClass: _vm._$s(15, "sc", "foot"), attrs: { _i: 15 } },
        [
          _c("view", {
            staticClass: _vm._$s(16, "sc", "card-title"),
            attrs: { _i: 16 }
          }),
          _c(
            "view",
            { staticClass: _vm._$s(17, "sc", "card"), attrs: { _i: 17 } },
            _vm._l(_vm._$s(18, "f", { forItems: _vm.yArr }), function(
              item,
              index,
              $21,
              $31
            ) {
              return _c(
                "view",
                {
                  key: _vm._$s(18, "f", { forIndex: $21, key: 18 + "-" + $31 }),
                  staticClass: _vm._$s("18-" + $31, "sc", "card-item"),
                  attrs: { _i: "18-" + $31 },
                  on: {
                    click: function($event) {
                      return _vm.checkY(index)
                    }
                  }
                },
                [
                  _c("image", {
                    attrs: {
                      src: _vm._$s(
                        "19-" + $31,
                        "a-src",
                        index == _vm.selectIndex
                          ? "../../static/xing1.svg"
                          : "../../static/xing2.svg"
                      ),
                      _i: "19-" + $31
                    }
                  }),
                  _vm._v(_vm._$s("18-" + $31, "t1-0", _vm._s(item)))
                ]
              )
            }),
            0
          ),
          _c("button", {
            staticClass: _vm._$s(20, "sc", "btn"),
            attrs: { _i: 20 },
            on: { click: _vm.toChart }
          })
        ]
      )
    ],
    2
  )
}
var recyclableRender = false
var staticRenderFns = []
render._withStripped = true



/***/ }),
/* 16 */
/*!***********************************************************************************************!*\
  !*** C:/Users/猪儿虫啊/Desktop/HBuildX/rgb/pages/res/res.vue?vue&type=script&lang=js&mpType=page ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_res_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-1!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/using-components.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!./res.vue?vue&type=script&lang=js&mpType=page */ 17);\n/* harmony import */ var _E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_res_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_res_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_res_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_res_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n /* harmony default export */ __webpack_exports__[\"default\"] = (_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_res_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0___default.a); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQTZuQixDQUFnQix3cEJBQUcsRUFBQyIsImZpbGUiOiIxNi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb2QgZnJvbSBcIi0hRTpcXFxcZG93bmxvYWRcXFxcSEJ1aWxkZXJYXFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXGJhYmVsLWxvYWRlclxcXFxsaWJcXFxcaW5kZXguanMhRTpcXFxcZG93bmxvYWRcXFxcSEJ1aWxkZXJYXFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay1wcmVwcm9jZXNzLWxvYWRlclxcXFxpbmRleC5qcz8/cmVmLS02LTEhRTpcXFxcZG93bmxvYWRcXFxcSEJ1aWxkZXJYXFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay11bmktYXBwLWxvYWRlclxcXFx1c2luZy1jb21wb25lbnRzLmpzIUU6XFxcXGRvd25sb2FkXFxcXEhCdWlsZGVyWFxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHZ1ZS1sb2FkZXJcXFxcbGliXFxcXGluZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9yZXMudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJm1wVHlwZT1wYWdlXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hRTpcXFxcZG93bmxvYWRcXFxcSEJ1aWxkZXJYXFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXGJhYmVsLWxvYWRlclxcXFxsaWJcXFxcaW5kZXguanMhRTpcXFxcZG93bmxvYWRcXFxcSEJ1aWxkZXJYXFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay1wcmVwcm9jZXNzLWxvYWRlclxcXFxpbmRleC5qcz8/cmVmLS02LTEhRTpcXFxcZG93bmxvYWRcXFxcSEJ1aWxkZXJYXFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay11bmktYXBwLWxvYWRlclxcXFx1c2luZy1jb21wb25lbnRzLmpzIUU6XFxcXGRvd25sb2FkXFxcXEhCdWlsZGVyWFxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHZ1ZS1sb2FkZXJcXFxcbGliXFxcXGluZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9yZXMudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJm1wVHlwZT1wYWdlXCIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///16\n");

/***/ }),
/* 17 */
/*!****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-1!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/using-components.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!C:/Users/猪儿虫啊/Desktop/HBuildX/rgb/pages/res/res.vue?vue&type=script&lang=js&mpType=page ***!
  \****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar _App = _interopRequireDefault(__webpack_require__(/*! ../../App.vue */ 9));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _createForOfIteratorHelper(o) {if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) {var i = 0;var F = function F() {};return { s: F, n: function n() {if (i >= o.length) return { done: true };return { done: false, value: o[i++] };}, e: function e(_e) {throw _e;}, f: F };}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}var it,normalCompletion = true,didErr = false,err;return { s: function s() {it = o[Symbol.iterator]();}, n: function n() {var step = it.next();normalCompletion = step.done;return step;}, e: function e(_e2) {didErr = true;err = _e2;}, f: function f() {try {if (!normalCompletion && it.return != null) it.return();} finally {if (didErr) throw err;}} };}function _unsupportedIterableToArray(o, minLen) {if (!o) return;if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);var n = Object.prototype.toString.call(o).slice(8, -1);if (n === \"Object\" && o.constructor) n = o.constructor.name;if (n === \"Map\" || n === \"Set\") return Array.from(n);if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);}function _arrayLikeToArray(arr, len) {if (len == null || len > arr.length) len = arr.length;for (var i = 0, arr2 = new Array(len); i < len; i++) {arr2[i] = arr[i];}return arr2;}var _default =\n\n{\n  data: function data() {\n    return {\n      windowWidth: 0,\n      windowHeight: 0,\n      MIC: [],\n      rgbArr: [],\n      rect: [],\n      ctxn: [],\n      imgInfo: null,\n      yArr: ['G/B', 'R/B', 'R/G', 'R', 'G', 'B'],\n      selectIndex: 0 };\n\n  },\n  methods: {\n    checkY: function checkY(index) {\n      this.selectIndex = index;\n      var y = this.yArr[index];\n\n    },\n    toChart: function toChart() {\n      uni.navigateTo({\n        url: '../chart/chart?y=' + this.yArr[this.selectIndex] });\n\n    } },\n\n  onReady: function onReady() {var _iterator = _createForOfIteratorHelper(\n    this.ctxn),_step;try {for (_iterator.s(); !(_step = _iterator.n()).done;) {var item = _step.value;\n        item.draw();\n      }} catch (err) {_iterator.e(err);} finally {_iterator.f();}\n  },\n  onLoad: function onLoad() {\n    this.MIC = _App.default.globalData.MIC;\n    this.rgbArr = _App.default.globalData.rgbArr;\n    this.rect = _App.default.globalData.rect;\n    this.windowWidth = _App.default.globalData.windowWidth;\n    this.windowHeight = _App.default.globalData.windowHeight;\n    this.imgInfo = _App.default.globalData.imgInfo;\n    var windowHeight = _App.default.globalData.windowHeight;\n    var windowWidth = _App.default.globalData.windowWidth;\n    for (var i = 0; i < this.rect.length; i++) {\n      this.ctxn[i] = uni.createCanvasContext(i + 'c');\n      // 放大系数\n      var we = 50 / Math.abs(this.rect[i].startx - this.rect[i].endx);\n      var he = 60 / Math.abs(this.rect[i].starty - this.rect[i].endy);\n      this.ctxn[i].drawImage(this.imgInfo.path, -this.rect[i].startx * we, -this.rect[i].starty * he, windowWidth * we, (\n      windowHeight - 100) * he);\n    }\n  } };exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vcGFnZXMvcmVzL3Jlcy52dWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXdDQSwrRTs7QUFFQTtBQUNBLE1BREEsa0JBQ0E7QUFDQTtBQUNBLG9CQURBO0FBRUEscUJBRkE7QUFHQSxhQUhBO0FBSUEsZ0JBSkE7QUFLQSxjQUxBO0FBTUEsY0FOQTtBQU9BLG1CQVBBO0FBUUEsZ0RBUkE7QUFTQSxvQkFUQTs7QUFXQSxHQWJBO0FBY0E7QUFDQSxVQURBLGtCQUNBLEtBREEsRUFDQTtBQUNBO0FBQ0E7O0FBRUEsS0FMQTtBQU1BLFdBTkEscUJBTUE7QUFDQTtBQUNBLDhEQURBOztBQUdBLEtBVkEsRUFkQTs7QUEwQkEsU0ExQkEscUJBMEJBO0FBQ0EsYUFEQSxhQUNBO0FBQ0E7QUFDQSxPQUhBO0FBSUEsR0E5QkE7QUErQkEsUUEvQkEsb0JBK0JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQURBLElBQ0EsRUFEQTtBQUVBO0FBQ0EsR0FoREEsRSIsImZpbGUiOiIxNy5qcyIsInNvdXJjZXNDb250ZW50IjpbIjx0ZW1wbGF0ZT5cclxuXHQ8dmlldz5cclxuXHRcdDx2aWV3IGNsYXNzPVwidGl0bGUtYm94XCI+XHJcblx0XHRcdDx2aWV3IGNsYXNzPVwicmVjdFwiPlxyXG5cdFx0XHRcdOWbvueJh1xyXG5cdFx0XHQ8L3ZpZXc+XHJcblx0XHRcdDx2aWV3IGNsYXNzPVwidGl0bGUtbnVtXCI+XHJcblx0XHRcdFx05rWT5bqmXHJcblx0XHRcdDwvdmlldz5cclxuXHRcdFx0PHZpZXcgY2xhc3M9XCJyZ2JcIj5cclxuXHRcdFx0XHQ8dGV4dD5SPC90ZXh0Pjx0ZXh0Pkc8L3RleHQ+PHRleHQ+QjwvdGV4dD5cclxuXHRcdFx0PC92aWV3PlxyXG5cdFx0PC92aWV3PlxyXG5cdFx0PHZpZXcgdi1mb3I9XCIoaXRlbSxpbmRleCkgaW4gcmVjdFwiIGNsYXNzPVwiYm94XCI+XHJcblx0XHRcdDxjYW52YXMgOmNhbnZhcy1pZD1cImluZGV4KydjJ1wiIHYtYmluZDpzdHlsZT1cInt3aWR0aDonNTBweCcsaGVpZ2h0Oic2MHB4J31cIj48L2NhbnZhcz5cclxuXHRcdFx0PHZpZXcgY2xhc3M9XCJudW1cIj57e01JQ1tpbmRleF19fTwvdmlldz5cclxuXHRcdFx0PHZpZXcgY2xhc3M9XCJyZ2JcIj5cclxuXHRcdFx0XHQ8dGV4dD57e3JnYkFycltpbmRleF0uci50b0ZpeGVkKDIpfX08L3RleHQ+XHJcblx0XHRcdFx0PHRleHQ+e3tyZ2JBcnJbaW5kZXhdLmcudG9GaXhlZCgyKX19PC90ZXh0PlxyXG5cdFx0XHRcdDx0ZXh0Pnt7cmdiQXJyW2luZGV4XS5iLnRvRml4ZWQoMil9fTwvdGV4dD5cclxuXHRcdFx0PC92aWV3PlxyXG5cdFx0PC92aWV3PlxyXG5cdFx0PHZpZXcgY2xhc3M9XCJmb290XCI+XHJcblx0XHRcdDx2aWV3IGNsYXNzPVwiY2FyZC10aXRsZVwiPlxyXG5cdFx0XHRcdOmAieaLqeWFs+ezu1xyXG5cdFx0XHQ8L3ZpZXc+XHJcblx0XHRcdDx2aWV3IGNsYXNzPVwiY2FyZFwiPlxyXG5cdFx0XHRcdDx2aWV3IGNsYXNzPVwiY2FyZC1pdGVtXCIgdi1mb3I9XCIoaXRlbSxpbmRleCkgaW4geUFyclwiIEB0YXA9XCJjaGVja1koaW5kZXgpXCI+XHJcblx0XHRcdFx0XHQ8aW1hZ2UgOnNyYz1cImluZGV4ID09IHNlbGVjdEluZGV4PycuLi8uLi9zdGF0aWMveGluZzEuc3ZnJzonLi4vLi4vc3RhdGljL3hpbmcyLnN2ZydcIiA+PC9pbWFnZT5cclxuXHRcdFx0XHRcdHt7aXRlbX19XHJcblx0XHRcdFx0PC92aWV3PlxyXG5cclxuXHRcdFx0PC92aWV3PlxyXG5cdFx0XHQ8YnV0dG9uIGNsYXNzPVwiYnRuXCIgQHRhcD1cInRvQ2hhcnRcIj7noa7lrpo8L2J1dHRvbj5cclxuXHRcdDwvdmlldz5cclxuXHQ8L3ZpZXc+XHJcblxyXG48L3RlbXBsYXRlPlxyXG5cclxuPHNjcmlwdD5cclxuXHRpbXBvcnQgYXBwIGZyb20gJy4uLy4uL0FwcC52dWUnXHJcblxyXG5cdGV4cG9ydCBkZWZhdWx0IHtcclxuXHRcdGRhdGEoKSB7XHJcblx0XHRcdHJldHVybiB7XHJcblx0XHRcdFx0d2luZG93V2lkdGg6IDAsXHJcblx0XHRcdFx0d2luZG93SGVpZ2h0OiAwLFxyXG5cdFx0XHRcdE1JQzogW10sXHJcblx0XHRcdFx0cmdiQXJyOiBbXSxcclxuXHRcdFx0XHRyZWN0OiBbXSxcclxuXHRcdFx0XHRjdHhuOiBbXSxcclxuXHRcdFx0XHRpbWdJbmZvOiBudWxsLFxyXG5cdFx0XHRcdHlBcnI6IFsnRy9CJywgJ1IvQicsICdSL0cnLCAnUicsICdHJywgJ0InXSxcclxuXHRcdFx0XHRzZWxlY3RJbmRleDogMCxcclxuXHRcdFx0fVxyXG5cdFx0fSxcclxuXHRcdG1ldGhvZHM6e1xyXG5cdFx0XHRjaGVja1koaW5kZXgpe1xyXG5cdFx0XHRcdHRoaXMuc2VsZWN0SW5kZXggPSBpbmRleFxyXG5cdFx0XHRcdGxldCB5ID0gdGhpcy55QXJyW2luZGV4XVxyXG5cdFx0XHRcdFxyXG5cdFx0XHR9LFxyXG5cdFx0XHR0b0NoYXJ0KCl7XHJcblx0XHRcdFx0dW5pLm5hdmlnYXRlVG8oe1xyXG5cdFx0XHRcdFx0dXJsOicuLi9jaGFydC9jaGFydD95PScrdGhpcy55QXJyW3RoaXMuc2VsZWN0SW5kZXhdXHJcblx0XHRcdFx0fSlcclxuXHRcdFx0fVxyXG5cdFx0fSxcclxuXHRcdG9uUmVhZHkoKSB7XHJcblx0XHRcdGZvciAobGV0IGl0ZW0gb2YgdGhpcy5jdHhuKSB7XHJcblx0XHRcdFx0aXRlbS5kcmF3KClcclxuXHRcdFx0fVxyXG5cdFx0fSxcclxuXHRcdG9uTG9hZCgpIHtcclxuXHRcdFx0dGhpcy5NSUMgPSBhcHAuZ2xvYmFsRGF0YS5NSUM7XHJcblx0XHRcdHRoaXMucmdiQXJyID0gYXBwLmdsb2JhbERhdGEucmdiQXJyO1xyXG5cdFx0XHR0aGlzLnJlY3QgPSBhcHAuZ2xvYmFsRGF0YS5yZWN0XHJcblx0XHRcdHRoaXMud2luZG93V2lkdGggPSBhcHAuZ2xvYmFsRGF0YS53aW5kb3dXaWR0aFxyXG5cdFx0XHR0aGlzLndpbmRvd0hlaWdodCA9IGFwcC5nbG9iYWxEYXRhLndpbmRvd0hlaWdodFxyXG5cdFx0XHR0aGlzLmltZ0luZm8gPSBhcHAuZ2xvYmFsRGF0YS5pbWdJbmZvXHJcblx0XHRcdGxldCB3aW5kb3dIZWlnaHQgPSBhcHAuZ2xvYmFsRGF0YS53aW5kb3dIZWlnaHRcclxuXHRcdFx0bGV0IHdpbmRvd1dpZHRoID0gYXBwLmdsb2JhbERhdGEud2luZG93V2lkdGhcclxuXHRcdFx0Zm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLnJlY3QubGVuZ3RoOyBpKyspIHtcclxuXHRcdFx0XHR0aGlzLmN0eG5baV0gPSB1bmkuY3JlYXRlQ2FudmFzQ29udGV4dChpICsgJ2MnKVxyXG5cdFx0XHRcdC8vIOaUvuWkp+ezu+aVsFxyXG5cdFx0XHRcdGxldCB3ZSA9IDUwIC8gKE1hdGguYWJzKHRoaXMucmVjdFtpXS5zdGFydHggLSB0aGlzLnJlY3RbaV0uZW5keCkpXHJcblx0XHRcdFx0bGV0IGhlID0gNjAgLyAoTWF0aC5hYnModGhpcy5yZWN0W2ldLnN0YXJ0eSAtIHRoaXMucmVjdFtpXS5lbmR5KSlcclxuXHRcdFx0XHR0aGlzLmN0eG5baV0uZHJhd0ltYWdlKHRoaXMuaW1nSW5mby5wYXRoLCAtdGhpcy5yZWN0W2ldLnN0YXJ0eCAqIHdlLCAtdGhpcy5yZWN0W2ldLnN0YXJ0eSAqIGhlLCB3aW5kb3dXaWR0aCAqIHdlLCAoXHJcblx0XHRcdFx0XHR3aW5kb3dIZWlnaHQgLSAxMDApICogaGUpXHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9XHJcbjwvc2NyaXB0PlxyXG5cclxuPHN0eWxlPlxyXG5cdC50aXRsZS1ib3gge1xyXG5cdFx0ZGlzcGxheTogZmxleDtcclxuXHRcdGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblx0XHRqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XHJcblx0XHRtYXJnaW46IDQwcnB4IDIwcnB4O1xyXG5cdFx0dGV4dC1hbGlnbjogY2VudGVyO1xyXG5cdH1cclxuXHJcblx0LnJlY3Qge1xyXG5cdFx0d2lkdGg6IDEwMHJweDtcclxuXHR9XHJcblxyXG5cdC50aXRsZS1udW0ge1xyXG5cdFx0d2lkdGg6IDEyMHJweDtcclxuXHR9XHJcblxyXG5cdC5ib3gge1xyXG5cdFx0ZGlzcGxheTogZmxleDtcclxuXHRcdGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblx0XHRqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XHJcblx0XHRtYXJnaW46IDQwcnB4IDIwcnB4O1xyXG5cdH1cclxuXHJcblx0LnJnYiB7XHJcblx0XHRkaXNwbGF5OiBmbGV4O1xyXG5cdFx0anVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XHJcblx0fVxyXG5cclxuXHQubnVtIHtcclxuXHRcdHdpZHRoOiAxMjBycHg7XHJcblx0XHR0ZXh0LWFsaWduOiBjZW50ZXI7XHJcblx0fVxyXG5cclxuXHQucmdiIHRleHQge1xyXG5cdFx0d2lkdGg6IDE2MHJweDtcclxuXHRcdHRleHQtYWxpZ246IGNlbnRlcjtcclxuXHR9XHJcblxyXG5cdC5mb290IHtcclxuXHRcdHdpZHRoOiA2MCU7XHJcblx0XHRtYXJnaW46IDgwcnB4IGF1dG8gMDtcclxuXHR9XHJcblxyXG5cdC5jYXJkLXRpdGxlIHtcclxuXHRcdG1hcmdpbjogNDBycHggMDtcclxuXHR9XHJcblxyXG5cdC5jYXJkIHtcclxuXHRcdHBhZGRpbmc6IDIwcnB4O1xyXG5cdFx0Ym94LXNoYWRvdzogMCA4cnB4IDE2cnB4IDAgcmdiYSgwLCAwLCAwLCAwLjIpLCAwIDEycnB4IDQwcnB4IDAgcmdiYSgwLCAwLCAwLCAwLjE5KTtcclxuXHRcdGJvcmRlci1yYWRpdXM6IDIwcnB4O1xyXG5cclxuXHR9XHJcblxyXG5cdC5jYXJkLWl0ZW0ge1xyXG5cdFx0cGFkZGluZzogMjBycHg7XHJcblx0XHRib3JkZXItYm90dG9tOiAxcnB4IHNvbGlkIHJnYigxNTgsIDE2NiwgMTgzKTtcclxuXHR9XHJcblxyXG5cdC5jYXJkLWl0ZW0gaW1hZ2Uge1xyXG5cdFx0d2lkdGg6IDM2cnB4O1xyXG5cdFx0aGVpZ2h0OiAzNnJweDtcclxuXHRcdG1hcmdpbi1yaWdodDogNDBycHg7XHJcblx0fVxyXG5cclxuXHQuYnRuIHtcclxuXHRcdGhlaWdodDogNzBycHg7XHJcblx0XHRsaW5lLWhlaWdodDogNzBycHg7XHJcblx0XHRtYXJnaW46IDQwcnB4IDAgODBycHg7XHJcblx0XHRiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjU1LCAxOTYsIDYyKTtcclxuXHRcdGNvbG9yOiAjRkZGRkZGO1xyXG5cdH1cclxuPC9zdHlsZT5cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///17\n");

/***/ }),
/* 18 */
/*!*****************************************************************************!*\
  !*** C:/Users/猪儿虫啊/Desktop/HBuildX/rgb/pages/canvas/canvas.vue?mpType=page ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _canvas_vue_vue_type_template_id_7fa00f16_mpType_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./canvas.vue?vue&type=template&id=7fa00f16&mpType=page */ 19);\n/* harmony import */ var _canvas_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./canvas.vue?vue&type=script&lang=js&mpType=page */ 22);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _canvas_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _canvas_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n/* harmony import */ var _E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js */ 12);\n\nvar renderjs\n\n\n\n\n/* normalize component */\n\nvar component = Object(_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\n  _canvas_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  _canvas_vue_vue_type_template_id_7fa00f16_mpType_page__WEBPACK_IMPORTED_MODULE_0__[\"render\"],\n  _canvas_vue_vue_type_template_id_7fa00f16_mpType_page__WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"],\n  false,\n  null,\n  null,\n  null,\n  false,\n  _canvas_vue_vue_type_template_id_7fa00f16_mpType_page__WEBPACK_IMPORTED_MODULE_0__[\"components\"],\n  renderjs\n)\n\ncomponent.options.__file = \"pages/canvas/canvas.vue\"\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBOEg7QUFDOUg7QUFDcUU7QUFDTDs7O0FBR2hFO0FBQzBMO0FBQzFMLGdCQUFnQixrTUFBVTtBQUMxQixFQUFFLHVGQUFNO0FBQ1IsRUFBRSw0RkFBTTtBQUNSLEVBQUUscUdBQWU7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUUsZ0dBQVU7QUFDWjtBQUNBOztBQUVBO0FBQ2UsZ0YiLCJmaWxlIjoiMTguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucywgcmVjeWNsYWJsZVJlbmRlciwgY29tcG9uZW50cyB9IGZyb20gXCIuL2NhbnZhcy52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9N2ZhMDBmMTYmbXBUeXBlPXBhZ2VcIlxudmFyIHJlbmRlcmpzXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL2NhbnZhcy52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmbXBUeXBlPXBhZ2VcIlxuZXhwb3J0ICogZnJvbSBcIi4vY2FudmFzLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZtcFR5cGU9cGFnZVwiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiFFOlxcXFxkb3dubG9hZFxcXFxIQnVpbGRlclhcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx2dWUtbG9hZGVyXFxcXGxpYlxcXFxydW50aW1lXFxcXGNvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsLFxuICBmYWxzZSxcbiAgY29tcG9uZW50cyxcbiAgcmVuZGVyanNcbilcblxuY29tcG9uZW50Lm9wdGlvbnMuX19maWxlID0gXCJwYWdlcy9jYW52YXMvY2FudmFzLnZ1ZVwiXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///18\n");

/***/ }),
/* 19 */
/*!***********************************************************************************************************!*\
  !*** C:/Users/猪儿虫啊/Desktop/HBuildX/rgb/pages/canvas/canvas.vue?vue&type=template&id=7fa00f16&mpType=page ***!
  \***********************************************************************************************************/
/*! exports provided: render, staticRenderFns, recyclableRender, components */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_canvas_vue_vue_type_template_id_7fa00f16_mpType_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--10-0!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/filter-modules-template.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!./canvas.vue?vue&type=template&id=7fa00f16&mpType=page */ 20);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_canvas_vue_vue_type_template_id_7fa00f16_mpType_page__WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_canvas_vue_vue_type_template_id_7fa00f16_mpType_page__WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "recyclableRender", function() { return _E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_canvas_vue_vue_type_template_id_7fa00f16_mpType_page__WEBPACK_IMPORTED_MODULE_0__["recyclableRender"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "components", function() { return _E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_canvas_vue_vue_type_template_id_7fa00f16_mpType_page__WEBPACK_IMPORTED_MODULE_0__["components"]; });



/***/ }),
/* 20 */

  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--10-0!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/filter-modules-template.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!C:/Users/猪儿虫啊/Desktop/HBuildX/rgb/pages/canvas/canvas.vue?vue&type=template&id=7fa00f16&mpType=page ***!

/*! exports provided: render, staticRenderFns, recyclableRender, components */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "recyclableRender", function() { return recyclableRender; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "components", function() { return components; });
var components
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "view",
    { staticClass: _vm._$s(0, "sc", "box"), attrs: { _i: 0 } },
    [
      _c("canvas", {
        style: _vm._$s(1, "s", {
          width: _vm.c_width + "px",
          height: _vm.c_height + "px"
        }),
        attrs: { id: "myCanvas", _i: 1 },
        on: {
          touchstart: _vm.startArt,
          touchmove: _vm.moveArt,
          touchcancel: _vm.cancelArt,
          touchend: _vm.endArt
        }
      }),
      _c("canvas", {
        style: _vm._$s(2, "s", {
          width: _vm.c_width + "px",
          height: _vm.c_height + "px"
        }),
        attrs: { id: "rgbCanvas", _i: 2 }
      }),
      _c(
        "view",
        { staticClass: _vm._$s(3, "sc", "btn-box"), attrs: { _i: 3 } },
        [
          _c("image", {
            staticClass: _vm._$s(4, "sc", "btn-img"),
            attrs: {
              src: _vm._$s(4, "a-src", __webpack_require__(/*! ../../static/last.svg */ 21)),
              _i: 4
            },
            on: { click: _vm.revoke }
          }),
          _c("button", {
            staticClass: _vm._$s(5, "sc", "btn"),
            attrs: { _i: 5 },
            on: { click: _vm.getRes }
          })
        ]
      ),
      _c("prompt", {
        ref: "prompt",
        style: _vm._$s(6, "s", {
          width: _vm.c_width + "px",
          height: _vm.c_height + 100 + "px"
        }),
        attrs: { title: "填写浓度", btn_cancel: "取消", _i: 6 },
        on: { onConfirm: _vm.onConfirm, onCancel: _vm.onCancel }
      })
    ],
    1
  )
}
var recyclableRender = false
var staticRenderFns = []
render._withStripped = true



/***/ }),
/* 21 */
/*!*********************************************************!*\
  !*** C:/Users/猪儿虫啊/Desktop/HBuildX/rgb/static/last.svg ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"static/img/last.9fa249c7.svg\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGlCQUFpQixxQkFBdUIiLCJmaWxlIjoiMjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJzdGF0aWMvaW1nL2xhc3QuOWZhMjQ5Yzcuc3ZnXCI7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///21\n");

/***/ }),
/* 22 */
/*!*****************************************************************************************************!*\
  !*** C:/Users/猪儿虫啊/Desktop/HBuildX/rgb/pages/canvas/canvas.vue?vue&type=script&lang=js&mpType=page ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_canvas_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-1!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/using-components.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!./canvas.vue?vue&type=script&lang=js&mpType=page */ 23);\n/* harmony import */ var _E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_canvas_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_canvas_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_canvas_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_canvas_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n /* harmony default export */ __webpack_exports__[\"default\"] = (_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_canvas_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0___default.a); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQWdvQixDQUFnQiwycEJBQUcsRUFBQyIsImZpbGUiOiIyMi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb2QgZnJvbSBcIi0hRTpcXFxcZG93bmxvYWRcXFxcSEJ1aWxkZXJYXFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXGJhYmVsLWxvYWRlclxcXFxsaWJcXFxcaW5kZXguanMhRTpcXFxcZG93bmxvYWRcXFxcSEJ1aWxkZXJYXFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay1wcmVwcm9jZXNzLWxvYWRlclxcXFxpbmRleC5qcz8/cmVmLS02LTEhRTpcXFxcZG93bmxvYWRcXFxcSEJ1aWxkZXJYXFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay11bmktYXBwLWxvYWRlclxcXFx1c2luZy1jb21wb25lbnRzLmpzIUU6XFxcXGRvd25sb2FkXFxcXEhCdWlsZGVyWFxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHZ1ZS1sb2FkZXJcXFxcbGliXFxcXGluZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9jYW52YXMudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJm1wVHlwZT1wYWdlXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hRTpcXFxcZG93bmxvYWRcXFxcSEJ1aWxkZXJYXFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXGJhYmVsLWxvYWRlclxcXFxsaWJcXFxcaW5kZXguanMhRTpcXFxcZG93bmxvYWRcXFxcSEJ1aWxkZXJYXFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay1wcmVwcm9jZXNzLWxvYWRlclxcXFxpbmRleC5qcz8/cmVmLS02LTEhRTpcXFxcZG93bmxvYWRcXFxcSEJ1aWxkZXJYXFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay11bmktYXBwLWxvYWRlclxcXFx1c2luZy1jb21wb25lbnRzLmpzIUU6XFxcXGRvd25sb2FkXFxcXEhCdWlsZGVyWFxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHZ1ZS1sb2FkZXJcXFxcbGliXFxcXGluZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9jYW52YXMudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJm1wVHlwZT1wYWdlXCIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///22\n");

/***/ }),
/* 23 */
/*!**********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-1!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/using-components.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!C:/Users/猪儿虫啊/Desktop/HBuildX/rgb/pages/canvas/canvas.vue?vue&type=script&lang=js&mpType=page ***!
  \**********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(__f__) {Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar _App = _interopRequireDefault(__webpack_require__(/*! ../../App.vue */ 9));\n\nvar _prompt = _interopRequireDefault(__webpack_require__(/*! ../../components/prompt.vue */ 24));\n\nvar _utils = __webpack_require__(/*! ../../common/utils.js */ 29);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _createForOfIteratorHelper(o) {if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) {var i = 0;var F = function F() {};return { s: F, n: function n() {if (i >= o.length) return { done: true };return { done: false, value: o[i++] };}, e: function e(_e) {throw _e;}, f: F };}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}var it,normalCompletion = true,didErr = false,err;return { s: function s() {it = o[Symbol.iterator]();}, n: function n() {var step = it.next();normalCompletion = step.done;return step;}, e: function e(_e2) {didErr = true;err = _e2;}, f: function f() {try {if (!normalCompletion && it.return != null) it.return();} finally {if (didErr) throw err;}} };}function _unsupportedIterableToArray(o, minLen) {if (!o) return;if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);var n = Object.prototype.toString.call(o).slice(8, -1);if (n === \"Object\" && o.constructor) n = o.constructor.name;if (n === \"Map\" || n === \"Set\") return Array.from(n);if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);}function _arrayLikeToArray(arr, len) {if (len == null || len > arr.length) len = arr.length;for (var i = 0, arr2 = new Array(len); i < len; i++) {arr2[i] = arr[i];}return arr2;}var _default =\n\n\n\n{\n  components: {\n    prompt: _prompt.default },\n\n  data: function data() {\n    return {\n      imgInfo: {},\n      ctx: null,\n      rgbctx: null,\n      c_width: 0,\n      c_height: 0,\n      startx: 0,\n      starty: 0,\n      endx: 0,\n      endy: 0,\n      rect: [],\n      rgbArr: [],\n      promptVal: \"\",\n      MIC: [] };\n\n  },\n  onReady: function onReady() {\n    this.rgbctx.draw();\n  },\n  onLoad: function onLoad() {\n    this.c_width = _App.default.globalData.windowWidth;\n    this.c_height = _App.default.globalData.windowHeight - 100;\n    this.imgInfo = _App.default.globalData.imgInfo;\n    this.ctx = uni.createCanvasContext('myCanvas');\n\n    this.rgbctx = uni.createCanvasContext('rgbCanvas');\n    this.rgbctx.drawImage(this.imgInfo.path, 0, 0, _App.default.globalData.windowWidth, this.c_height);\n\n  },\n  watch: {},\n  methods: {\n    revoke: function revoke() {// 撤销\n      if (this.rect.length >= 1) {\n        this.rect.splice(this.rect.length - 1, 1);\n        this.rgbArr.splice(this.rgbArr.length - 1, 1);\n        this.MIC.splice(this.MIC.length - 1, 1);\n        this.ctx.draw();var _iterator = _createForOfIteratorHelper(\n        this.rect),_step;try {for (_iterator.s(); !(_step = _iterator.n()).done;) {var item = _step.value;\n            this.ctx.setStrokeStyle('red');\n            this.ctx.strokeRect(item.startx, item.starty, item.endx - item.startx, item.endy - item.starty);\n            this.ctx.draw(true);\n          }} catch (err) {_iterator.e(err);} finally {_iterator.f();}\n      } else {\n        // this.uni.showToast({\n        // \ttitle: '',\n        // \ticon:'none',\n        // });\n      }\n\n    },\n    getRes: function getRes() {\n      _App.default.globalData.MIC = this.MIC;\n      _App.default.globalData.rgbArr = this.rgbArr;\n      _App.default.globalData.rect = this.rect;\n      __f__(\"log\", _App.default.globalData.MIC, \" at pages/canvas/canvas.vue:82\");\n      uni.navigateTo({\n        url: '../res/res' });\n\n    },\n    getRGB: function getRGB() {\n      var that = this;\n      uni.canvasGetImageData({\n        canvasId: 'rgbCanvas',\n        x: that.startx,\n        y: that.starty,\n        width: that.endx - that.startx,\n        height: that.endy - that.starty,\n        success: function success(res) {\n          // console.log(res.data)\n          var obj = (0, _utils.dataGet)(res.data);\n          that.rgbArr.push(obj);\n          // that.startx = 0,\n          // that.starty = 0,\n          // that.endx = 0,\n          // that.endy = 0\n        },\n        fail: function fail(err) {\n\n        } },\n      that);\n    },\n    startArt: function startArt(e) {\n      this.startx = Math.round(e.touches[0].x);\n      this.starty = Math.round(e.touches[0].y);\n    },\n    moveArt: function moveArt(e) {\n      this.endx = Math.round(e.touches[0].x);\n      this.endy = Math.round(e.touches[0].y);\n      this.ctx.setStrokeStyle('red');\n      this.ctx.strokeRect(this.startx, this.starty, this.endx - this.startx, this.endy - this.starty);\n      this.ctx.draw();\n      // for (let item of this.rect) {\t// 性能太差\n      // \tthis.ctx.strokeRect(item.startx, item.starty, item.endx - item.startx, item.endy - item.starty)\n      // \tthis.ctx.draw(true)\n      // }\n    },\n    endArt: function endArt(e) {\n      this.ctx.closePath();\n      this.rect.push({\n        startx: this.startx,\n        starty: this.starty,\n        endx: this.endx,\n        endy: this.endy });\n\n      this.ctx.draw();var _iterator2 = _createForOfIteratorHelper(\n      this.rect),_step2;try {for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {var item = _step2.value;\n          this.ctx.setStrokeStyle('red');\n          this.ctx.strokeRect(item.startx, item.starty, item.endx - item.startx, item.endy - item.starty);\n          this.ctx.draw(true);\n        }\n\n        // 填这次绘制区域的浓度\n      } catch (err) {_iterator2.e(err);} finally {_iterator2.f();}this.$refs.prompt.show();\n    },\n    cancelArt: function cancelArt() {\n      __f__(\"log\", 'cancel', \" at pages/canvas/canvas.vue:143\");\n    },\n    onConfirm: function onConfirm(e) {\n      __f__(\"log\", e, \" at pages/canvas/canvas.vue:146\");\n      var _cost = e;\n      if (_cost == '' || isNaN(_cost)) {\n        uni.showToast({\n          title: '请输入有效浓度',\n          icon: 'none' });\n\n        return;\n      } else {\n        this.promptVal = e;\n        this.$refs.prompt.hide();\n        this.getRGB();\n        this.MIC.push(e);\n      }\n    },\n    onCancel: function onCancel() {\n      this.$refs.prompt.hide();\n      this.$refs.prompt.cost = '';\n      this.promptVal = \"\";\n      this.rect.splice(this.rect.length - 1, 1);\n      this.ctx.draw();var _iterator3 = _createForOfIteratorHelper(\n      this.rect),_step3;try {for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {var item = _step3.value;\n          this.ctx.setStrokeStyle('red');\n          this.ctx.strokeRect(item.startx, item.starty, item.endx - item.startx, item.endy - item.starty);\n          this.ctx.draw(true);\n        }} catch (err) {_iterator3.e(err);} finally {_iterator3.f();}\n    } } };exports.default = _default;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js */ 8)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///23\n");

/***/ }),
/* 24 */
/*!***************************************************************!*\
  !*** C:/Users/猪儿虫啊/Desktop/HBuildX/rgb/components/prompt.vue ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _prompt_vue_vue_type_template_id_6ad9085f___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./prompt.vue?vue&type=template&id=6ad9085f& */ 25);\n/* harmony import */ var _prompt_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./prompt.vue?vue&type=script&lang=js& */ 27);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _prompt_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _prompt_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n/* harmony import */ var _E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js */ 12);\n\nvar renderjs\n\n\n\n\n/* normalize component */\n\nvar component = Object(_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\n  _prompt_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  _prompt_vue_vue_type_template_id_6ad9085f___WEBPACK_IMPORTED_MODULE_0__[\"render\"],\n  _prompt_vue_vue_type_template_id_6ad9085f___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"],\n  false,\n  null,\n  null,\n  null,\n  false,\n  _prompt_vue_vue_type_template_id_6ad9085f___WEBPACK_IMPORTED_MODULE_0__[\"components\"],\n  renderjs\n)\n\ncomponent.options.__file = \"components/prompt.vue\"\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBbUg7QUFDbkg7QUFDMEQ7QUFDTDs7O0FBR3JEO0FBQzBMO0FBQzFMLGdCQUFnQixrTUFBVTtBQUMxQixFQUFFLDRFQUFNO0FBQ1IsRUFBRSxpRkFBTTtBQUNSLEVBQUUsMEZBQWU7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUUscUZBQVU7QUFDWjtBQUNBOztBQUVBO0FBQ2UsZ0YiLCJmaWxlIjoiMjQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucywgcmVjeWNsYWJsZVJlbmRlciwgY29tcG9uZW50cyB9IGZyb20gXCIuL3Byb21wdC52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NmFkOTA4NWYmXCJcbnZhciByZW5kZXJqc1xuaW1wb3J0IHNjcmlwdCBmcm9tIFwiLi9wcm9tcHQudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5leHBvcnQgKiBmcm9tIFwiLi9wcm9tcHQudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiFFOlxcXFxkb3dubG9hZFxcXFxIQnVpbGRlclhcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx2dWUtbG9hZGVyXFxcXGxpYlxcXFxydW50aW1lXFxcXGNvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsLFxuICBmYWxzZSxcbiAgY29tcG9uZW50cyxcbiAgcmVuZGVyanNcbilcblxuY29tcG9uZW50Lm9wdGlvbnMuX19maWxlID0gXCJjb21wb25lbnRzL3Byb21wdC52dWVcIlxuZXhwb3J0IGRlZmF1bHQgY29tcG9uZW50LmV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///24\n");

/***/ }),
/* 25 */
/*!**********************************************************************************************!*\
  !*** C:/Users/猪儿虫啊/Desktop/HBuildX/rgb/components/prompt.vue?vue&type=template&id=6ad9085f& ***!
  \**********************************************************************************************/
/*! exports provided: render, staticRenderFns, recyclableRender, components */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_prompt_vue_vue_type_template_id_6ad9085f___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--10-0!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/filter-modules-template.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!./prompt.vue?vue&type=template&id=6ad9085f& */ 26);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_prompt_vue_vue_type_template_id_6ad9085f___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_prompt_vue_vue_type_template_id_6ad9085f___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "recyclableRender", function() { return _E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_prompt_vue_vue_type_template_id_6ad9085f___WEBPACK_IMPORTED_MODULE_0__["recyclableRender"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "components", function() { return _E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_prompt_vue_vue_type_template_id_6ad9085f___WEBPACK_IMPORTED_MODULE_0__["components"]; });



/***/ }),
/* 26 */

  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--10-0!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/filter-modules-template.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!C:/Users/猪儿虫啊/Desktop/HBuildX/rgb/components/prompt.vue?vue&type=template&id=6ad9085f& ***!

/*! exports provided: render, staticRenderFns, recyclableRender, components */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "recyclableRender", function() { return recyclableRender; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "components", function() { return components; });
var components
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "view",
    {
      staticClass: _vm._$s(0, "sc", "prompt-box"),
      attrs: { hidden: _vm._$s(0, "a-hidden", _vm.isHidden), _i: 0 }
    },
    [
      _c(
        "view",
        {
          staticClass: _vm._$s(1, "sc", "prompt-content contentFontColor"),
          attrs: { _i: 1 }
        },
        [
          _c(
            "view",
            { staticClass: _vm._$s(2, "sc", "prompt-title"), attrs: { _i: 2 } },
            [_vm._v(_vm._$s(2, "t0-0", _vm._s(_vm.title)))]
          ),
          _c(
            "view",
            { staticClass: _vm._$s(3, "sc", "prompt-text"), attrs: { _i: 3 } },
            [_vm._v(_vm._$s(3, "t0-0", _vm._s(_vm.text)))]
          ),
          _c("input", {
            staticClass: _vm._$s(4, "sc", "prompt-input"),
            attrs: { value: _vm._$s(4, "a-value", _vm.cost), _i: 4 },
            on: { input: _vm._input }
          }),
          _c(
            "view",
            {
              staticClass: _vm._$s(5, "sc", "prompt-btn-group"),
              attrs: { _i: 5 }
            },
            [
              _c(
                "button",
                {
                  staticClass: _vm._$s(
                    6,
                    "sc",
                    "btn-item prompt-cancel-btn contentFontColor"
                  ),
                  attrs: { _i: 6 },
                  on: { click: _vm._cancel }
                },
                [_vm._v(_vm._$s(6, "t0-0", _vm._s(_vm.btn_cancel)))]
              ),
              _c(
                "button",
                {
                  staticClass: _vm._$s(7, "sc", "btn-item prompt-certain-btn"),
                  attrs: { _i: 7 },
                  on: { click: _vm._confirm }
                },
                [_vm._v(_vm._$s(7, "t0-0", _vm._s(_vm.btn_certain)))]
              )
            ]
          )
        ]
      )
    ]
  )
}
var recyclableRender = false
var staticRenderFns = []
render._withStripped = true



/***/ }),
/* 27 */
/*!****************************************************************************************!*\
  !*** C:/Users/猪儿虫啊/Desktop/HBuildX/rgb/components/prompt.vue?vue&type=script&lang=js& ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_prompt_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-1!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/using-components.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!./prompt.vue?vue&type=script&lang=js& */ 28);\n/* harmony import */ var _E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_prompt_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_prompt_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_prompt_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_prompt_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n /* harmony default export */ __webpack_exports__[\"default\"] = (_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_prompt_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQXFuQixDQUFnQixncEJBQUcsRUFBQyIsImZpbGUiOiIyNy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb2QgZnJvbSBcIi0hRTpcXFxcZG93bmxvYWRcXFxcSEJ1aWxkZXJYXFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXGJhYmVsLWxvYWRlclxcXFxsaWJcXFxcaW5kZXguanMhRTpcXFxcZG93bmxvYWRcXFxcSEJ1aWxkZXJYXFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay1wcmVwcm9jZXNzLWxvYWRlclxcXFxpbmRleC5qcz8/cmVmLS02LTEhRTpcXFxcZG93bmxvYWRcXFxcSEJ1aWxkZXJYXFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay11bmktYXBwLWxvYWRlclxcXFx1c2luZy1jb21wb25lbnRzLmpzIUU6XFxcXGRvd25sb2FkXFxcXEhCdWlsZGVyWFxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHZ1ZS1sb2FkZXJcXFxcbGliXFxcXGluZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wcm9tcHQudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIUU6XFxcXGRvd25sb2FkXFxcXEhCdWlsZGVyWFxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxiYWJlbC1sb2FkZXJcXFxcbGliXFxcXGluZGV4LmpzIUU6XFxcXGRvd25sb2FkXFxcXEhCdWlsZGVyWFxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stcHJlcHJvY2Vzcy1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tNi0xIUU6XFxcXGRvd25sb2FkXFxcXEhCdWlsZGVyWFxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stdW5pLWFwcC1sb2FkZXJcXFxcdXNpbmctY29tcG9uZW50cy5qcyFFOlxcXFxkb3dubG9hZFxcXFxIQnVpbGRlclhcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx2dWUtbG9hZGVyXFxcXGxpYlxcXFxpbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vcHJvbXB0LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///27\n");

/***/ }),
/* 28 */
/*!*********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-1!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/using-components.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!C:/Users/猪儿虫啊/Desktop/HBuildX/rgb/components/prompt.vue?vue&type=script&lang=js& ***!
  \*********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(__f__) {Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0; //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default =\n{\n  data: function data() {\n    return {\n      multipleSlots: true, // 在组件定义时的选项中启用多slot支持\n      isHidden: true,\n      cost: '' };\n\n  },\n  props: {\n    title: {\n      type: String,\n      default: '提示' },\n\n    btn_cancel: {\n      type: String,\n      default: '取消' },\n\n    btn_certain: {\n      type: String,\n      default: '确定' },\n\n    text: {\n      type: String,\n      default: '' } },\n\n\n  watch: {},\n\n\n  methods: {\n    hide: function hide() {\n      this.isHidden = true;\n    },\n    show: function show(e) {\n      this.isHidden = false;\n      if (e != null && e != undefined && e != \"\") {\n        this.text = e;\n      }\n    },\n    /*\n        * 内部私有方法建议以下划线开头\n        * triggerEvent 用于触发事件\n        */\n    _cancel: function _cancel() {\n      //触发cancel事件，即在外部，在组件上绑定cancel事件即可，bind:cancel，像绑定tap一样\n      this.cost = '';\n      this.hide();\n      this.$emit('onCancel');\n    },\n    _confirm: function _confirm() {\n      //this.triggerEvent(\"confirm\");\n      __f__(\"log\", this.cost, \" at components/prompt.vue:68\");\n      this.$emit('onConfirm', this.cost);\n      this.cost = '';\n    },\n    _input: function _input(e) {\n      //将参数传出去，这样在getInput函数中可以通过e去获得必要的参数\n      //this.triggerEvent(\"getInput\",e.detail);\n      this.cost = e.detail.value;\n    } } };exports.default = _default;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js */ 8)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vY29tcG9uZW50cy9wcm9tcHQudnVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFnQkE7QUFDQSxNQURBLGtCQUNBO0FBQ0E7QUFDQSx5QkFEQSxFQUNBO0FBQ0Esb0JBRkE7QUFHQSxjQUhBOztBQUtBLEdBUEE7QUFRQTtBQUNBO0FBQ0Esa0JBREE7QUFFQSxtQkFGQSxFQURBOztBQUtBO0FBQ0Esa0JBREE7QUFFQSxtQkFGQSxFQUxBOztBQVNBO0FBQ0Esa0JBREE7QUFFQSxtQkFGQSxFQVRBOztBQWFBO0FBQ0Esa0JBREE7QUFFQSxpQkFGQSxFQWJBLEVBUkE7OztBQTBCQSxXQTFCQTs7O0FBNkJBO0FBQ0E7QUFDQTtBQUNBLEtBSEE7QUFJQSxRQUpBLGdCQUlBLENBSkEsRUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FUQTtBQVVBOzs7O0FBSUEsV0FkQSxxQkFjQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FuQkE7QUFvQkEsWUFwQkEsc0JBb0JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQXpCQTtBQTBCQSxVQTFCQSxrQkEwQkEsQ0ExQkEsRUEwQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQTlCQSxFQTdCQSxFIiwiZmlsZSI6IjI4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiPCEtLSBwcm9tcHTnu4Tku7YgLS0+XHJcbjwhLS0gcHJvbXB0IC0tPlxyXG48dGVtcGxhdGU+XHJcblx0PHZpZXcgY2xhc3M9XCJwcm9tcHQtYm94XCIgOmhpZGRlbj1cImlzSGlkZGVuXCI+XHJcblx0XHQ8dmlldyBjbGFzcz1cInByb21wdC1jb250ZW50IGNvbnRlbnRGb250Q29sb3JcIj5cclxuXHRcdFx0PHZpZXcgY2xhc3M9XCJwcm9tcHQtdGl0bGVcIj57e3RpdGxlfX08L3ZpZXc+XHJcblx0XHRcdDx2aWV3IGNsYXNzPVwicHJvbXB0LXRleHRcIj57e3RleHR9fTwvdmlldz5cclxuXHRcdFx0PGlucHV0IHR5cGU9XCJudW1iZXJcIiBjbGFzcz1cInByb21wdC1pbnB1dFwiIEBpbnB1dD1cIl9pbnB1dFwiIDp2YWx1ZT1cImNvc3RcIiAvPlxyXG5cdFx0XHQ8dmlldyBjbGFzcz1cInByb21wdC1idG4tZ3JvdXBcIj5cclxuXHRcdFx0XHQ8YnV0dG9uIGNsYXNzPVwiYnRuLWl0ZW0gcHJvbXB0LWNhbmNlbC1idG4gY29udGVudEZvbnRDb2xvclwiIEB0YXA9XCJfY2FuY2VsXCI+e3tidG5fY2FuY2VsfX08L2J1dHRvbj5cclxuXHRcdFx0XHQ8YnV0dG9uIGNsYXNzPVwiYnRuLWl0ZW0gcHJvbXB0LWNlcnRhaW4tYnRuXCIgQHRhcD1cIl9jb25maXJtXCI+e3tidG5fY2VydGFpbn19PC9idXR0b24+XHJcblx0XHRcdDwvdmlldz5cclxuXHRcdDwvdmlldz5cclxuXHQ8L3ZpZXc+XHJcbjwvdGVtcGxhdGU+XHJcbjxzY3JpcHQ+XHJcblx0ZXhwb3J0IGRlZmF1bHQge1xyXG5cdFx0ZGF0YSgpIHtcclxuXHRcdFx0cmV0dXJuIHtcclxuXHRcdFx0XHRtdWx0aXBsZVNsb3RzOiB0cnVlLCAvLyDlnKjnu4Tku7blrprkuYnml7bnmoTpgInpobnkuK3lkK/nlKjlpJpzbG905pSv5oyBXHJcblx0XHRcdFx0aXNIaWRkZW46IHRydWUsXHJcblx0XHRcdFx0Y29zdDogJydcclxuXHRcdFx0fTtcclxuXHRcdH0sXHJcblx0XHRwcm9wczoge1xyXG5cdFx0XHR0aXRsZToge1xyXG5cdFx0XHRcdHR5cGU6IFN0cmluZyxcclxuXHRcdFx0XHRkZWZhdWx0OiAn5o+Q56S6J1xyXG5cdFx0XHR9LFxyXG5cdFx0XHRidG5fY2FuY2VsOiB7XHJcblx0XHRcdFx0dHlwZTogU3RyaW5nLFxyXG5cdFx0XHRcdGRlZmF1bHQ6ICflj5bmtognXHJcblx0XHRcdH0sXHJcblx0XHRcdGJ0bl9jZXJ0YWluOiB7XHJcblx0XHRcdFx0dHlwZTogU3RyaW5nLFxyXG5cdFx0XHRcdGRlZmF1bHQ6ICfnoa7lrponXHJcblx0XHRcdH0sXHJcblx0XHRcdHRleHQ6IHtcclxuXHRcdFx0XHR0eXBlOiBTdHJpbmcsXHJcblx0XHRcdFx0ZGVmYXVsdDogJycsXHJcblx0XHRcdH1cclxuXHRcdH0sXHJcblx0XHR3YXRjaDoge1xyXG5cclxuXHRcdH0sXHJcblx0XHRtZXRob2RzOiB7XHJcblx0XHRcdGhpZGU6IGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdHRoaXMuaXNIaWRkZW4gPSB0cnVlO1xyXG5cdFx0XHR9LFxyXG5cdFx0XHRzaG93KGUpIHtcclxuXHRcdFx0XHR0aGlzLmlzSGlkZGVuID0gZmFsc2U7XHJcblx0XHRcdFx0aWYgKGUgIT0gbnVsbCAmJiBlICE9IHVuZGVmaW5lZCAmJiBlICE9IFwiXCIpIHtcclxuXHRcdFx0XHRcdHRoaXMudGV4dCA9IGU7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9LFxyXG5cdFx0XHQvKlxyXG5cdFx0XHQgKiDlhoXpg6jnp4HmnInmlrnms5Xlu7rorq7ku6XkuIvliJLnur/lvIDlpLRcclxuXHRcdFx0ICogdHJpZ2dlckV2ZW50IOeUqOS6juinpuWPkeS6i+S7tlxyXG5cdFx0XHQgKi9cclxuXHRcdFx0X2NhbmNlbCgpIHtcclxuXHRcdFx0XHQvL+inpuWPkWNhbmNlbOS6i+S7tu+8jOWNs+WcqOWklumDqO+8jOWcqOe7hOS7tuS4iue7keWummNhbmNlbOS6i+S7tuWNs+WPr++8jGJpbmQ6Y2FuY2Vs77yM5YOP57uR5a6adGFw5LiA5qC3XHJcblx0XHRcdFx0dGhpcy5jb3N0ID0gJyc7XHJcblx0XHRcdFx0dGhpcy5oaWRlKCk7XHJcblx0XHRcdFx0dGhpcy4kZW1pdCgnb25DYW5jZWwnKTtcclxuXHRcdFx0fSxcclxuXHRcdFx0X2NvbmZpcm0oKSB7XHJcblx0XHRcdFx0Ly90aGlzLnRyaWdnZXJFdmVudChcImNvbmZpcm1cIik7XHJcblx0XHRcdFx0Y29uc29sZS5sb2codGhpcy5jb3N0KTtcclxuXHRcdFx0XHR0aGlzLiRlbWl0KCdvbkNvbmZpcm0nLCB0aGlzLmNvc3QpO1xyXG5cdFx0XHRcdHRoaXMuY29zdCA9ICcnO1xyXG5cdFx0XHR9LFxyXG5cdFx0XHRfaW5wdXQoZSkge1xyXG5cdFx0XHRcdC8v5bCG5Y+C5pWw5Lyg5Ye65Y6777yM6L+Z5qC35ZyoZ2V0SW5wdXTlh73mlbDkuK3lj6/ku6XpgJrov4dl5Y676I635b6X5b+F6KaB55qE5Y+C5pWwXHJcblx0XHRcdFx0Ly90aGlzLnRyaWdnZXJFdmVudChcImdldElucHV0XCIsZS5kZXRhaWwpO1xyXG5cdFx0XHRcdHRoaXMuY29zdCA9IGUuZGV0YWlsLnZhbHVlO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fVxyXG48L3NjcmlwdD5cclxuXHJcbjxzdHlsZT5cclxuXHQvKiBjb21wb25lbnRzL3Zhcy1wcm9tcHQvdmFzLXByb21wdC53eHNzICovXHJcblx0LnByb21wdC1ib3gge1xyXG5cdFx0cG9zaXRpb246IGFic29sdXRlO1xyXG5cdFx0bGVmdDogMDtcclxuXHRcdHRvcDogMDtcclxuXHRcdHdpZHRoOiAxMDAlO1xyXG5cdFx0aGVpZ2h0OiAxMDAlO1xyXG5cdFx0ei1pbmRleDogMTE7XHJcblx0XHRiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuNSk7XHJcblx0XHRvcGFjaXR5OiAuODU7XHJcblx0fVxyXG5cclxuXHQucHJvbXB0LWNvbnRlbnQge1xyXG5cdFx0cG9zaXRpb246IGFic29sdXRlO1xyXG5cdFx0bGVmdDogNTAlO1xyXG5cdFx0dG9wOiA0MCU7XHJcblx0XHR3aWR0aDogODAlO1xyXG5cdFx0bWF4LXdpZHRoOiA2MDBycHg7XHJcblx0XHRib3JkZXI6IDJycHggc29saWQgI2NjYztcclxuXHRcdGJvcmRlci1yYWRpdXM6IDEwcnB4O1xyXG5cdFx0Ym94LXNpemluZzogYm9yZHJlLWJveDtcclxuXHRcdHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xyXG5cdFx0b3ZlcmZsb3c6IGhpZGRlbjtcclxuXHRcdGJhY2tncm91bmQ6ICNmZmY7XHJcblx0fVxyXG5cclxuXHQucHJvbXB0LXRpdGxlIHtcclxuXHRcdHdpZHRoOiAxMDAlO1xyXG5cdFx0cGFkZGluZzogMjBycHg7XHJcblx0XHR0ZXh0LWFsaWduOiBjZW50ZXI7XHJcblx0XHRmb250LXNpemU6IDQwcnB4O1xyXG5cdFx0Ym9yZGVyLWJvdHRvbTogMnJweCBzb2xpZCBncmF5O1xyXG5cdH1cclxuXHJcblx0LnByb21wdC1pbnB1dCB7XHJcblx0XHRtYXJnaW46IDglO1xyXG5cdFx0cGFkZGluZzogMTBycHggMTVycHg7XHJcblx0XHR3aWR0aDogODAlO1xyXG5cdFx0aGVpZ2h0OiA4NXJweDtcclxuXHRcdGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcblx0XHRib3JkZXItcmFkaXVzOiAxMHJweDtcclxuXHR9XHJcblxyXG5cdC5wcm9tcHQtYnRuLWdyb3VwIHtcclxuXHRcdGRpc3BsYXk6IGZsZXg7XHJcblx0fVxyXG5cclxuXHQuYnRuLWl0ZW0ge1xyXG5cdFx0d2lkdGg6IDM1JTtcclxuXHRcdG1hcmdpbi1ib3R0b206IDIwcnB4O1xyXG5cdFx0aGVpZ2h0OiAxMDBycHg7XHJcblx0XHRsaW5lLWhlaWdodDogMTAwcnB4O1xyXG5cdFx0YmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcblx0XHRqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcclxuXHR9XHJcblxyXG5cdC5wcm9tcHQtY2VydGFpbi1idG4ge1xyXG5cdFx0Y29sb3I6IHdoaXRlO1xyXG5cdFx0YmFja2dyb3VuZC1jb2xvcjogIzRGRUJERTtcclxuXHR9XHJcblxyXG5cdC5wcm9tcHQtY2FuY2VsLWJ0biB7XHJcblx0XHRib3JkZXI6IDFweCBzb2xpZCAjNEZFQkRFO1xyXG5cdH1cclxuXHJcblx0LmNvbnRlbnRGb250Q29sb3Ige1xyXG5cdFx0Y29sb3I6ICM4Njg2ODY7XHJcblx0fVxyXG5cclxuXHQucHJvbXB0LXRleHQge1xyXG5cdFx0bWFyZ2luLXRvcDogMTVycHg7XHJcblx0XHRmb250LXNpemU6IDM4cnB4O1xyXG5cdH1cclxuPC9zdHlsZT5cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///28\n");

/***/ }),
/* 29 */
/*!*********************************************************!*\
  !*** C:/Users/猪儿虫啊/Desktop/HBuildX/rgb/common/utils.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(__f__) {Object.defineProperty(exports, \"__esModule\", { value: true });exports.dataGet = void 0;var dataGet = function dataGet(arr) {\n  var itemNum = arr.length / 4;\n  var rSum = 0,\n  gSum = 0,\n  bSum = 0;\n  __f__(\"log\", itemNum, \" at common/utils.js:6\");\n  for (var i = 0; i < arr.length; i++) {\n    if (i % 4 == 0) {\n      rSum += arr[i];\n      gSum += arr[i + 1];\n      bSum += arr[i + 2];\n\n    } else {\n      continue;\n    }\n  }\n  return {\n    r: rSum / itemNum,\n    g: gSum / itemNum,\n    b: bSum / itemNum };\n\n};exports.dataGet = dataGet;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js */ 8)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vY29tbW9uL3V0aWxzLmpzIl0sIm5hbWVzIjpbImRhdGFHZXQiLCJhcnIiLCJpdGVtTnVtIiwibGVuZ3RoIiwiclN1bSIsImdTdW0iLCJiU3VtIiwiaSIsInIiLCJnIiwiYiJdLCJtYXBwaW5ncyI6Im9JQUFPLElBQU1BLE9BQU8sR0FBRyxTQUFWQSxPQUFVLENBQVNDLEdBQVQsRUFBYztBQUNwQyxNQUFJQyxPQUFPLEdBQUdELEdBQUcsQ0FBQ0UsTUFBSixHQUFhLENBQTNCO0FBQ0EsTUFBSUMsSUFBSSxHQUFHLENBQVg7QUFDQ0MsTUFBSSxHQUFHLENBRFI7QUFFQ0MsTUFBSSxHQUFHLENBRlI7QUFHQSxlQUFZSixPQUFaO0FBQ0EsT0FBSyxJQUFJSyxDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHTixHQUFHLENBQUNFLE1BQXhCLEVBQWdDSSxDQUFDLEVBQWpDLEVBQXFDO0FBQ3BDLFFBQUlBLENBQUMsR0FBRyxDQUFKLElBQVMsQ0FBYixFQUFnQjtBQUNmSCxVQUFJLElBQUlILEdBQUcsQ0FBQ00sQ0FBRCxDQUFYO0FBQ0FGLFVBQUksSUFBSUosR0FBRyxDQUFDTSxDQUFDLEdBQUcsQ0FBTCxDQUFYO0FBQ0FELFVBQUksSUFBSUwsR0FBRyxDQUFDTSxDQUFDLEdBQUcsQ0FBTCxDQUFYOztBQUVBLEtBTEQsTUFLTztBQUNOO0FBQ0E7QUFDRDtBQUNELFNBQU87QUFDTkMsS0FBQyxFQUFFSixJQUFJLEdBQUdGLE9BREo7QUFFTk8sS0FBQyxFQUFFSixJQUFJLEdBQUdILE9BRko7QUFHTlEsS0FBQyxFQUFFSixJQUFJLEdBQUdKLE9BSEosRUFBUDs7QUFLQSxDQXJCTSxDIiwiZmlsZSI6IjI5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGRhdGFHZXQgPSBmdW5jdGlvbihhcnIpIHtcclxuXHRsZXQgaXRlbU51bSA9IGFyci5sZW5ndGggLyA0XHJcblx0bGV0IHJTdW0gPSAwLFxyXG5cdFx0Z1N1bSA9IDAsXHJcblx0XHRiU3VtID0gMDtcclxuXHRjb25zb2xlLmxvZyhpdGVtTnVtKVxyXG5cdGZvciAobGV0IGkgPSAwOyBpIDwgYXJyLmxlbmd0aDsgaSsrKSB7XHJcblx0XHRpZiAoaSAlIDQgPT0gMCkge1xyXG5cdFx0XHRyU3VtICs9IGFycltpXVxyXG5cdFx0XHRnU3VtICs9IGFycltpICsgMV1cclxuXHRcdFx0YlN1bSArPSBhcnJbaSArIDJdXHJcblxyXG5cdFx0fSBlbHNlIHtcclxuXHRcdFx0Y29udGludWU7XHJcblx0XHR9XHJcblx0fVxyXG5cdHJldHVybiB7XHJcblx0XHRyOiByU3VtIC8gaXRlbU51bSxcclxuXHRcdGc6IGdTdW0gLyBpdGVtTnVtLFxyXG5cdFx0YjogYlN1bSAvIGl0ZW1OdW1cclxuXHR9XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///29\n");

/***/ }),
/* 30 */
/*!***************************************************************************!*\
  !*** C:/Users/猪儿虫啊/Desktop/HBuildX/rgb/pages/chart/chart.vue?mpType=page ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _chart_vue_vue_type_template_id_7607ff54_mpType_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chart.vue?vue&type=template&id=7607ff54&mpType=page */ 31);\n/* harmony import */ var _chart_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chart.vue?vue&type=script&lang=js&mpType=page */ 33);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _chart_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _chart_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n/* harmony import */ var _E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js */ 12);\n\nvar renderjs\n\n\n\n\n/* normalize component */\n\nvar component = Object(_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\n  _chart_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  _chart_vue_vue_type_template_id_7607ff54_mpType_page__WEBPACK_IMPORTED_MODULE_0__[\"render\"],\n  _chart_vue_vue_type_template_id_7607ff54_mpType_page__WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"],\n  false,\n  null,\n  null,\n  null,\n  false,\n  _chart_vue_vue_type_template_id_7607ff54_mpType_page__WEBPACK_IMPORTED_MODULE_0__[\"components\"],\n  renderjs\n)\n\ncomponent.options.__file = \"pages/chart/chart.vue\"\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBNkg7QUFDN0g7QUFDb0U7QUFDTDs7O0FBRy9EO0FBQzBMO0FBQzFMLGdCQUFnQixrTUFBVTtBQUMxQixFQUFFLHNGQUFNO0FBQ1IsRUFBRSwyRkFBTTtBQUNSLEVBQUUsb0dBQWU7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUUsK0ZBQVU7QUFDWjtBQUNBOztBQUVBO0FBQ2UsZ0YiLCJmaWxlIjoiMzAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucywgcmVjeWNsYWJsZVJlbmRlciwgY29tcG9uZW50cyB9IGZyb20gXCIuL2NoYXJ0LnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD03NjA3ZmY1NCZtcFR5cGU9cGFnZVwiXG52YXIgcmVuZGVyanNcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vY2hhcnQudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJm1wVHlwZT1wYWdlXCJcbmV4cG9ydCAqIGZyb20gXCIuL2NoYXJ0LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZtcFR5cGU9cGFnZVwiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiFFOlxcXFxkb3dubG9hZFxcXFxIQnVpbGRlclhcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx2dWUtbG9hZGVyXFxcXGxpYlxcXFxydW50aW1lXFxcXGNvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsLFxuICBmYWxzZSxcbiAgY29tcG9uZW50cyxcbiAgcmVuZGVyanNcbilcblxuY29tcG9uZW50Lm9wdGlvbnMuX19maWxlID0gXCJwYWdlcy9jaGFydC9jaGFydC52dWVcIlxuZXhwb3J0IGRlZmF1bHQgY29tcG9uZW50LmV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///30\n");

/***/ }),
/* 31 */
/*!*********************************************************************************************************!*\
  !*** C:/Users/猪儿虫啊/Desktop/HBuildX/rgb/pages/chart/chart.vue?vue&type=template&id=7607ff54&mpType=page ***!
  \*********************************************************************************************************/
/*! exports provided: render, staticRenderFns, recyclableRender, components */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_chart_vue_vue_type_template_id_7607ff54_mpType_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--10-0!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/filter-modules-template.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!./chart.vue?vue&type=template&id=7607ff54&mpType=page */ 32);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_chart_vue_vue_type_template_id_7607ff54_mpType_page__WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_chart_vue_vue_type_template_id_7607ff54_mpType_page__WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "recyclableRender", function() { return _E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_chart_vue_vue_type_template_id_7607ff54_mpType_page__WEBPACK_IMPORTED_MODULE_0__["recyclableRender"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "components", function() { return _E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_chart_vue_vue_type_template_id_7607ff54_mpType_page__WEBPACK_IMPORTED_MODULE_0__["components"]; });



/***/ }),
/* 32 */
/*!*************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--10-0!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/filter-modules-template.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!C:/Users/猪儿虫啊/Desktop/HBuildX/rgb/pages/chart/chart.vue?vue&type=template&id=7607ff54&mpType=page ***!

/*! exports provided: render, staticRenderFns, recyclableRender, components */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "recyclableRender", function() { return recyclableRender; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "components", function() { return components; });
var components
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "view",
    {
      staticClass: _vm._$s(0, "sc", "qiun-charts"),
      style: _vm._$s(0, "s", {
        width: _vm.windowWidth + "px",
        height: "300px"
      }),
      attrs: { _i: 0 }
    },
    [
      _c("canvas", {
        style: _vm._$s(1, "s", {
          width: _vm.windowWidth + "px",
          height: "300px"
        }),
        attrs: { id: "canvasColumn", _i: 1 }
      })
    ]
  )
}
var recyclableRender = false
var staticRenderFns = []
render._withStripped = true



/***/ }),
/* 33 */
/*!***************************************************************************************************!*\
  !*** C:/Users/猪儿虫啊/Desktop/HBuildX/rgb/pages/chart/chart.vue?vue&type=script&lang=js&mpType=page ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_chart_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-1!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/using-components.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!./chart.vue?vue&type=script&lang=js&mpType=page */ 34);\n/* harmony import */ var _E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_chart_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_chart_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_chart_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_chart_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n /* harmony default export */ __webpack_exports__[\"default\"] = (_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_E_download_HBuilderX_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_chart_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0___default.a); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQStuQixDQUFnQiwwcEJBQUcsRUFBQyIsImZpbGUiOiIzMy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb2QgZnJvbSBcIi0hRTpcXFxcZG93bmxvYWRcXFxcSEJ1aWxkZXJYXFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXGJhYmVsLWxvYWRlclxcXFxsaWJcXFxcaW5kZXguanMhRTpcXFxcZG93bmxvYWRcXFxcSEJ1aWxkZXJYXFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay1wcmVwcm9jZXNzLWxvYWRlclxcXFxpbmRleC5qcz8/cmVmLS02LTEhRTpcXFxcZG93bmxvYWRcXFxcSEJ1aWxkZXJYXFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay11bmktYXBwLWxvYWRlclxcXFx1c2luZy1jb21wb25lbnRzLmpzIUU6XFxcXGRvd25sb2FkXFxcXEhCdWlsZGVyWFxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHZ1ZS1sb2FkZXJcXFxcbGliXFxcXGluZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9jaGFydC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmbXBUeXBlPXBhZ2VcIjsgZXhwb3J0IGRlZmF1bHQgbW9kOyBleHBvcnQgKiBmcm9tIFwiLSFFOlxcXFxkb3dubG9hZFxcXFxIQnVpbGRlclhcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcYmFiZWwtbG9hZGVyXFxcXGxpYlxcXFxpbmRleC5qcyFFOlxcXFxkb3dubG9hZFxcXFxIQnVpbGRlclhcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx3ZWJwYWNrLXByZXByb2Nlc3MtbG9hZGVyXFxcXGluZGV4LmpzPz9yZWYtLTYtMSFFOlxcXFxkb3dubG9hZFxcXFxIQnVpbGRlclhcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx3ZWJwYWNrLXVuaS1hcHAtbG9hZGVyXFxcXHVzaW5nLWNvbXBvbmVudHMuanMhRTpcXFxcZG93bmxvYWRcXFxcSEJ1aWxkZXJYXFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcdnVlLWxvYWRlclxcXFxsaWJcXFxcaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2NoYXJ0LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZtcFR5cGU9cGFnZVwiIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///33\n");

/***/ }),
/* 34 */
/*!********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-1!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/using-components.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!C:/Users/猪儿虫啊/Desktop/HBuildX/rgb/pages/chart/chart.vue?vue&type=script&lang=js&mpType=page ***!
  \********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(__f__) {Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;\n\n\n\n\n\n\nvar _App = _interopRequireDefault(__webpack_require__(/*! ../../App.vue */ 9));\n\nvar _uCharts = _interopRequireDefault(__webpack_require__(/*! ../../components/uCharts/u-charts.js */ 35));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _createForOfIteratorHelper(o) {if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) {var i = 0;var F = function F() {};return { s: F, n: function n() {if (i >= o.length) return { done: true };return { done: false, value: o[i++] };}, e: function e(_e) {throw _e;}, f: F };}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}var it,normalCompletion = true,didErr = false,err;return { s: function s() {it = o[Symbol.iterator]();}, n: function n() {var step = it.next();normalCompletion = step.done;return step;}, e: function e(_e2) {didErr = true;err = _e2;}, f: function f() {try {if (!normalCompletion && it.return != null) it.return();} finally {if (didErr) throw err;}} };}function _unsupportedIterableToArray(o, minLen) {if (!o) return;if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);var n = Object.prototype.toString.call(o).slice(8, -1);if (n === \"Object\" && o.constructor) n = o.constructor.name;if (n === \"Map\" || n === \"Set\") return Array.from(n);if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);}function _arrayLikeToArray(arr, len) {if (len == null || len > arr.length) len = arr.length;for (var i = 0, arr2 = new Array(len); i < len; i++) {arr2[i] = arr[i];}return arr2;}\n\nvar _self; //  _self  <==>  this\nvar canvaColumn = null; // 实例\nvar _default = {\n  data: function data() {\n    return {\n      windowWidth: 0,\n      windowHeight: 0\n      // yName:'',\n    };\n  },\n  methods: {\n    showColumn: function showColumn(canvasId, chartData) {\n      canvaColumn = new _uCharts.default({\n        $this: _self,\n        canvasId: 'canvasColumn',\n        type: 'line',\n        legend: true,\n        fontSize: 11,\n        background: '#FFFFFF',\n        pixelRatio: _self.pixelRatio,\n        animation: true,\n        categories: chartData.categories,\n        series: chartData.series,\n        xAxis: {\n          disableGrid: true },\n\n        yAxis: {},\n        dataLabel: true,\n        width: _self.windowWidth,\n        height: 300,\n        extra: {\n          column: {\n            width: _self.windowWidth * 0.45 / chartData.categories.length } } });\n\n\n\n    },\n    bubleSort: function bubleSort(arrx, arry) {\n      var tempx = 0;\n      var tempy = 0;\n      for (var i = 0; i < arrx.length; i++) {\n        for (var j = 0; j < arrx.length - i; j++) {\n          if (arrx[j] > arrx[j + 1]) {\n            this.swap(arrx, j);\n            this.swap(arry, j);\n          }\n        }\n      }\n    },\n    swap: function swap(arr, i) {// i与i+1换\n      var temp = arr[i + 1];\n      arr[i + 1] = arr[i];\n      arr[i] = temp;\n    } },\n\n  onLoad: function onLoad(options) {\n    _self = this;\n    __f__(\"log\", options.y, \" at pages/chart/chart.vue:69\");\n\n    this.windowWidth = _App.default.globalData.windowWidth;\n    this.windowHeight = _App.default.globalData.windowHeight;\n    var categories = _App.default.globalData.MIC.map(function (cur, index) {\n      return Number(cur);\n    });\n    var series = [];\n    series[0] = {};\n    series[0].name = '浓度——' + options.y;\n    series[0].color = '#000000';\n    series[0].data = [];\n    switch (options.y) {\n      case 'R':\n        __f__(\"log\", 'R', \" at pages/chart/chart.vue:83\");var _iterator = _createForOfIteratorHelper(\n        _App.default.globalData.rgbArr),_step;try {for (_iterator.s(); !(_step = _iterator.n()).done;) {var item = _step.value;\n            series[0].data.push(item['r'].toFixed(2));\n          }} catch (err) {_iterator.e(err);} finally {_iterator.f();}\n        break;\n      case 'G':\n        __f__(\"log\", 'G', \" at pages/chart/chart.vue:89\");var _iterator2 = _createForOfIteratorHelper(\n        _App.default.globalData.rgbArr),_step2;try {for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {var _item = _step2.value;\n            series[0].data.push(_item['g'].toFixed(2));\n          }} catch (err) {_iterator2.e(err);} finally {_iterator2.f();}\n        break;\n      case 'B':\n        __f__(\"log\", 'B', \" at pages/chart/chart.vue:95\");var _iterator3 = _createForOfIteratorHelper(\n        _App.default.globalData.rgbArr),_step3;try {for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {var _item2 = _step3.value;\n            series[0].data.push(_item2['b'].toFixed(2));\n          }} catch (err) {_iterator3.e(err);} finally {_iterator3.f();}\n        break;\n      case 'G/B':\n        __f__(\"log\", 'G/B', \" at pages/chart/chart.vue:101\");var _iterator4 = _createForOfIteratorHelper(\n        _App.default.globalData.rgbArr),_step4;try {for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {var _item3 = _step4.value;\n            series[0].data.push((_item3['g'] / _item3['b']).toFixed(2));\n          }} catch (err) {_iterator4.e(err);} finally {_iterator4.f();}\n        break;\n      case 'R/B':\n        __f__(\"log\", 'R/B', \" at pages/chart/chart.vue:107\");var _iterator5 = _createForOfIteratorHelper(\n        _App.default.globalData.rgbArr),_step5;try {for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {var _item4 = _step5.value;\n            series[0].data.push((_item4['r'] / _item4['b']).toFixed(2));\n          }} catch (err) {_iterator5.e(err);} finally {_iterator5.f();}\n        break;\n      case 'R/G':\n        __f__(\"log\", 'R/G', \" at pages/chart/chart.vue:113\");var _iterator6 = _createForOfIteratorHelper(\n        _App.default.globalData.rgbArr),_step6;try {for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {var _item5 = _step6.value;\n            series[0].data.push((_item5['r'] / _item5['g']).toFixed(2));\n          }} catch (err) {_iterator6.e(err);} finally {_iterator6.f();}\n        break;}\n\n\n    this.bubleSort(categories, series[0].data);\n    var line = {\n      categories: categories,\n      series: series };\n\n    _self.showColumn('canvasColumn', line);\n  } };exports.default = _default;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js */ 8)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vcGFnZXMvY2hhcnQvY2hhcnQudnVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFPQTs7QUFFQSwyRzs7QUFFQSxVLENBQUE7QUFDQSx1QixDQUFBO2VBQ0E7QUFDQSxNQURBLGtCQUNBO0FBQ0E7QUFDQSxvQkFEQTtBQUVBO0FBQ0E7QUFIQTtBQUtBLEdBUEE7QUFRQTtBQUNBLGNBREEsc0JBQ0EsUUFEQSxFQUNBLFNBREEsRUFDQTtBQUNBO0FBQ0Esb0JBREE7QUFFQSxnQ0FGQTtBQUdBLG9CQUhBO0FBSUEsb0JBSkE7QUFLQSxvQkFMQTtBQU1BLDZCQU5BO0FBT0Esb0NBUEE7QUFRQSx1QkFSQTtBQVNBLHdDQVRBO0FBVUEsZ0NBVkE7QUFXQTtBQUNBLDJCQURBLEVBWEE7O0FBY0EsaUJBZEE7QUFlQSx1QkFmQTtBQWdCQSxnQ0FoQkE7QUFpQkEsbUJBakJBO0FBa0JBO0FBQ0E7QUFDQSx5RUFEQSxFQURBLEVBbEJBOzs7O0FBd0JBLEtBMUJBO0FBMkJBLGFBM0JBLHFCQTJCQSxJQTNCQSxFQTJCQSxJQTNCQSxFQTJCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0F0Q0E7QUF1Q0EsUUF2Q0EsZ0JBdUNBLEdBdkNBLEVBdUNBLENBdkNBLEVBdUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0EzQ0EsRUFSQTs7QUFxREEsUUFyREEsa0JBcURBLE9BckRBLEVBcURBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBRkE7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBEQURBO0FBRUEsc0NBRkEsYUFFQTtBQUNBO0FBQ0EsV0FKQTtBQUtBO0FBQ0E7QUFDQSwwREFEQTtBQUVBLHNDQUZBLGNBRUE7QUFDQTtBQUNBLFdBSkE7QUFLQTtBQUNBO0FBQ0EsMERBREE7QUFFQSxzQ0FGQSxjQUVBO0FBQ0E7QUFDQSxXQUpBO0FBS0E7QUFDQTtBQUNBLDZEQURBO0FBRUEsc0NBRkEsY0FFQTtBQUNBO0FBQ0EsV0FKQTtBQUtBO0FBQ0E7QUFDQSw2REFEQTtBQUVBLHNDQUZBLGNBRUE7QUFDQTtBQUNBLFdBSkE7QUFLQTtBQUNBO0FBQ0EsNkRBREE7QUFFQSxzQ0FGQSxjQUVBO0FBQ0E7QUFDQSxXQUpBO0FBS0EsY0FwQ0E7OztBQXVDQTtBQUNBO0FBQ0EsNEJBREE7QUFFQSxvQkFGQTs7QUFJQTtBQUNBLEdBaEhBLEUiLCJmaWxlIjoiMzQuanMiLCJzb3VyY2VzQ29udGVudCI6WyI8dGVtcGxhdGU+XHJcblx0PHZpZXcgY2xhc3M9XCJxaXVuLWNoYXJ0c1wiIHYtYmluZDpzdHlsZT1cInt3aWR0aDp3aW5kb3dXaWR0aCsncHgnLGhlaWdodDonMzAwcHgnfVwiPlxyXG5cdFx0PGNhbnZhcyBjYW52YXMtaWQ9XCJjYW52YXNDb2x1bW5cIiBpZD1cImNhbnZhc0NvbHVtblwiIHYtYmluZDpzdHlsZT1cInt3aWR0aDp3aW5kb3dXaWR0aCsncHgnLGhlaWdodDonMzAwcHgnfVwiPjwvY2FudmFzPlxyXG5cdDwvdmlldz5cclxuPC90ZW1wbGF0ZT5cclxuXHJcbjxzY3JpcHQ+XHJcblx0aW1wb3J0IGFwcCBmcm9tICcuLi8uLi9BcHAudnVlJ1xyXG5cclxuXHRpbXBvcnQgdUNoYXJ0cyBmcm9tICcuLi8uLi9jb21wb25lbnRzL3VDaGFydHMvdS1jaGFydHMuanMnO1xyXG5cclxuXHR2YXIgX3NlbGY7IC8vICBfc2VsZiAgPD09PiAgdGhpc1xyXG5cdHZhciBjYW52YUNvbHVtbiA9IG51bGw7IC8vIOWunuS+i1xyXG5cdGV4cG9ydCBkZWZhdWx0IHtcclxuXHRcdGRhdGEoKSB7XHJcblx0XHRcdHJldHVybiB7XHJcblx0XHRcdFx0d2luZG93V2lkdGg6IDAsXHJcblx0XHRcdFx0d2luZG93SGVpZ2h0OiAwLFxyXG5cdFx0XHRcdC8vIHlOYW1lOicnLFxyXG5cdFx0XHR9XHJcblx0XHR9LFxyXG5cdFx0bWV0aG9kczoge1xyXG5cdFx0XHRzaG93Q29sdW1uKGNhbnZhc0lkLCBjaGFydERhdGEpIHtcclxuXHRcdFx0XHRjYW52YUNvbHVtbiA9IG5ldyB1Q2hhcnRzKHtcclxuXHRcdFx0XHRcdCR0aGlzOiBfc2VsZixcclxuXHRcdFx0XHRcdGNhbnZhc0lkOiAnY2FudmFzQ29sdW1uJyxcclxuXHRcdFx0XHRcdHR5cGU6ICdsaW5lJyxcclxuXHRcdFx0XHRcdGxlZ2VuZDogdHJ1ZSxcclxuXHRcdFx0XHRcdGZvbnRTaXplOiAxMSxcclxuXHRcdFx0XHRcdGJhY2tncm91bmQ6ICcjRkZGRkZGJyxcclxuXHRcdFx0XHRcdHBpeGVsUmF0aW86IF9zZWxmLnBpeGVsUmF0aW8sXHJcblx0XHRcdFx0XHRhbmltYXRpb246IHRydWUsXHJcblx0XHRcdFx0XHRjYXRlZ29yaWVzOiBjaGFydERhdGEuY2F0ZWdvcmllcyxcclxuXHRcdFx0XHRcdHNlcmllczogY2hhcnREYXRhLnNlcmllcyxcclxuXHRcdFx0XHRcdHhBeGlzOiB7XHJcblx0XHRcdFx0XHRcdGRpc2FibGVHcmlkOiB0cnVlLFxyXG5cdFx0XHRcdFx0fSxcclxuXHRcdFx0XHRcdHlBeGlzOiB7fSxcclxuXHRcdFx0XHRcdGRhdGFMYWJlbDogdHJ1ZSxcclxuXHRcdFx0XHRcdHdpZHRoOiBfc2VsZi53aW5kb3dXaWR0aCxcclxuXHRcdFx0XHRcdGhlaWdodDogMzAwLFxyXG5cdFx0XHRcdFx0ZXh0cmE6IHtcclxuXHRcdFx0XHRcdFx0Y29sdW1uOiB7XHJcblx0XHRcdFx0XHRcdFx0d2lkdGg6IF9zZWxmLndpbmRvd1dpZHRoICogMC40NSAvIGNoYXJ0RGF0YS5jYXRlZ29yaWVzLmxlbmd0aFxyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdH0sXHJcblx0XHRcdGJ1YmxlU29ydChhcnJ4LCBhcnJ5KSB7XHJcblx0XHRcdFx0bGV0IHRlbXB4ID0gMDtcclxuXHRcdFx0XHRsZXQgdGVtcHkgPSAwO1xyXG5cdFx0XHRcdGZvciAobGV0IGkgPSAwOyBpIDwgYXJyeC5sZW5ndGg7IGkrKykge1xyXG5cdFx0XHRcdFx0Zm9yIChsZXQgaiA9IDA7IGogPCBhcnJ4Lmxlbmd0aCAtIGk7IGorKykge1xyXG5cdFx0XHRcdFx0XHRpZiAoYXJyeFtqXSA+IGFycnhbaiArIDFdKSB7XHJcblx0XHRcdFx0XHRcdFx0dGhpcy5zd2FwKGFycngsIGopXHJcblx0XHRcdFx0XHRcdFx0dGhpcy5zd2FwKGFycnksIGopXHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblx0XHRcdH0sXHJcblx0XHRcdHN3YXAoYXJyLCBpKSB7IC8vIGnkuI5pKzHmjaJcclxuXHRcdFx0XHRsZXQgdGVtcCA9IGFycltpICsgMV07XHJcblx0XHRcdFx0YXJyW2kgKyAxXSA9IGFycltpXTtcclxuXHRcdFx0XHRhcnJbaV0gPSB0ZW1wXHJcblx0XHRcdH1cclxuXHRcdH0sXHJcblx0XHRvbkxvYWQob3B0aW9ucykge1xyXG5cdFx0XHRfc2VsZiA9IHRoaXM7XHJcblx0XHRcdGNvbnNvbGUubG9nKG9wdGlvbnMueSlcclxuXHJcblx0XHRcdHRoaXMud2luZG93V2lkdGggPSBhcHAuZ2xvYmFsRGF0YS53aW5kb3dXaWR0aFxyXG5cdFx0XHR0aGlzLndpbmRvd0hlaWdodCA9IGFwcC5nbG9iYWxEYXRhLndpbmRvd0hlaWdodFxyXG5cdFx0XHRsZXQgY2F0ZWdvcmllcyA9IGFwcC5nbG9iYWxEYXRhLk1JQy5tYXAoKGN1ciwgaW5kZXgpID0+IHtcclxuXHRcdFx0XHRyZXR1cm4gTnVtYmVyKGN1cilcclxuXHRcdFx0fSlcclxuXHRcdFx0bGV0IHNlcmllcyA9IFtdXHJcblx0XHRcdHNlcmllc1swXSA9IHt9XHJcblx0XHRcdHNlcmllc1swXS5uYW1lID0gJ+a1k+W6puKAlOKAlCcgKyBvcHRpb25zLnk7XHJcblx0XHRcdHNlcmllc1swXS5jb2xvciA9ICcjMDAwMDAwJ1xyXG5cdFx0XHRzZXJpZXNbMF0uZGF0YSA9IFtdXHJcblx0XHRcdHN3aXRjaCAob3B0aW9ucy55KSB7XHJcblx0XHRcdFx0Y2FzZSAnUic6XHJcblx0XHRcdFx0XHRjb25zb2xlLmxvZygnUicpO1xyXG5cdFx0XHRcdFx0Zm9yIChsZXQgaXRlbSBvZiBhcHAuZ2xvYmFsRGF0YS5yZ2JBcnIpIHtcclxuXHRcdFx0XHRcdFx0c2VyaWVzWzBdLmRhdGEucHVzaChpdGVtWydyJ10udG9GaXhlZCgyKSlcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdGJyZWFrO1xyXG5cdFx0XHRcdGNhc2UgJ0cnOlxyXG5cdFx0XHRcdFx0Y29uc29sZS5sb2coJ0cnKTtcclxuXHRcdFx0XHRcdGZvciAobGV0IGl0ZW0gb2YgYXBwLmdsb2JhbERhdGEucmdiQXJyKSB7XHJcblx0XHRcdFx0XHRcdHNlcmllc1swXS5kYXRhLnB1c2goaXRlbVsnZyddLnRvRml4ZWQoMikpXHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRicmVhaztcclxuXHRcdFx0XHRjYXNlICdCJzpcclxuXHRcdFx0XHRcdGNvbnNvbGUubG9nKCdCJyk7XHJcblx0XHRcdFx0XHRmb3IgKGxldCBpdGVtIG9mIGFwcC5nbG9iYWxEYXRhLnJnYkFycikge1xyXG5cdFx0XHRcdFx0XHRzZXJpZXNbMF0uZGF0YS5wdXNoKGl0ZW1bJ2InXS50b0ZpeGVkKDIpKVxyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0YnJlYWs7XHJcblx0XHRcdFx0Y2FzZSAnRy9CJzpcclxuXHRcdFx0XHRcdGNvbnNvbGUubG9nKCdHL0InKTtcclxuXHRcdFx0XHRcdGZvciAobGV0IGl0ZW0gb2YgYXBwLmdsb2JhbERhdGEucmdiQXJyKSB7XHJcblx0XHRcdFx0XHRcdHNlcmllc1swXS5kYXRhLnB1c2goKGl0ZW1bJ2cnXS9pdGVtWydiJ10pLnRvRml4ZWQoMikpXHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRicmVhaztcclxuXHRcdFx0XHRjYXNlICdSL0InOlxyXG5cdFx0XHRcdFx0Y29uc29sZS5sb2coJ1IvQicpO1xyXG5cdFx0XHRcdFx0Zm9yIChsZXQgaXRlbSBvZiBhcHAuZ2xvYmFsRGF0YS5yZ2JBcnIpIHtcclxuXHRcdFx0XHRcdFx0c2VyaWVzWzBdLmRhdGEucHVzaCgoaXRlbVsnciddL2l0ZW1bJ2InXSkudG9GaXhlZCgyKSlcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdGJyZWFrO1xyXG5cdFx0XHRcdGNhc2UgJ1IvRyc6XHJcblx0XHRcdFx0XHRjb25zb2xlLmxvZygnUi9HJyk7XHJcblx0XHRcdFx0XHRmb3IgKGxldCBpdGVtIG9mIGFwcC5nbG9iYWxEYXRhLnJnYkFycikge1xyXG5cdFx0XHRcdFx0XHRzZXJpZXNbMF0uZGF0YS5wdXNoKChpdGVtWydyJ10vaXRlbVsnZyddKS50b0ZpeGVkKDIpKVxyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0YnJlYWs7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdHRoaXMuYnVibGVTb3J0KGNhdGVnb3JpZXMsIHNlcmllc1swXS5kYXRhKVxyXG5cdFx0XHRsZXQgbGluZSA9IHtcclxuXHRcdFx0XHRjYXRlZ29yaWVzLFxyXG5cdFx0XHRcdHNlcmllc1xyXG5cdFx0XHR9XHJcblx0XHRcdF9zZWxmLnNob3dDb2x1bW4oJ2NhbnZhc0NvbHVtbicsIGxpbmUpXHJcblx0XHR9LFxyXG5cclxuXHR9XHJcbjwvc2NyaXB0PlxyXG5cclxuPHN0eWxlPlxyXG5cclxuPC9zdHlsZT5cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///34\n");

/***/ }),
/* 35 */
/*!************************************************************************!*\
  !*** C:/Users/猪儿虫啊/Desktop/HBuildX/rgb/components/uCharts/u-charts.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(__f__) {/*\r\n * uCharts v1.9.4.20200331\r\n * uni-app平台高性能跨全端图表，支持H5、APP、小程序（微信/支付宝/百度/头条/QQ/360）\r\n * Copyright (c) 2019 QIUN秋云 https://www.ucharts.cn All rights reserved.\r\n * Licensed ( http://www.apache.org/licenses/LICENSE-2.0 )\r\n * \r\n * uCharts官方网站\r\n * https://www.uCharts.cn\r\n * \r\n * 开源地址:\r\n * https://gitee.com/uCharts/uCharts\r\n * \r\n * uni-app插件市场地址：\r\n * http://ext.dcloud.net.cn/plugin?id=271\r\n * \r\n */\n\n\n\nvar config = {\n  yAxisWidth: 15,\n  yAxisSplit: 5,\n  xAxisHeight: 15,\n  xAxisLineHeight: 15,\n  legendHeight: 15,\n  yAxisTitleWidth: 15,\n  padding: [10, 10, 10, 10],\n  pixelRatio: 1,\n  rotate: false,\n  columePadding: 3,\n  fontSize: 13,\n  //dataPointShape: ['diamond', 'circle', 'triangle', 'rect'],\n  dataPointShape: ['circle', 'circle', 'circle', 'circle'],\n  colors: ['#1890ff', '#2fc25b', '#facc14', '#f04864', '#8543e0', '#90ed7d'],\n  pieChartLinePadding: 15,\n  pieChartTextPadding: 5,\n  xAxisTextPadding: 3,\n  titleColor: '#333333',\n  titleFontSize: 20,\n  subtitleColor: '#999999',\n  subtitleFontSize: 15,\n  toolTipPadding: 3,\n  toolTipBackground: '#000000',\n  toolTipOpacity: 0.7,\n  toolTipLineHeight: 20,\n  radarLabelTextMargin: 15,\n  gaugeLabelTextMargin: 15 };\n\n\nvar assign = function assign(target) {for (var _len2 = arguments.length, varArgs = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {varArgs[_key2 - 1] = arguments[_key2];}\n  if (target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n  if (!varArgs || varArgs.length <= 0) {\n    return target;\n  }\n  // 深度合并对象\n  function deepAssign(obj1, obj2) {\n    for (var key in obj2) {\n      obj1[key] = obj1[key] && obj1[key].toString() === \"[object Object]\" ?\n      deepAssign(obj1[key], obj2[key]) : obj1[key] = obj2[key];\n    }\n    return obj1;\n  }\n\n  varArgs.forEach(function (val) {\n    target = deepAssign(target, val);\n  });\n  return target;\n};\n\nvar util = {\n  toFixed: function toFixed(num, limit) {\n    limit = limit || 2;\n    if (this.isFloat(num)) {\n      num = num.toFixed(limit);\n    }\n    return num;\n  },\n  isFloat: function isFloat(num) {\n    return num % 1 !== 0;\n  },\n  approximatelyEqual: function approximatelyEqual(num1, num2) {\n    return Math.abs(num1 - num2) < 1e-10;\n  },\n  isSameSign: function isSameSign(num1, num2) {\n    return Math.abs(num1) === num1 && Math.abs(num2) === num2 || Math.abs(num1) !== num1 && Math.abs(num2) !== num2;\n  },\n  isSameXCoordinateArea: function isSameXCoordinateArea(p1, p2) {\n    return this.isSameSign(p1.x, p2.x);\n  },\n  isCollision: function isCollision(obj1, obj2) {\n    obj1.end = {};\n    obj1.end.x = obj1.start.x + obj1.width;\n    obj1.end.y = obj1.start.y - obj1.height;\n    obj2.end = {};\n    obj2.end.x = obj2.start.x + obj2.width;\n    obj2.end.y = obj2.start.y - obj2.height;\n    var flag = obj2.start.x > obj1.end.x || obj2.end.x < obj1.start.x || obj2.end.y > obj1.start.y || obj2.start.y < obj1.end.y;\n    return !flag;\n  } };\n\n\n//兼容H5点击事件\nfunction getH5Offset(e) {\n  e.mp = {\n    changedTouches: [] };\n\n  e.mp.changedTouches.push({\n    x: e.offsetX,\n    y: e.offsetY });\n\n  return e;\n}\n\n// hex 转 rgba\nfunction hexToRgb(hexValue, opc) {\n  var rgx = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n  var hex = hexValue.replace(rgx, function (m, r, g, b) {\n    return r + r + g + g + b + b;\n  });\n  var rgb = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  var r = parseInt(rgb[1], 16);\n  var g = parseInt(rgb[2], 16);\n  var b = parseInt(rgb[3], 16);\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + opc + ')';\n}\n\nfunction findRange(num, type, limit) {\n  if (isNaN(num)) {\n    throw new Error('[uCharts] unvalid series data!');\n  }\n  limit = limit || 10;\n  type = type ? type : 'upper';\n  var multiple = 1;\n  while (limit < 1) {\n    limit *= 10;\n    multiple *= 10;\n  }\n  if (type === 'upper') {\n    num = Math.ceil(num * multiple);\n  } else {\n    num = Math.floor(num * multiple);\n  }\n  while (num % limit !== 0) {\n    if (type === 'upper') {\n      num++;\n    } else {\n      num--;\n    }\n  }\n  return num / multiple;\n}\n\nfunction calCandleMA(dayArr, nameArr, colorArr, kdata) {\n  var seriesTemp = [];\n  for (var k = 0; k < dayArr.length; k++) {\n    var seriesItem = {\n      data: [],\n      name: nameArr[k],\n      color: colorArr[k] };\n\n    for (var i = 0, len = kdata.length; i < len; i++) {\n      if (i < dayArr[k]) {\n        seriesItem.data.push(null);\n        continue;\n      }\n      var sum = 0;\n      for (var j = 0; j < dayArr[k]; j++) {\n        sum += kdata[i - j][1];\n      }\n      seriesItem.data.push(+(sum / dayArr[k]).toFixed(3));\n    }\n    seriesTemp.push(seriesItem);\n  }\n  return seriesTemp;\n}\n\nfunction calValidDistance(self, distance, chartData, config, opts) {\n  var dataChartAreaWidth = opts.width - opts.area[1] - opts.area[3];\n  var dataChartWidth = chartData.eachSpacing * (opts.chartData.xAxisData.xAxisPoints.length - 1);\n  var validDistance = distance;\n  if (distance >= 0) {\n    validDistance = 0;\n    self.event.trigger('scrollLeft');\n  } else if (Math.abs(distance) >= dataChartWidth - dataChartAreaWidth) {\n    validDistance = dataChartAreaWidth - dataChartWidth;\n    self.event.trigger('scrollRight');\n  }\n  return validDistance;\n}\n\nfunction isInAngleRange(angle, startAngle, endAngle) {\n  function adjust(angle) {\n    while (angle < 0) {\n      angle += 2 * Math.PI;\n    }\n    while (angle > 2 * Math.PI) {\n      angle -= 2 * Math.PI;\n    }\n    return angle;\n  }\n  angle = adjust(angle);\n  startAngle = adjust(startAngle);\n  endAngle = adjust(endAngle);\n  if (startAngle > endAngle) {\n    endAngle += 2 * Math.PI;\n    if (angle < startAngle) {\n      angle += 2 * Math.PI;\n    }\n  }\n  return angle >= startAngle && angle <= endAngle;\n}\n\nfunction calRotateTranslate(x, y, h) {\n  var xv = x;\n  var yv = h - y;\n  var transX = xv + (h - yv - xv) / Math.sqrt(2);\n  transX *= -1;\n  var transY = (h - yv) * (Math.sqrt(2) - 1) - (h - yv - xv) / Math.sqrt(2);\n  return {\n    transX: transX,\n    transY: transY };\n\n}\n\nfunction createCurveControlPoints(points, i) {\n\n  function isNotMiddlePoint(points, i) {\n    if (points[i - 1] && points[i + 1]) {\n      return points[i].y >= Math.max(points[i - 1].y, points[i + 1].y) || points[i].y <= Math.min(points[i - 1].y, points[i + 1].y);\n    } else {\n      return false;\n    }\n  }\n  function isNotMiddlePointX(points, i) {\n    if (points[i - 1] && points[i + 1]) {\n      return points[i].x >= Math.max(points[i - 1].x, points[i + 1].x) || points[i].x <= Math.min(points[i - 1].x, points[i + 1].x);\n    } else {\n      return false;\n    }\n  }\n  var a = 0.2;\n  var b = 0.2;\n  var pAx = null;\n  var pAy = null;\n  var pBx = null;\n  var pBy = null;\n  if (i < 1) {\n    pAx = points[0].x + (points[1].x - points[0].x) * a;\n    pAy = points[0].y + (points[1].y - points[0].y) * a;\n  } else {\n    pAx = points[i].x + (points[i + 1].x - points[i - 1].x) * a;\n    pAy = points[i].y + (points[i + 1].y - points[i - 1].y) * a;\n  }\n\n  if (i > points.length - 3) {\n    var last = points.length - 1;\n    pBx = points[last].x - (points[last].x - points[last - 1].x) * b;\n    pBy = points[last].y - (points[last].y - points[last - 1].y) * b;\n  } else {\n    pBx = points[i + 1].x - (points[i + 2].x - points[i].x) * b;\n    pBy = points[i + 1].y - (points[i + 2].y - points[i].y) * b;\n  }\n  if (isNotMiddlePoint(points, i + 1)) {\n    pBy = points[i + 1].y;\n  }\n  if (isNotMiddlePoint(points, i)) {\n    pAy = points[i].y;\n  }\n  if (isNotMiddlePointX(points, i + 1)) {\n    pBx = points[i + 1].x;\n  }\n  if (isNotMiddlePointX(points, i)) {\n    pAx = points[i].x;\n  }\n  if (pAy >= Math.max(points[i].y, points[i + 1].y) || pAy <= Math.min(points[i].y, points[i + 1].y)) {\n    pAy = points[i].y;\n  }\n  if (pBy >= Math.max(points[i].y, points[i + 1].y) || pBy <= Math.min(points[i].y, points[i + 1].y)) {\n    pBy = points[i + 1].y;\n  }\n  if (pAx >= Math.max(points[i].x, points[i + 1].x) || pAx <= Math.min(points[i].x, points[i + 1].x)) {\n    pAx = points[i].x;\n  }\n  if (pBx >= Math.max(points[i].x, points[i + 1].x) || pBx <= Math.min(points[i].x, points[i + 1].x)) {\n    pBx = points[i + 1].x;\n  }\n  return {\n    ctrA: {\n      x: pAx,\n      y: pAy },\n\n    ctrB: {\n      x: pBx,\n      y: pBy } };\n\n\n}\n\nfunction convertCoordinateOrigin(x, y, center) {\n  return {\n    x: center.x + x,\n    y: center.y - y };\n\n}\n\nfunction avoidCollision(obj, target) {\n  if (target) {\n    // is collision test\n    while (util.isCollision(obj, target)) {\n      if (obj.start.x > 0) {\n        obj.start.y--;\n      } else if (obj.start.x < 0) {\n        obj.start.y++;\n      } else {\n        if (obj.start.y > 0) {\n          obj.start.y++;\n        } else {\n          obj.start.y--;\n        }\n      }\n    }\n  }\n  return obj;\n}\n\nfunction fillSeries(series, opts, config) {\n  var index = 0;\n  return series.map(function (item) {\n    if (!item.color) {\n      item.color = config.colors[index];\n      index = (index + 1) % config.colors.length;\n    }\n    if (!item.index) {\n      item.index = 0;\n    }\n    if (!item.type) {\n      item.type = opts.type;\n    }\n    if (typeof item.show == \"undefined\") {\n      item.show = true;\n    }\n    if (!item.type) {\n      item.type = opts.type;\n    }\n    if (!item.pointShape) {\n      item.pointShape = \"circle\";\n    }\n    if (!item.legendShape) {\n      switch (item.type) {\n        case 'line':\n          item.legendShape = \"line\";\n          break;\n        case 'column':\n          item.legendShape = \"rect\";\n          break;\n        case 'area':\n          item.legendShape = \"triangle\";\n          break;\n        default:\n          item.legendShape = \"circle\";}\n\n    }\n    return item;\n  });\n}\n\nfunction getDataRange(minData, maxData) {\n  var limit = 0;\n  var range = maxData - minData;\n  if (range >= 10000) {\n    limit = 1000;\n  } else if (range >= 1000) {\n    limit = 100;\n  } else if (range >= 100) {\n    limit = 10;\n  } else if (range >= 10) {\n    limit = 5;\n  } else if (range >= 1) {\n    limit = 1;\n  } else if (range >= 0.1) {\n    limit = 0.1;\n  } else if (range >= 0.01) {\n    limit = 0.01;\n  } else if (range >= 0.001) {\n    limit = 0.001;\n  } else if (range >= 0.0001) {\n    limit = 0.0001;\n  } else if (range >= 0.00001) {\n    limit = 0.00001;\n  } else {\n    limit = 0.000001;\n  }\n  return {\n    minRange: findRange(minData, 'lower', limit),\n    maxRange: findRange(maxData, 'upper', limit) };\n\n}\n\nfunction measureText(text) {\n  var fontSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : config.fontSize;\n  text = String(text);\n  var text = text.split('');\n  var width = 0;\n  for (var i = 0; i < text.length; i++) {\n    var item = text[i];\n    if (/[a-zA-Z]/.test(item)) {\n      width += 7;\n    } else if (/[0-9]/.test(item)) {\n      width += 5.5;\n    } else if (/\\./.test(item)) {\n      width += 2.7;\n    } else if (/-/.test(item)) {\n      width += 3.25;\n    } else if (/[\\u4e00-\\u9fa5]/.test(item)) {\n      width += 10;\n    } else if (/\\(|\\)/.test(item)) {\n      width += 3.73;\n    } else if (/\\s/.test(item)) {\n      width += 2.5;\n    } else if (/%/.test(item)) {\n      width += 8;\n    } else {\n      width += 10;\n    }\n  }\n  return width * fontSize / 10;\n}\n\nfunction dataCombine(series) {\n  return series.reduce(function (a, b) {\n    return (a.data ? a.data : a).concat(b.data);\n  }, []);\n}\n\nfunction dataCombineStack(series, len) {\n  var sum = new Array(len);\n  for (var j = 0; j < sum.length; j++) {\n    sum[j] = 0;\n  }\n  for (var i = 0; i < series.length; i++) {\n    for (var j = 0; j < sum.length; j++) {\n      sum[j] += series[i].data[j];\n    }\n  }\n  return series.reduce(function (a, b) {\n    return (a.data ? a.data : a).concat(b.data).concat(sum);\n  }, []);\n}\n\nfunction getTouches(touches, opts, e) {\n  var x, y;\n  if (touches.clientX) {\n    if (opts.rotate) {\n      y = opts.height - touches.clientX * opts.pixelRatio;\n      x = (touches.pageY - e.currentTarget.offsetTop - opts.height / opts.pixelRatio / 2 * (opts.pixelRatio - 1)) *\n      opts.pixelRatio;\n    } else {\n      x = touches.clientX * opts.pixelRatio;\n      y = (touches.pageY - e.currentTarget.offsetTop - opts.height / opts.pixelRatio / 2 * (opts.pixelRatio - 1)) *\n      opts.pixelRatio;\n    }\n  } else {\n    if (opts.rotate) {\n      y = opts.height - touches.x * opts.pixelRatio;\n      x = touches.y * opts.pixelRatio;\n    } else {\n      x = touches.x * opts.pixelRatio;\n      y = touches.y * opts.pixelRatio;\n    }\n  }\n  return {\n    x: x,\n    y: y };\n\n}\n\nfunction getSeriesDataItem(series, index) {\n  var data = [];\n  for (var i = 0; i < series.length; i++) {\n    var item = series[i];\n    if (item.data[index] !== null && typeof item.data[index] !== 'undefined' && item.show) {\n      var seriesItem = {};\n      seriesItem.color = item.color;\n      seriesItem.type = item.type;\n      seriesItem.style = item.style;\n      seriesItem.pointShape = item.pointShape;\n      seriesItem.disableLegend = item.disableLegend;\n      seriesItem.name = item.name;\n      seriesItem.show = item.show;\n      seriesItem.data = item.format ? item.format(item.data[index]) : item.data[index];\n      data.push(seriesItem);\n    }\n  }\n  return data;\n}\n\nfunction getMaxTextListLength(list) {\n  var lengthList = list.map(function (item) {\n    return measureText(item);\n  });\n  return Math.max.apply(null, lengthList);\n}\n\nfunction getRadarCoordinateSeries(length) {\n  var eachAngle = 2 * Math.PI / length;\n  var CoordinateSeries = [];\n  for (var i = 0; i < length; i++) {\n    CoordinateSeries.push(eachAngle * i);\n  }\n\n  return CoordinateSeries.map(function (item) {\n    return -1 * item + Math.PI / 2;\n  });\n}\n\nfunction getToolTipData(seriesData, calPoints, index, categories) {\n  var option = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n  var textList = seriesData.map(function (item) {\n    var titleText = [];\n    if (categories) {\n      titleText = categories;\n    } else {\n      titleText = item.data;\n    }\n    return {\n      text: option.format ? option.format(item, titleText[index]) : item.name + ': ' + item.data,\n      color: item.color };\n\n  });\n  var validCalPoints = [];\n  var offset = {\n    x: 0,\n    y: 0 };\n\n  for (var i = 0; i < calPoints.length; i++) {\n    var points = calPoints[i];\n    if (typeof points[index] !== 'undefined' && points[index] !== null) {\n      validCalPoints.push(points[index]);\n    }\n  }\n  for (var _i = 0; _i < validCalPoints.length; _i++) {\n    var item = validCalPoints[_i];\n    offset.x = Math.round(item.x);\n    offset.y += item.y;\n  }\n  offset.y /= validCalPoints.length;\n  return {\n    textList: textList,\n    offset: offset };\n\n}\n\nfunction getMixToolTipData(seriesData, calPoints, index, categories) {\n  var option = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  var textList = seriesData.map(function (item) {\n    return {\n      text: option.format ? option.format(item, categories[index]) : item.name + ': ' + item.data,\n      color: item.color,\n      disableLegend: item.disableLegend ? true : false };\n\n  });\n  textList = textList.filter(function (item) {\n    if (item.disableLegend !== true) {\n      return item;\n    }\n  });\n  var validCalPoints = [];\n  var offset = {\n    x: 0,\n    y: 0 };\n\n  for (var i = 0; i < calPoints.length; i++) {\n    var points = calPoints[i];\n    if (typeof points[index] !== 'undefined' && points[index] !== null) {\n      validCalPoints.push(points[index]);\n    }\n  }\n  for (var _i2 = 0; _i2 < validCalPoints.length; _i2++) {\n    var item = validCalPoints[_i2];\n    offset.x = Math.round(item.x);\n    offset.y += item.y;\n  }\n  offset.y /= validCalPoints.length;\n  return {\n    textList: textList,\n    offset: offset };\n\n}\n\nfunction getCandleToolTipData(series, seriesData, calPoints, index, categories, extra) {\n  var option = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : {};\n  var upColor = extra.color.upFill;\n  var downColor = extra.color.downFill;\n  //颜色顺序为开盘，收盘，最低，最高\n  var color = [upColor, upColor, downColor, upColor];\n  var textList = [];\n  var text0 = {\n    text: categories[index],\n    color: null };\n\n  textList.push(text0);\n  seriesData.map(function (item) {\n    if (index == 0) {\n      if (item.data[1] - item.data[0] < 0) {\n        color[1] = downColor;\n      } else {\n        color[1] = upColor;\n      }\n    } else {\n      if (item.data[0] < series[index - 1][1]) {\n        color[0] = downColor;\n      }\n      if (item.data[1] < item.data[0]) {\n        color[1] = downColor;\n      }\n      if (item.data[2] > series[index - 1][1]) {\n        color[2] = upColor;\n      }\n      if (item.data[3] < series[index - 1][1]) {\n        color[3] = downColor;\n      }\n    }\n    var text1 = {\n      text: '开盘：' + item.data[0],\n      color: color[0] };\n\n    var text2 = {\n      text: '收盘：' + item.data[1],\n      color: color[1] };\n\n    var text3 = {\n      text: '最低：' + item.data[2],\n      color: color[2] };\n\n    var text4 = {\n      text: '最高：' + item.data[3],\n      color: color[3] };\n\n    textList.push(text1, text2, text3, text4);\n  });\n  var validCalPoints = [];\n  var offset = {\n    x: 0,\n    y: 0 };\n\n  for (var i = 0; i < calPoints.length; i++) {\n    var points = calPoints[i];\n    if (typeof points[index] !== 'undefined' && points[index] !== null) {\n      validCalPoints.push(points[index]);\n    }\n  }\n  offset.x = Math.round(validCalPoints[0][0].x);\n  return {\n    textList: textList,\n    offset: offset };\n\n}\n\nfunction filterSeries(series) {\n  var tempSeries = [];\n  for (var i = 0; i < series.length; i++) {\n    if (series[i].show == true) {\n      tempSeries.push(series[i]);\n    }\n  }\n  return tempSeries;\n}\n\nfunction findCurrentIndex(currentPoints, calPoints, opts, config) {\n  var offset = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n  var currentIndex = -1;\n  var spacing = opts.chartData.eachSpacing / 2;\n  var xAxisPoints = [];\n  if (calPoints.length > 0) {\n    if (opts.type == 'candle') {\n      for (var i = 0; i < calPoints[0].length; i++) {\n        xAxisPoints.push(calPoints[0][i][0].x);\n      }\n    } else {\n      for (var _i3 = 0; _i3 < calPoints[0].length; _i3++) {\n        xAxisPoints.push(calPoints[0][_i3].x);\n      }\n    }\n    if ((opts.type == 'line' || opts.type == 'area') && opts.xAxis.boundaryGap == 'justify') {\n      spacing = opts.chartData.eachSpacing / 2;\n    }\n    if (!opts.categories) {\n      spacing = 0;\n    }\n    if (isInExactChartArea(currentPoints, opts, config)) {\n      xAxisPoints.forEach(function (item, index) {\n        if (currentPoints.x + offset + spacing > item) {\n          currentIndex = index;\n        }\n      });\n    }\n  }\n  return currentIndex;\n}\n\nfunction findLegendIndex(currentPoints, legendData, opts) {\n  var currentIndex = -1;\n  if (isInExactLegendArea(currentPoints, legendData.area)) {\n    var points = legendData.points;\n    var index = -1;\n    for (var i = 0, len = points.length; i < len; i++) {\n      var item = points[i];\n      for (var j = 0; j < item.length; j++) {\n        index += 1;\n        var area = item[j]['area'];\n        if (currentPoints.x > area[0] && currentPoints.x < area[2] && currentPoints.y > area[1] && currentPoints.y < area[3]) {\n          currentIndex = index;\n          break;\n        }\n      }\n    }\n    return currentIndex;\n  }\n  return currentIndex;\n}\n\nfunction isInExactLegendArea(currentPoints, area) {\n  return currentPoints.x > area.start.x && currentPoints.x < area.end.x && currentPoints.y > area.start.y &&\n  currentPoints.y < area.end.y;\n}\n\nfunction isInExactChartArea(currentPoints, opts, config) {\n  return currentPoints.x <= opts.width - opts.area[1] + 10 && currentPoints.x >= opts.area[3] - 10 && currentPoints.y >= opts.area[0] && currentPoints.y <= opts.height - opts.area[2];\n}\n\nfunction findRadarChartCurrentIndex(currentPoints, radarData, count) {\n  var eachAngleArea = 2 * Math.PI / count;\n  var currentIndex = -1;\n  if (isInExactPieChartArea(currentPoints, radarData.center, radarData.radius)) {\n    var fixAngle = function fixAngle(angle) {\n      if (angle < 0) {\n        angle += 2 * Math.PI;\n      }\n      if (angle > 2 * Math.PI) {\n        angle -= 2 * Math.PI;\n      }\n      return angle;\n    };\n\n    var angle = Math.atan2(radarData.center.y - currentPoints.y, currentPoints.x - radarData.center.x);\n    angle = -1 * angle;\n    if (angle < 0) {\n      angle += 2 * Math.PI;\n    }\n\n    var angleList = radarData.angleList.map(function (item) {\n      item = fixAngle(-1 * item);\n\n      return item;\n    });\n\n    angleList.forEach(function (item, index) {\n      var rangeStart = fixAngle(item - eachAngleArea / 2);\n      var rangeEnd = fixAngle(item + eachAngleArea / 2);\n      if (rangeEnd < rangeStart) {\n        rangeEnd += 2 * Math.PI;\n      }\n      if (angle >= rangeStart && angle <= rangeEnd || angle + 2 * Math.PI >= rangeStart && angle + 2 * Math.PI <=\n      rangeEnd) {\n        currentIndex = index;\n      }\n    });\n  }\n\n  return currentIndex;\n}\n\nfunction findFunnelChartCurrentIndex(currentPoints, funnelData) {\n  var currentIndex = -1;\n  for (var i = 0, len = funnelData.series.length; i < len; i++) {\n    var item = funnelData.series[i];\n    if (currentPoints.x > item.funnelArea[0] && currentPoints.x < item.funnelArea[2] && currentPoints.y > item.funnelArea[1] && currentPoints.y < item.funnelArea[3]) {\n      currentIndex = i;\n      break;\n    }\n  }\n  return currentIndex;\n}\n\nfunction findWordChartCurrentIndex(currentPoints, wordData) {\n  var currentIndex = -1;\n  for (var i = 0, len = wordData.length; i < len; i++) {\n    var item = wordData[i];\n    if (currentPoints.x > item.area[0] && currentPoints.x < item.area[2] && currentPoints.y > item.area[1] && currentPoints.y < item.area[3]) {\n      currentIndex = i;\n      break;\n    }\n  }\n  return currentIndex;\n}\n\nfunction findMapChartCurrentIndex(currentPoints, opts) {\n  var currentIndex = -1;\n  var cData = opts.chartData.mapData;\n  var data = opts.series;\n  var tmp = pointToCoordinate(currentPoints.y, currentPoints.x, cData.bounds, cData.scale, cData.xoffset, cData.yoffset);\n  var poi = [tmp.x, tmp.y];\n  for (var i = 0, len = data.length; i < len; i++) {\n    var item = data[i].geometry.coordinates;\n    if (isPoiWithinPoly(poi, item)) {\n      currentIndex = i;\n      break;\n    }\n  }\n  return currentIndex;\n}\n\nfunction findPieChartCurrentIndex(currentPoints, pieData) {\n  var currentIndex = -1;\n  if (isInExactPieChartArea(currentPoints, pieData.center, pieData.radius)) {\n    var angle = Math.atan2(pieData.center.y - currentPoints.y, currentPoints.x - pieData.center.x);\n    angle = -angle;\n    for (var i = 0, len = pieData.series.length; i < len; i++) {\n      var item = pieData.series[i];\n      if (isInAngleRange(angle, item._start_, item._start_ + item._proportion_ * 2 * Math.PI)) {\n        currentIndex = i;\n        break;\n      }\n    }\n  }\n\n  return currentIndex;\n}\n\nfunction isInExactPieChartArea(currentPoints, center, radius) {\n  return Math.pow(currentPoints.x - center.x, 2) + Math.pow(currentPoints.y - center.y, 2) <= Math.pow(radius, 2);\n}\n\nfunction splitPoints(points) {\n  var newPoints = [];\n  var items = [];\n  points.forEach(function (item, index) {\n    if (item !== null) {\n      items.push(item);\n    } else {\n      if (items.length) {\n        newPoints.push(items);\n      }\n      items = [];\n    }\n  });\n  if (items.length) {\n    newPoints.push(items);\n  }\n\n  return newPoints;\n}\n\nfunction calLegendData(series, opts, config, chartData) {\n  var legendData = {\n    area: {\n      start: {\n        x: 0,\n        y: 0 },\n\n      end: {\n        x: 0,\n        y: 0 },\n\n      width: 0,\n      height: 0,\n      wholeWidth: 0,\n      wholeHeight: 0 },\n\n    points: [],\n    widthArr: [],\n    heightArr: [] };\n\n  if (opts.legend.show === false) {\n    chartData.legendData = legendData;\n    return legendData;\n  }\n\n  var padding = opts.legend.padding;\n  var margin = opts.legend.margin;\n  var fontSize = opts.legend.fontSize;\n  var shapeWidth = 15 * opts.pixelRatio;\n  var shapeRight = 5 * opts.pixelRatio;\n  var lineHeight = Math.max(opts.legend.lineHeight * opts.pixelRatio, fontSize);\n  if (opts.legend.position == 'top' || opts.legend.position == 'bottom') {\n    var legendList = [];\n    var widthCount = 0;\n    var widthCountArr = [];\n    var currentRow = [];\n    for (var i = 0; i < series.length; i++) {\n      var item = series[i];\n      var itemWidth = shapeWidth + shapeRight + measureText(item.name || 'undefined', fontSize) + opts.legend.itemGap;\n      if (widthCount + itemWidth > opts.width - opts.padding[1] - opts.padding[3]) {\n        legendList.push(currentRow);\n        widthCountArr.push(widthCount - opts.legend.itemGap);\n        widthCount = itemWidth;\n        currentRow = [item];\n      } else {\n        widthCount += itemWidth;\n        currentRow.push(item);\n      }\n    }\n    if (currentRow.length) {\n      legendList.push(currentRow);\n      widthCountArr.push(widthCount - opts.legend.itemGap);\n      legendData.widthArr = widthCountArr;\n      var legendWidth = Math.max.apply(null, widthCountArr);\n      switch (opts.legend.float) {\n        case 'left':\n          legendData.area.start.x = opts.padding[3];\n          legendData.area.end.x = opts.padding[3] + 2 * padding;\n          break;\n        case 'right':\n          legendData.area.start.x = opts.width - opts.padding[1] - legendWidth - 2 * padding;\n          legendData.area.end.x = opts.width - opts.padding[1];\n          break;\n        default:\n          legendData.area.start.x = (opts.width - legendWidth) / 2 - padding;\n          legendData.area.end.x = (opts.width + legendWidth) / 2 + padding;}\n\n      legendData.area.width = legendWidth + 2 * padding;\n      legendData.area.wholeWidth = legendWidth + 2 * padding;\n      legendData.area.height = legendList.length * lineHeight + 2 * padding;\n      legendData.area.wholeHeight = legendList.length * lineHeight + 2 * padding + 2 * margin;\n      legendData.points = legendList;\n    }\n  } else {\n    var len = series.length;\n    var maxHeight = opts.height - opts.padding[0] - opts.padding[2] - 2 * margin - 2 * padding;\n    var maxLength = Math.min(Math.floor(maxHeight / lineHeight), len);\n    legendData.area.height = maxLength * lineHeight + padding * 2;\n    legendData.area.wholeHeight = maxLength * lineHeight + padding * 2;\n    switch (opts.legend.float) {\n      case 'top':\n        legendData.area.start.y = opts.padding[0] + margin;\n        legendData.area.end.y = opts.padding[0] + margin + legendData.area.height;\n        break;\n      case 'bottom':\n        legendData.area.start.y = opts.height - opts.padding[2] - margin - legendData.area.height;\n        legendData.area.end.y = opts.height - opts.padding[2] - margin;\n        break;\n      default:\n        legendData.area.start.y = (opts.height - legendData.area.height) / 2;\n        legendData.area.end.y = (opts.height + legendData.area.height) / 2;}\n\n    var lineNum = len % maxLength === 0 ? len / maxLength : Math.floor(len / maxLength + 1);\n    var _currentRow = [];\n    for (var _i4 = 0; _i4 < lineNum; _i4++) {\n      var temp = series.slice(_i4 * maxLength, _i4 * maxLength + maxLength);\n      _currentRow.push(temp);\n    }\n\n    legendData.points = _currentRow;\n\n    if (_currentRow.length) {\n      for (var _i5 = 0; _i5 < _currentRow.length; _i5++) {\n        var _item = _currentRow[_i5];\n        var maxWidth = 0;\n        for (var j = 0; j < _item.length; j++) {\n          var _itemWidth = shapeWidth + shapeRight + measureText(_item[j].name || 'undefined', fontSize) + opts.legend.itemGap;\n          if (_itemWidth > maxWidth) {\n            maxWidth = _itemWidth;\n          }\n        }\n        legendData.widthArr.push(maxWidth);\n        legendData.heightArr.push(_item.length * lineHeight + padding * 2);\n      }\n      var _legendWidth = 0;\n      for (var _i6 = 0; _i6 < legendData.widthArr.length; _i6++) {\n        _legendWidth += legendData.widthArr[_i6];\n      }\n      legendData.area.width = _legendWidth - opts.legend.itemGap + 2 * padding;\n      legendData.area.wholeWidth = legendData.area.width + padding;\n    }\n  }\n\n  switch (opts.legend.position) {\n    case 'top':\n      legendData.area.start.y = opts.padding[0] + margin;\n      legendData.area.end.y = opts.padding[0] + margin + legendData.area.height;\n      break;\n    case 'bottom':\n      legendData.area.start.y = opts.height - opts.padding[2] - legendData.area.height - margin;\n      legendData.area.end.y = opts.height - opts.padding[2] - margin;\n      break;\n    case 'left':\n      legendData.area.start.x = opts.padding[3];\n      legendData.area.end.x = opts.padding[3] + legendData.area.width;\n      break;\n    case 'right':\n      legendData.area.start.x = opts.width - opts.padding[1] - legendData.area.width;\n      legendData.area.end.x = opts.width - opts.padding[1];\n      break;}\n\n  chartData.legendData = legendData;\n  return legendData;\n}\n\nfunction calCategoriesData(categories, opts, config, eachSpacing) {\n  var result = {\n    angle: 0,\n    xAxisHeight: config.xAxisHeight };\n\n  var categoriesTextLenth = categories.map(function (item) {\n    return measureText(item, opts.xAxis.fontSize || config.fontSize);\n  });\n  var maxTextLength = Math.max.apply(this, categoriesTextLenth);\n\n  if (opts.xAxis.rotateLabel == true && maxTextLength + 2 * config.xAxisTextPadding > eachSpacing) {\n    result.angle = 45 * Math.PI / 180;\n    result.xAxisHeight = 2 * config.xAxisTextPadding + maxTextLength * Math.sin(result.angle);\n  }\n  return result;\n}\n\nfunction getXAxisTextList(series, opts, config) {\n  var index = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : -1;\n  var data = dataCombine(series);\n  var sorted = [];\n  // remove null from data\n  data = data.filter(function (item) {\n    //return item !== null;\n    if (typeof item === 'object' && item !== null) {\n      if (item.constructor.toString().indexOf('Array') > -1) {\n        return item !== null;\n      } else {\n        return item.value !== null;\n      }\n    } else {\n      return item !== null;\n    }\n  });\n  data.map(function (item) {\n    if (typeof item === 'object') {\n      if (item.constructor.toString().indexOf('Array') > -1) {\n        if (opts.type == 'candle') {\n          item.map(function (subitem) {\n            sorted.push(subitem);\n          });\n        } else {\n          sorted.push(item[0]);\n        }\n      } else {\n        sorted.push(item.value);\n      }\n    } else {\n      sorted.push(item);\n    }\n  });\n\n  var minData = 0;\n  var maxData = 0;\n  if (sorted.length > 0) {\n    minData = Math.min.apply(this, sorted);\n    maxData = Math.max.apply(this, sorted);\n  }\n  //为了兼容v1.9.0之前的项目\n  if (index > -1) {\n    if (typeof opts.xAxis.data[index].min === 'number') {\n      minData = Math.min(opts.xAxis.data[index].min, minData);\n    }\n    if (typeof opts.xAxis.data[index].max === 'number') {\n      maxData = Math.max(opts.xAxis.data[index].max, maxData);\n    }\n  } else {\n    if (typeof opts.xAxis.min === 'number') {\n      minData = Math.min(opts.xAxis.min, minData);\n    }\n    if (typeof opts.xAxis.max === 'number') {\n      maxData = Math.max(opts.xAxis.max, maxData);\n    }\n  }\n\n\n  if (minData === maxData) {\n    var rangeSpan = maxData || 10;\n    maxData += rangeSpan;\n  }\n\n  //var dataRange = getDataRange(minData, maxData);\n  var minRange = minData;\n  var maxRange = maxData;\n\n  var range = [];\n  var eachRange = (maxRange - minRange) / opts.xAxis.splitNumber;\n\n  for (var i = 0; i <= opts.xAxis.splitNumber; i++) {\n    range.push(minRange + eachRange * i);\n  }\n  return range;\n}\n\nfunction calXAxisData(series, opts, config) {\n  var result = {\n    angle: 0,\n    xAxisHeight: config.xAxisHeight };\n\n\n  result.ranges = getXAxisTextList(series, opts, config);\n  result.rangesFormat = result.ranges.map(function (item) {\n    item = opts.xAxis.format ? opts.xAxis.format(item) : util.toFixed(item, 2);\n    return item;\n  });\n\n  var xAxisScaleValues = result.ranges.map(function (item) {\n    // 如果刻度值是浮点数,则保留两位小数\n    item = util.toFixed(item, 2);\n    // 若有自定义格式则调用自定义的格式化函数\n    item = opts.xAxis.format ? opts.xAxis.format(Number(item)) : item;\n    return item;\n  });\n\n  result = Object.assign(result, getXAxisPoints(xAxisScaleValues, opts, config));\n  // 计算X轴刻度的属性譬如每个刻度的间隔,刻度的起始点\\结束点以及总长\n  var eachSpacing = result.eachSpacing;\n\n  var textLength = xAxisScaleValues.map(function (item) {\n    return measureText(item);\n  });\n\n  // get max length of categories text\n  var maxTextLength = Math.max.apply(this, textLength);\n\n  // 如果刻度值文本内容过长,则将其逆时针旋转45°\n  if (maxTextLength + 2 * config.xAxisTextPadding > eachSpacing) {\n    result.angle = 45 * Math.PI / 180;\n    result.xAxisHeight = 2 * config.xAxisTextPadding + maxTextLength * Math.sin(result.angle);\n  }\n\n  if (opts.xAxis.disabled === true) {\n    result.xAxisHeight = 0;\n  }\n\n  return result;\n}\n\nfunction getRadarDataPoints(angleList, center, radius, series, opts) {\n  var process = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 1;\n\n  var radarOption = opts.extra.radar || {};\n  radarOption.max = radarOption.max || 0;\n  var maxData = Math.max(radarOption.max, Math.max.apply(null, dataCombine(series)));\n\n  var data = [];var _loop2 = function _loop2(\n  i) {\n    var each = series[i];\n    var listItem = {};\n    listItem.color = each.color;\n    listItem.legendShape = each.legendShape;\n    listItem.pointShape = each.pointShape;\n    listItem.data = [];\n    each.data.forEach(function (item, index) {\n      var tmp = {};\n      tmp.angle = angleList[index];\n\n      tmp.proportion = item / maxData;\n      tmp.position = convertCoordinateOrigin(radius * tmp.proportion * process * Math.cos(tmp.angle), radius * tmp.proportion *\n      process * Math.sin(tmp.angle), center);\n      listItem.data.push(tmp);\n    });\n\n    data.push(listItem);};for (var i = 0; i < series.length; i++) {_loop2(i);\n  }\n\n  return data;\n}\n\nfunction getPieDataPoints(series, radius) {\n  var process = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n  var count = 0;\n  var _start_ = 0;\n  for (var i = 0; i < series.length; i++) {\n    var item = series[i];\n    item.data = item.data === null ? 0 : item.data;\n    count += item.data;\n  }\n  for (var _i7 = 0; _i7 < series.length; _i7++) {\n    var _item2 = series[_i7];\n    _item2.data = _item2.data === null ? 0 : _item2.data;\n    if (count === 0) {\n      _item2._proportion_ = 1 / series.length * process;\n    } else {\n      _item2._proportion_ = _item2.data / count * process;\n    }\n    _item2._radius_ = radius;\n  }\n  for (var _i8 = 0; _i8 < series.length; _i8++) {\n    var _item3 = series[_i8];\n    _item3._start_ = _start_;\n    _start_ += 2 * _item3._proportion_ * Math.PI;\n  }\n\n  return series;\n}\n\nfunction getFunnelDataPoints(series, radius) {\n  var process = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  series = series.sort(function (a, b) {return parseInt(b.data) - parseInt(a.data);});\n  for (var i = 0; i < series.length; i++) {\n    series[i].radius = series[i].data / series[0].data * radius * process;\n    series[i]._proportion_ = series[i].data / series[0].data;\n  }\n  return series.reverse();\n}\n\nfunction getRoseDataPoints(series, type, minRadius, radius) {\n  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n  var count = 0;\n  var _start_ = 0;\n\n  var dataArr = [];\n  for (var i = 0; i < series.length; i++) {\n    var item = series[i];\n    item.data = item.data === null ? 0 : item.data;\n    count += item.data;\n    dataArr.push(item.data);\n  }\n\n  var minData = Math.min.apply(null, dataArr);\n  var maxData = Math.max.apply(null, dataArr);\n  var radiusLength = radius - minRadius;\n\n  for (var _i9 = 0; _i9 < series.length; _i9++) {\n    var _item4 = series[_i9];\n    _item4.data = _item4.data === null ? 0 : _item4.data;\n    if (count === 0 || type == 'area') {\n      _item4._proportion_ = _item4.data / count * process;\n      _item4._rose_proportion_ = 1 / series.length * process;\n    } else {\n      _item4._proportion_ = _item4.data / count * process;\n      _item4._rose_proportion_ = _item4.data / count * process;\n    }\n    _item4._radius_ = minRadius + radiusLength * ((_item4.data - minData) / (maxData - minData));\n  }\n  for (var _i10 = 0; _i10 < series.length; _i10++) {\n    var _item5 = series[_i10];\n    _item5._start_ = _start_;\n    _start_ += 2 * _item5._rose_proportion_ * Math.PI;\n  }\n\n  return series;\n}\n\nfunction getArcbarDataPoints(series, arcbarOption) {\n  var process = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  if (process == 1) {\n    process = 0.999999;\n  }\n  for (var i = 0; i < series.length; i++) {\n    var item = series[i];\n    item.data = item.data === null ? 0 : item.data;\n    var totalAngle = void 0;\n    if (arcbarOption.type == 'circle') {\n      totalAngle = 2;\n    } else {\n      if (arcbarOption.endAngle < arcbarOption.startAngle) {\n        totalAngle = 2 + arcbarOption.endAngle - arcbarOption.startAngle;\n      } else {\n        totalAngle = arcbarOption.startAngle - arcbarOption.endAngle;\n      }\n    }\n    item._proportion_ = totalAngle * item.data * process + arcbarOption.startAngle;\n    if (item._proportion_ >= 2) {\n      item._proportion_ = item._proportion_ % 2;\n    }\n  }\n  return series;\n}\n\nfunction getGaugeAxisPoints(categories, startAngle, endAngle) {\n  var totalAngle = startAngle - endAngle + 1;\n  var tempStartAngle = startAngle;\n  for (var i = 0; i < categories.length; i++) {\n    categories[i].value = categories[i].value === null ? 0 : categories[i].value;\n    categories[i]._startAngle_ = tempStartAngle;\n    categories[i]._endAngle_ = totalAngle * categories[i].value + startAngle;\n    if (categories[i]._endAngle_ >= 2) {\n      categories[i]._endAngle_ = categories[i]._endAngle_ % 2;\n    }\n    tempStartAngle = categories[i]._endAngle_;\n  }\n  return categories;\n}\n\nfunction getGaugeDataPoints(series, categories, gaugeOption) {\n  var process = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n  for (var i = 0; i < series.length; i++) {\n    var item = series[i];\n    item.data = item.data === null ? 0 : item.data;\n    if (gaugeOption.pointer.color == 'auto') {\n      for (var _i11 = 0; _i11 < categories.length; _i11++) {\n        if (item.data <= categories[_i11].value) {\n          item.color = categories[_i11].color;\n          break;\n        }\n      }\n    } else {\n      item.color = gaugeOption.pointer.color;\n    }\n    var totalAngle = gaugeOption.startAngle - gaugeOption.endAngle + 1;\n    item._endAngle_ = totalAngle * item.data + gaugeOption.startAngle;\n    item._oldAngle_ = gaugeOption.oldAngle;\n    if (gaugeOption.oldAngle < gaugeOption.endAngle) {\n      item._oldAngle_ += 2;\n    }\n    if (item.data >= gaugeOption.oldData) {\n      item._proportion_ = (item._endAngle_ - item._oldAngle_) * process + gaugeOption.oldAngle;\n    } else {\n      item._proportion_ = item._oldAngle_ - (item._oldAngle_ - item._endAngle_) * process;\n    }\n    if (item._proportion_ >= 2) {\n      item._proportion_ = item._proportion_ % 2;\n    }\n  }\n  return series;\n}\n\nfunction getPieTextMaxLength(series) {\n  series = getPieDataPoints(series);\n  var maxLength = 0;\n  for (var i = 0; i < series.length; i++) {\n    var item = series[i];\n    var text = item.format ? item.format(+item._proportion_.toFixed(2)) : util.toFixed(item._proportion_ * 100) + '%';\n    maxLength = Math.max(maxLength, measureText(text));\n  }\n\n  return maxLength;\n}\n\nfunction fixColumeData(points, eachSpacing, columnLen, index, config, opts) {\n  return points.map(function (item) {\n    if (item === null) {\n      return null;\n    }\n    item.width = Math.ceil((eachSpacing - 2 * config.columePadding) / columnLen);\n\n    if (opts.extra.column && opts.extra.column.width && +opts.extra.column.width > 0) {\n      item.width = Math.min(item.width, +opts.extra.column.width);\n    }\n    if (item.width <= 0) {\n      item.width = 1;\n    }\n    item.x += (index + 0.5 - columnLen / 2) * item.width;\n    return item;\n  });\n}\n\nfunction fixColumeMeterData(points, eachSpacing, columnLen, index, config, opts, border) {\n  return points.map(function (item) {\n    if (item === null) {\n      return null;\n    }\n    item.width = Math.ceil((eachSpacing - 2 * config.columePadding) / 2);\n\n    if (opts.extra.column && opts.extra.column.width && +opts.extra.column.width > 0) {\n      item.width = Math.min(item.width, +opts.extra.column.width);\n    }\n\n    if (index > 0) {\n      item.width -= 2 * border;\n    }\n    return item;\n  });\n}\n\nfunction fixColumeStackData(points, eachSpacing, columnLen, index, config, opts, series) {\n\n  return points.map(function (item, indexn) {\n\n    if (item === null) {\n      return null;\n    }\n    item.width = Math.ceil((eachSpacing - 2 * config.columePadding) / 2);\n\n    if (opts.extra.column && opts.extra.column.width && +opts.extra.column.width > 0) {\n      item.width = Math.min(item.width, +opts.extra.column.width);\n    }\n    return item;\n  });\n}\n\nfunction getXAxisPoints(categories, opts, config) {\n  var spacingValid = opts.width - opts.area[1] - opts.area[3];\n  var dataCount = opts.enableScroll ? Math.min(opts.xAxis.itemCount, categories.length) : categories.length;\n  if ((opts.type == 'line' || opts.type == 'area') && dataCount > 1 && opts.xAxis.boundaryGap == 'justify') {\n    dataCount -= 1;\n  }\n  var eachSpacing = spacingValid / dataCount;\n\n  var xAxisPoints = [];\n  var startX = opts.area[3];\n  var endX = opts.width - opts.area[1];\n  categories.forEach(function (item, index) {\n    xAxisPoints.push(startX + index * eachSpacing);\n  });\n  if (opts.xAxis.boundaryGap !== 'justify') {\n    if (opts.enableScroll === true) {\n      xAxisPoints.push(startX + categories.length * eachSpacing);\n    } else {\n      xAxisPoints.push(endX);\n    }\n  }\n  return {\n    xAxisPoints: xAxisPoints,\n    startX: startX,\n    endX: endX,\n    eachSpacing: eachSpacing };\n\n}\n\nfunction getCandleDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config) {\n  var process = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 1;\n  var points = [];\n  var validHeight = opts.height - opts.area[0] - opts.area[2];\n  data.forEach(function (item, index) {\n    if (item === null) {\n      points.push(null);\n    } else {\n      var cPoints = [];\n      item.forEach(function (items, indexs) {\n        var point = {};\n        point.x = xAxisPoints[index] + Math.round(eachSpacing / 2);\n        var value = items.value || items;\n        var height = validHeight * (value - minRange) / (maxRange - minRange);\n        height *= process;\n        point.y = opts.height - Math.round(height) - opts.area[2];\n        cPoints.push(point);\n      });\n      points.push(cPoints);\n    }\n  });\n\n  return points;\n}\n\nfunction getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config) {\n  var process = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 1;\n  var boundaryGap = 'center';\n  if (opts.type == 'line' || opts.type == 'area') {\n    boundaryGap = opts.xAxis.boundaryGap;\n  }\n  var points = [];\n  var validHeight = opts.height - opts.area[0] - opts.area[2];\n  var validWidth = opts.width - opts.area[1] - opts.area[3];\n  data.forEach(function (item, index) {\n    if (item === null) {\n      points.push(null);\n    } else {\n      var point = {};\n      point.color = item.color;\n      point.x = xAxisPoints[index];\n      var value = item;\n      if (typeof item === 'object' && item !== null) {\n        if (item.constructor.toString().indexOf('Array') > -1) {\n          var xranges, xminRange, xmaxRange;\n          xranges = [].concat(opts.chartData.xAxisData.ranges);\n          xminRange = xranges.shift();\n          xmaxRange = xranges.pop();\n          value = item[1];\n          point.x = opts.area[3] + validWidth * (item[0] - xminRange) / (xmaxRange - xminRange);\n        } else {\n          value = item.value;\n        }\n      }\n      if (boundaryGap == 'center') {\n        point.x += Math.round(eachSpacing / 2);\n      }\n      var height = validHeight * (value - minRange) / (maxRange - minRange);\n      height *= process;\n      point.y = opts.height - Math.round(height) - opts.area[2];\n      points.push(point);\n    }\n  });\n\n  return points;\n}\n\nfunction getStackDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, seriesIndex, stackSeries) {\n  var process = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : 1;\n  var points = [];\n  var validHeight = opts.height - opts.area[0] - opts.area[2];\n\n  data.forEach(function (item, index) {\n    if (item === null) {\n      points.push(null);\n    } else {\n      var point = {};\n      point.color = item.color;\n      point.x = xAxisPoints[index] + Math.round(eachSpacing / 2);\n\n      if (seriesIndex > 0) {\n        var value = 0;\n        for (var i = 0; i <= seriesIndex; i++) {\n          value += stackSeries[i].data[index];\n        }\n        var value0 = value - item;\n        var height = validHeight * (value - minRange) / (maxRange - minRange);\n        var height0 = validHeight * (value0 - minRange) / (maxRange - minRange);\n      } else {\n        var value = item;\n        var height = validHeight * (value - minRange) / (maxRange - minRange);\n        var height0 = 0;\n      }\n      var heightc = height0;\n      height *= process;\n      heightc *= process;\n      point.y = opts.height - Math.round(height) - opts.area[2];\n      point.y0 = opts.height - Math.round(heightc) - opts.area[2];\n      points.push(point);\n    }\n  });\n\n  return points;\n}\n\nfunction getYAxisTextList(series, opts, config, stack) {\n  var index = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : -1;\n  var data;\n  if (stack == 'stack') {\n    data = dataCombineStack(series, opts.categories.length);\n  } else {\n    data = dataCombine(series);\n  }\n  var sorted = [];\n  // remove null from data\n  data = data.filter(function (item) {\n    //return item !== null;\n    if (typeof item === 'object' && item !== null) {\n      if (item.constructor.toString().indexOf('Array') > -1) {\n        return item !== null;\n      } else {\n        return item.value !== null;\n      }\n    } else {\n      return item !== null;\n    }\n  });\n  data.map(function (item) {\n    if (typeof item === 'object') {\n      if (item.constructor.toString().indexOf('Array') > -1) {\n        if (opts.type == 'candle') {\n          item.map(function (subitem) {\n            sorted.push(subitem);\n          });\n        } else {\n          sorted.push(item[1]);\n        }\n      } else {\n        sorted.push(item.value);\n      }\n    } else {\n      sorted.push(item);\n    }\n  });\n\n  var minData = 0;\n  var maxData = 0;\n  if (sorted.length > 0) {\n    minData = Math.min.apply(this, sorted);\n    maxData = Math.max.apply(this, sorted);\n  }\n  //为了兼容v1.9.0之前的项目\n  if (index > -1) {\n    if (typeof opts.yAxis.data[index].min === 'number') {\n      minData = Math.min(opts.yAxis.data[index].min, minData);\n    }\n    if (typeof opts.yAxis.data[index].max === 'number') {\n      maxData = Math.max(opts.yAxis.data[index].max, maxData);\n    }\n  } else {\n    if (typeof opts.yAxis.min === 'number') {\n      minData = Math.min(opts.yAxis.min, minData);\n    }\n    if (typeof opts.yAxis.max === 'number') {\n      maxData = Math.max(opts.yAxis.max, maxData);\n    }\n  }\n\n\n  if (minData === maxData) {\n    var rangeSpan = maxData || 10;\n    maxData += rangeSpan;\n  }\n\n  var dataRange = getDataRange(minData, maxData);\n  var minRange = dataRange.minRange;\n  var maxRange = dataRange.maxRange;\n\n  var range = [];\n  var eachRange = (maxRange - minRange) / opts.yAxis.splitNumber;\n\n  for (var i = 0; i <= opts.yAxis.splitNumber; i++) {\n    range.push(minRange + eachRange * i);\n  }\n  return range.reverse();\n}\n\nfunction calYAxisData(series, opts, config) {\n  //堆叠图重算Y轴\n  var columnstyle = assign({}, {\n    type: \"\" },\n  opts.extra.column);\n  //如果是多Y轴，重新计算\n  var YLength = opts.yAxis.data.length;\n  var newSeries = new Array(YLength);\n  if (YLength > 0) {\n    for (var i = 0; i < YLength; i++) {\n      newSeries[i] = [];\n      for (var j = 0; j < series.length; j++) {\n        if (series[j].index == i) {\n          newSeries[i].push(series[j]);\n        }\n      }\n    }\n    var rangesArr = new Array(YLength);\n    var rangesFormatArr = new Array(YLength);\n    var yAxisWidthArr = new Array(YLength);var _loop3 = function _loop3(\n\n    _i12) {\n      var yData = opts.yAxis.data[_i12];\n      //如果总开关不显示，强制每个Y轴为不显示\n      if (opts.yAxis.disabled == true) {\n        yData.disabled = true;\n      }\n      rangesArr[_i12] = getYAxisTextList(newSeries[_i12], opts, config, columnstyle.type, _i12);\n      var yAxisFontSizes = yData.fontSize || config.fontSize;\n      yAxisWidthArr[_i12] = { position: yData.position ? yData.position : 'left', width: 0 };\n      rangesFormatArr[_i12] = rangesArr[_i12].map(function (items) {\n        items = util.toFixed(items, 6);\n        items = yData.format ? yData.format(Number(items)) : items;\n        yAxisWidthArr[_i12].width = Math.max(yAxisWidthArr[_i12].width, measureText(items, yAxisFontSizes) + 5);\n        return items;\n      });\n      var calibration = yData.calibration ? 4 * opts.pixelRatio : 0;\n      yAxisWidthArr[_i12].width += calibration + 3 * opts.pixelRatio;\n      if (yData.disabled === true) {\n        yAxisWidthArr[_i12].width = 0;\n      }};for (var _i12 = 0; _i12 < YLength; _i12++) {_loop3(_i12);\n    }\n\n  } else {\n    var rangesArr = new Array(1);\n    var rangesFormatArr = new Array(1);\n    var yAxisWidthArr = new Array(1);\n    rangesArr[0] = getYAxisTextList(series, opts, config, columnstyle.type);\n    yAxisWidthArr[0] = { position: 'left', width: 0 };\n    var yAxisFontSize = opts.yAxis.fontSize || config.fontSize;\n    rangesFormatArr[0] = rangesArr[0].map(function (item) {\n      item = util.toFixed(item, 6);\n      item = opts.yAxis.format ? opts.yAxis.format(Number(item)) : item;\n      yAxisWidthArr[0].width = Math.max(yAxisWidthArr[0].width, measureText(item, yAxisFontSize) + 5);\n      return item;\n    });\n    yAxisWidthArr[0].width += 3 * opts.pixelRatio;\n    if (opts.yAxis.disabled === true) {\n      yAxisWidthArr[0] = { position: 'left', width: 0 };\n      opts.yAxis.data[0] = { disabled: true };\n    } else {\n      opts.yAxis.data[0] = { disabled: false, position: 'left', max: opts.yAxis.max, min: opts.yAxis.min, format: opts.yAxis.format };\n    }\n\n  }\n\n  return {\n    rangesFormat: rangesFormatArr,\n    ranges: rangesArr,\n    yAxisWidth: yAxisWidthArr };\n\n\n}\n\nfunction calTooltipYAxisData(point, series, opts, config, eachSpacing) {\n  var ranges = [].concat(opts.chartData.yAxisData.ranges);\n  var spacingValid = opts.height - opts.area[0] - opts.area[2];\n  var minAxis = opts.area[0];\n  var items = [];\n  for (var i = 0; i < ranges.length; i++) {\n    var maxVal = ranges[i].shift();\n    var minVal = ranges[i].pop();\n    var item = maxVal - (maxVal - minVal) * (point - minAxis) / spacingValid;\n    item = opts.yAxis.data[i].format ? opts.yAxis.data[i].format(Number(item)) : item.toFixed(0);\n    items.push(String(item));\n  }\n  return items;\n}\n\nfunction calMarkLineData(points, opts) {\n  var minRange, maxRange;\n  var spacingValid = opts.height - opts.area[0] - opts.area[2];\n  for (var i = 0; i < points.length; i++) {\n    points[i].yAxisIndex = points[i].yAxisIndex ? points[i].yAxisIndex : 0;\n    var range = [].concat(opts.chartData.yAxisData.ranges[points[i].yAxisIndex]);\n    minRange = range.pop();\n    maxRange = range.shift();\n    var height = spacingValid * (points[i].value - minRange) / (maxRange - minRange);\n    points[i].y = opts.height - Math.round(height) - opts.area[2];\n  }\n  return points;\n}\n\nfunction contextRotate(context, opts) {\n  if (opts.rotateLock !== true) {\n    context.translate(opts.height, 0);\n    context.rotate(90 * Math.PI / 180);\n  } else if (opts._rotate_ !== true) {\n    context.translate(opts.height, 0);\n    context.rotate(90 * Math.PI / 180);\n    opts._rotate_ = true;\n  }\n}\n\nfunction drawPointShape(points, color, shape, context, opts) {\n  context.beginPath();\n  if (opts.dataPointShapeType == 'hollow') {\n    context.setStrokeStyle(color);\n    context.setFillStyle(opts.background);\n    context.setLineWidth(2 * opts.pixelRatio);\n  } else {\n    context.setStrokeStyle(\"#ffffff\");\n    context.setFillStyle(color);\n    context.setLineWidth(1 * opts.pixelRatio);\n  }\n  if (shape === 'diamond') {\n    points.forEach(function (item, index) {\n      if (item !== null) {\n        context.moveTo(item.x, item.y - 4.5);\n        context.lineTo(item.x - 4.5, item.y);\n        context.lineTo(item.x, item.y + 4.5);\n        context.lineTo(item.x + 4.5, item.y);\n        context.lineTo(item.x, item.y - 4.5);\n      }\n    });\n  } else if (shape === 'circle') {\n    points.forEach(function (item, index) {\n      if (item !== null) {\n        context.moveTo(item.x + 2.5 * opts.pixelRatio, item.y);\n        context.arc(item.x, item.y, 3 * opts.pixelRatio, 0, 2 * Math.PI, false);\n      }\n    });\n  } else if (shape === 'rect') {\n    points.forEach(function (item, index) {\n      if (item !== null) {\n        context.moveTo(item.x - 3.5, item.y - 3.5);\n        context.rect(item.x - 3.5, item.y - 3.5, 7, 7);\n      }\n    });\n  } else if (shape === 'triangle') {\n    points.forEach(function (item, index) {\n      if (item !== null) {\n        context.moveTo(item.x, item.y - 4.5);\n        context.lineTo(item.x - 4.5, item.y + 4.5);\n        context.lineTo(item.x + 4.5, item.y + 4.5);\n        context.lineTo(item.x, item.y - 4.5);\n      }\n    });\n  }\n  context.closePath();\n  context.fill();\n  context.stroke();\n}\n\nfunction drawRingTitle(opts, config, context, center) {\n  var titlefontSize = opts.title.fontSize || config.titleFontSize;\n  var subtitlefontSize = opts.subtitle.fontSize || config.subtitleFontSize;\n  var title = opts.title.name || '';\n  var subtitle = opts.subtitle.name || '';\n  var titleFontColor = opts.title.color || config.titleColor;\n  var subtitleFontColor = opts.subtitle.color || config.subtitleColor;\n  var titleHeight = title ? titlefontSize : 0;\n  var subtitleHeight = subtitle ? subtitlefontSize : 0;\n  var margin = 5;\n\n  if (subtitle) {\n    var textWidth = measureText(subtitle, subtitlefontSize);\n    var startX = center.x - textWidth / 2 + (opts.subtitle.offsetX || 0);\n    var startY = center.y + subtitlefontSize / 2 + (opts.subtitle.offsetY || 0);\n    if (title) {\n      startY += (titleHeight + margin) / 2;\n    }\n    context.beginPath();\n    context.setFontSize(subtitlefontSize);\n    context.setFillStyle(subtitleFontColor);\n    context.fillText(subtitle, startX, startY);\n    context.closePath();\n    context.stroke();\n  }\n  if (title) {\n    var _textWidth = measureText(title, titlefontSize);\n    var _startX = center.x - _textWidth / 2 + (opts.title.offsetX || 0);\n    var _startY = center.y + titlefontSize / 2 + (opts.title.offsetY || 0);\n    if (subtitle) {\n      _startY -= (subtitleHeight + margin) / 2;\n    }\n    context.beginPath();\n    context.setFontSize(titlefontSize);\n    context.setFillStyle(titleFontColor);\n    context.fillText(title, _startX, _startY);\n    context.closePath();\n    context.stroke();\n  }\n}\n\nfunction drawPointText(points, series, config, context) {\n  // 绘制数据文案\n  var data = series.data;\n  points.forEach(function (item, index) {\n    if (item !== null) {\n      //var formatVal = series.format ? series.format(data[index]) : data[index];\n      context.beginPath();\n      context.setFontSize(series.textSize || config.fontSize);\n      context.setFillStyle(series.textColor || '#666666');\n      var value = data[index];\n      if (typeof data[index] === 'object' && data[index] !== null) {\n        if (data[index].constructor == Array) {\n          value = data[index][1];\n        } else {\n          value = data[index].value;\n        }\n      }\n      var formatVal = series.format ? series.format(value) : value;\n      context.fillText(String(formatVal), item.x - measureText(formatVal, series.textSize || config.fontSize) / 2, item.y - 4);\n      context.closePath();\n      context.stroke();\n    }\n  });\n\n}\n\nfunction drawGaugeLabel(gaugeOption, radius, centerPosition, opts, config, context) {\n  radius -= gaugeOption.width / 2 + config.gaugeLabelTextMargin;\n\n  var totalAngle = gaugeOption.startAngle - gaugeOption.endAngle + 1;\n  var splitAngle = totalAngle / gaugeOption.splitLine.splitNumber;\n  var totalNumber = gaugeOption.endNumber - gaugeOption.startNumber;\n  var splitNumber = totalNumber / gaugeOption.splitLine.splitNumber;\n  var nowAngle = gaugeOption.startAngle;\n  var nowNumber = gaugeOption.startNumber;\n  for (var i = 0; i < gaugeOption.splitLine.splitNumber + 1; i++) {\n    var pos = {\n      x: radius * Math.cos(nowAngle * Math.PI),\n      y: radius * Math.sin(nowAngle * Math.PI) };\n\n    var labelText = gaugeOption.labelFormat ? gaugeOption.labelFormat(nowNumber) : nowNumber;\n    pos.x += centerPosition.x - measureText(labelText) / 2;\n    pos.y += centerPosition.y;\n    var startX = pos.x;\n    var startY = pos.y;\n    context.beginPath();\n    context.setFontSize(config.fontSize);\n    context.setFillStyle(gaugeOption.labelColor || '#666666');\n    context.fillText(labelText, startX, startY + config.fontSize / 2);\n    context.closePath();\n    context.stroke();\n\n    nowAngle += splitAngle;\n    if (nowAngle >= 2) {\n      nowAngle = nowAngle % 2;\n    }\n    nowNumber += splitNumber;\n  }\n\n}\n\nfunction drawRadarLabel(angleList, radius, centerPosition, opts, config, context) {\n  var radarOption = opts.extra.radar || {};\n  radius += config.radarLabelTextMargin;\n\n  angleList.forEach(function (angle, index) {\n    var pos = {\n      x: radius * Math.cos(angle),\n      y: radius * Math.sin(angle) };\n\n    var posRelativeCanvas = convertCoordinateOrigin(pos.x, pos.y, centerPosition);\n    var startX = posRelativeCanvas.x;\n    var startY = posRelativeCanvas.y;\n    if (util.approximatelyEqual(pos.x, 0)) {\n      startX -= measureText(opts.categories[index] || '') / 2;\n    } else if (pos.x < 0) {\n      startX -= measureText(opts.categories[index] || '');\n    }\n    context.beginPath();\n    context.setFontSize(config.fontSize);\n    context.setFillStyle(radarOption.labelColor || '#666666');\n    context.fillText(opts.categories[index] || '', startX, startY + config.fontSize / 2);\n    context.closePath();\n    context.stroke();\n  });\n\n}\n\nfunction drawPieText(series, opts, config, context, radius, center) {\n  var lineRadius = config.pieChartLinePadding;\n  var textObjectCollection = [];\n  var lastTextObject = null;\n\n  var seriesConvert = series.map(function (item) {\n    var text = item.format ? item.format(+item._proportion_.toFixed(2)) : util.toFixed(item._proportion_.toFixed(4) * 100) + '%';\n    if (item._rose_proportion_) item._proportion_ = item._rose_proportion_;\n    var arc = 2 * Math.PI - (item._start_ + 2 * Math.PI * item._proportion_ / 2);\n    var color = item.color;\n    var radius = item._radius_;\n    return {\n      arc: arc,\n      text: text,\n      color: color,\n      radius: radius,\n      textColor: item.textColor,\n      textSize: item.textSize };\n\n  });\n  for (var i = 0; i < seriesConvert.length; i++) {\n    var item = seriesConvert[i];\n    // line end\n    var orginX1 = Math.cos(item.arc) * (item.radius + lineRadius);\n    var orginY1 = Math.sin(item.arc) * (item.radius + lineRadius);\n\n    // line start\n    var orginX2 = Math.cos(item.arc) * item.radius;\n    var orginY2 = Math.sin(item.arc) * item.radius;\n\n    // text start\n    var orginX3 = orginX1 >= 0 ? orginX1 + config.pieChartTextPadding : orginX1 - config.pieChartTextPadding;\n    var orginY3 = orginY1;\n    var textWidth = measureText(item.text, item.textSize || config.fontSize);\n    var startY = orginY3;\n\n    if (lastTextObject && util.isSameXCoordinateArea(lastTextObject.start, {\n      x: orginX3 }))\n    {\n      if (orginX3 > 0) {\n        startY = Math.min(orginY3, lastTextObject.start.y);\n      } else if (orginX1 < 0) {\n        startY = Math.max(orginY3, lastTextObject.start.y);\n      } else {\n        if (orginY3 > 0) {\n          startY = Math.max(orginY3, lastTextObject.start.y);\n        } else {\n          startY = Math.min(orginY3, lastTextObject.start.y);\n        }\n      }\n    }\n    if (orginX3 < 0) {\n      orginX3 -= textWidth;\n    }\n\n    var textObject = {\n      lineStart: {\n        x: orginX2,\n        y: orginY2 },\n\n      lineEnd: {\n        x: orginX1,\n        y: orginY1 },\n\n      start: {\n        x: orginX3,\n        y: startY },\n\n      width: textWidth,\n      height: config.fontSize,\n      text: item.text,\n      color: item.color,\n      textColor: item.textColor,\n      textSize: item.textSize };\n\n    lastTextObject = avoidCollision(textObject, lastTextObject);\n    textObjectCollection.push(lastTextObject);\n  }\n\n  for (var _i13 = 0; _i13 < textObjectCollection.length; _i13++) {\n    var _item6 = textObjectCollection[_i13];\n    var lineStartPoistion = convertCoordinateOrigin(_item6.lineStart.x, _item6.lineStart.y, center);\n    var lineEndPoistion = convertCoordinateOrigin(_item6.lineEnd.x, _item6.lineEnd.y, center);\n    var textPosition = convertCoordinateOrigin(_item6.start.x, _item6.start.y, center);\n    context.setLineWidth(1 * opts.pixelRatio);\n    context.setFontSize(config.fontSize);\n    context.beginPath();\n    context.setStrokeStyle(_item6.color);\n    context.setFillStyle(_item6.color);\n    context.moveTo(lineStartPoistion.x, lineStartPoistion.y);\n    var curveStartX = _item6.start.x < 0 ? textPosition.x + _item6.width : textPosition.x;\n    var textStartX = _item6.start.x < 0 ? textPosition.x - 5 : textPosition.x + 5;\n    context.quadraticCurveTo(lineEndPoistion.x, lineEndPoistion.y, curveStartX, textPosition.y);\n    context.moveTo(lineStartPoistion.x, lineStartPoistion.y);\n    context.stroke();\n    context.closePath();\n    context.beginPath();\n    context.moveTo(textPosition.x + _item6.width, textPosition.y);\n    context.arc(curveStartX, textPosition.y, 2, 0, 2 * Math.PI);\n    context.closePath();\n    context.fill();\n    context.beginPath();\n    context.setFontSize(_item6.textSize || config.fontSize);\n    context.setFillStyle(_item6.textColor || '#666666');\n    context.fillText(_item6.text, textStartX, textPosition.y + 3);\n    context.closePath();\n    context.stroke();\n    context.closePath();\n  }\n}\n\nfunction drawToolTipSplitLine(offsetX, opts, config, context) {\n  var toolTipOption = opts.extra.tooltip || {};\n  toolTipOption.gridType = toolTipOption.gridType == undefined ? 'solid' : toolTipOption.gridType;\n  toolTipOption.dashLength = toolTipOption.dashLength == undefined ? 4 : toolTipOption.dashLength;\n  var startY = opts.area[0];\n  var endY = opts.height - opts.area[2];\n\n  if (toolTipOption.gridType == 'dash') {\n    context.setLineDash([toolTipOption.dashLength, toolTipOption.dashLength]);\n  }\n  context.setStrokeStyle(toolTipOption.gridColor || '#cccccc');\n  context.setLineWidth(1 * opts.pixelRatio);\n  context.beginPath();\n  context.moveTo(offsetX, startY);\n  context.lineTo(offsetX, endY);\n  context.stroke();\n  context.setLineDash([]);\n\n  if (toolTipOption.xAxisLabel) {\n    var labelText = opts.categories[opts.tooltip.index];\n    context.setFontSize(config.fontSize);\n    var textWidth = measureText(labelText, config.fontSize);\n\n    var textX = offsetX - 0.5 * textWidth;\n    var textY = endY;\n    context.beginPath();\n    context.setFillStyle(hexToRgb(toolTipOption.labelBgColor || config.toolTipBackground, toolTipOption.labelBgOpacity || config.toolTipOpacity));\n    context.setStrokeStyle(toolTipOption.labelBgColor || config.toolTipBackground);\n    context.setLineWidth(1 * opts.pixelRatio);\n    context.rect(textX - config.toolTipPadding, textY, textWidth + 2 * config.toolTipPadding, config.fontSize + 2 * config.toolTipPadding);\n    context.closePath();\n    context.stroke();\n    context.fill();\n\n    context.beginPath();\n    context.setFontSize(config.fontSize);\n    context.setFillStyle(toolTipOption.labelFontColor || config.fontColor);\n    context.fillText(String(labelText), textX, textY + config.toolTipPadding + config.fontSize);\n    context.closePath();\n    context.stroke();\n  }\n}\n\nfunction drawMarkLine(opts, config, context) {\n  var markLineOption = assign({}, {\n    type: 'solid',\n    dashLength: 4,\n    data: [] },\n  opts.extra.markLine);\n  var startX = opts.area[3];\n  var endX = opts.width - opts.area[1];\n  var points = calMarkLineData(markLineOption.data, opts);\n\n  for (var i = 0; i < points.length; i++) {\n    var item = assign({}, {\n      lineColor: '#DE4A42',\n      showLabel: false,\n      labelFontColor: '#666666',\n      labelBgColor: '#DFE8FF',\n      labelBgOpacity: 0.8,\n      yAxisIndex: 0 },\n    points[i]);\n\n    if (markLineOption.type == 'dash') {\n      context.setLineDash([markLineOption.dashLength, markLineOption.dashLength]);\n    }\n    context.setStrokeStyle(item.lineColor);\n    context.setLineWidth(1 * opts.pixelRatio);\n    context.beginPath();\n    context.moveTo(startX, item.y);\n    context.lineTo(endX, item.y);\n    context.stroke();\n    context.setLineDash([]);\n    if (item.showLabel) {\n      var labelText = opts.yAxis.format ? opts.yAxis.format(Number(item.value)) : item.value;\n      context.setFontSize(config.fontSize);\n      var textWidth = measureText(labelText, config.fontSize);\n      var bgStartX = opts.padding[3] + config.yAxisTitleWidth - config.toolTipPadding;\n      var bgEndX = Math.max(opts.area[3], textWidth + config.toolTipPadding * 2);\n      var bgWidth = bgEndX - bgStartX;\n\n      var textX = bgStartX + (bgWidth - textWidth) / 2;\n      var textY = item.y;\n      context.setFillStyle(hexToRgb(item.labelBgColor, item.labelBgOpacity));\n      context.setStrokeStyle(item.labelBgColor);\n      context.setLineWidth(1 * opts.pixelRatio);\n      context.beginPath();\n      context.rect(bgStartX, textY - 0.5 * config.fontSize - config.toolTipPadding, bgWidth, config.fontSize + 2 * config.toolTipPadding);\n      context.closePath();\n      context.stroke();\n      context.fill();\n\n      context.beginPath();\n      context.setFontSize(config.fontSize);\n      context.setFillStyle(item.labelFontColor);\n      context.fillText(String(labelText), textX, textY + 0.5 * config.fontSize);\n      context.stroke();\n    }\n  }\n}\n\nfunction drawToolTipHorizentalLine(opts, config, context, eachSpacing, xAxisPoints) {\n  var toolTipOption = assign({}, {\n    gridType: 'solid',\n    dashLength: 4 },\n  opts.extra.tooltip);\n\n  var startX = opts.area[3];\n  var endX = opts.width - opts.area[1];\n\n  if (toolTipOption.gridType == 'dash') {\n    context.setLineDash([toolTipOption.dashLength, toolTipOption.dashLength]);\n  }\n  context.setStrokeStyle(toolTipOption.gridColor || '#cccccc');\n  context.setLineWidth(1 * opts.pixelRatio);\n  context.beginPath();\n  context.moveTo(startX, opts.tooltip.offset.y);\n  context.lineTo(endX, opts.tooltip.offset.y);\n  context.stroke();\n  context.setLineDash([]);\n\n  if (toolTipOption.yAxisLabel) {\n    var labelText = calTooltipYAxisData(opts.tooltip.offset.y, opts.series, opts, config, eachSpacing);\n    var widthArr = opts.chartData.yAxisData.yAxisWidth;\n    var tStartLeft = opts.area[3];\n    var tStartRight = opts.width - opts.area[1];\n    for (var i = 0; i < labelText.length; i++) {\n      context.setFontSize(config.fontSize);\n      var textWidth = measureText(labelText[i], config.fontSize);\n      var bgStartX = void 0,bgEndX = void 0,bgWidth = void 0;\n      if (widthArr[i].position == 'left') {\n        bgStartX = tStartLeft - widthArr[i].width;\n        bgEndX = Math.max(bgStartX, bgStartX + textWidth + config.toolTipPadding * 2);\n      } else {\n        bgStartX = tStartRight;\n        bgEndX = Math.max(bgStartX + widthArr[i].width, bgStartX + textWidth + config.toolTipPadding * 2);\n      }\n      bgWidth = bgEndX - bgStartX;\n\n      var textX = bgStartX + (bgWidth - textWidth) / 2;\n      var textY = opts.tooltip.offset.y;\n      context.beginPath();\n      context.setFillStyle(hexToRgb(toolTipOption.labelBgColor || config.toolTipBackground, toolTipOption.labelBgOpacity || config.toolTipOpacity));\n      context.setStrokeStyle(toolTipOption.labelBgColor || config.toolTipBackground);\n      context.setLineWidth(1 * opts.pixelRatio);\n      context.rect(bgStartX, textY - 0.5 * config.fontSize - config.toolTipPadding, bgWidth, config.fontSize + 2 * config.toolTipPadding);\n      context.closePath();\n      context.stroke();\n      context.fill();\n\n      context.beginPath();\n      context.setFontSize(config.fontSize);\n      context.setFillStyle(toolTipOption.labelFontColor || config.fontColor);\n      context.fillText(labelText[i], textX, textY + 0.5 * config.fontSize);\n      context.closePath();\n      context.stroke();\n      if (widthArr[i].position == 'left') {\n        tStartLeft -= widthArr[i].width + opts.yAxis.padding;\n      } else {\n        tStartRight += widthArr[i].width + opts.yAxis.padding;\n      }\n    }\n  }\n}\n\nfunction drawToolTipSplitArea(offsetX, opts, config, context, eachSpacing) {\n  var toolTipOption = assign({}, {\n    activeBgColor: '#000000',\n    activeBgOpacity: 0.08 },\n  opts.extra.tooltip);\n  var startY = opts.area[0];\n  var endY = opts.height - opts.area[2];\n  context.beginPath();\n  context.setFillStyle(hexToRgb(toolTipOption.activeBgColor, toolTipOption.activeBgOpacity));\n  context.rect(offsetX - eachSpacing / 2, startY, eachSpacing, endY - startY);\n  context.closePath();\n  context.fill();\n}\n\nfunction drawToolTip(textList, offset, opts, config, context, eachSpacing, xAxisPoints) {\n  var toolTipOption = assign({}, {\n    showBox: true,\n    bgColor: '#000000',\n    bgOpacity: 0.7,\n    fontColor: '#FFFFFF' },\n  opts.extra.tooltip);\n  var legendWidth = 4 * opts.pixelRatio;\n  var legendMarginRight = 5 * opts.pixelRatio;\n  var arrowWidth = 8 * opts.pixelRatio;\n  var isOverRightBorder = false;\n  if (opts.type == 'line' || opts.type == 'area' || opts.type == 'candle' || opts.type == 'mix') {\n    drawToolTipSplitLine(opts.tooltip.offset.x, opts, config, context);\n  }\n\n  offset = assign({\n    x: 0,\n    y: 0 },\n  offset);\n  offset.y -= 8 * opts.pixelRatio;\n  var textWidth = textList.map(function (item) {\n    return measureText(item.text, config.fontSize);\n  });\n  var toolTipWidth = legendWidth + legendMarginRight + 4 * config.toolTipPadding + Math.max.apply(null, textWidth);\n  var toolTipHeight = 2 * config.toolTipPadding + textList.length * config.toolTipLineHeight;\n\n  if (toolTipOption.showBox == false) {return;}\n  // if beyond the right border\n  if (offset.x - Math.abs(opts._scrollDistance_) + arrowWidth + toolTipWidth > opts.width) {\n    isOverRightBorder = true;\n  }\n  if (toolTipHeight + offset.y > opts.height) {\n    offset.y = opts.height - toolTipHeight;\n  }\n  // draw background rect\n  context.beginPath();\n  context.setFillStyle(hexToRgb(toolTipOption.bgColor || config.toolTipBackground, toolTipOption.bgOpacity || config.toolTipOpacity));\n  if (isOverRightBorder) {\n    context.moveTo(offset.x, offset.y + 10 * opts.pixelRatio);\n    context.lineTo(offset.x - arrowWidth, offset.y + 10 * opts.pixelRatio - 5 * opts.pixelRatio);\n    context.lineTo(offset.x - arrowWidth, offset.y);\n    context.lineTo(offset.x - arrowWidth - Math.round(toolTipWidth), offset.y);\n    context.lineTo(offset.x - arrowWidth - Math.round(toolTipWidth), offset.y + toolTipHeight);\n    context.lineTo(offset.x - arrowWidth, offset.y + toolTipHeight);\n    context.lineTo(offset.x - arrowWidth, offset.y + 10 * opts.pixelRatio + 5 * opts.pixelRatio);\n    context.lineTo(offset.x, offset.y + 10 * opts.pixelRatio);\n  } else {\n    context.moveTo(offset.x, offset.y + 10 * opts.pixelRatio);\n    context.lineTo(offset.x + arrowWidth, offset.y + 10 * opts.pixelRatio - 5 * opts.pixelRatio);\n    context.lineTo(offset.x + arrowWidth, offset.y);\n    context.lineTo(offset.x + arrowWidth + Math.round(toolTipWidth), offset.y);\n    context.lineTo(offset.x + arrowWidth + Math.round(toolTipWidth), offset.y + toolTipHeight);\n    context.lineTo(offset.x + arrowWidth, offset.y + toolTipHeight);\n    context.lineTo(offset.x + arrowWidth, offset.y + 10 * opts.pixelRatio + 5 * opts.pixelRatio);\n    context.lineTo(offset.x, offset.y + 10 * opts.pixelRatio);\n  }\n\n  context.closePath();\n  context.fill();\n\n  // draw legend\n  textList.forEach(function (item, index) {\n    if (item.color !== null) {\n      context.beginPath();\n      context.setFillStyle(item.color);\n      var startX = offset.x + arrowWidth + 2 * config.toolTipPadding;\n      var startY = offset.y + (config.toolTipLineHeight - config.fontSize) / 2 + config.toolTipLineHeight * index +\n      config.toolTipPadding + 1;\n      if (isOverRightBorder) {\n        startX = offset.x - toolTipWidth - arrowWidth + 2 * config.toolTipPadding;\n      }\n      context.fillRect(startX, startY, legendWidth, config.fontSize);\n      context.closePath();\n    }\n  });\n\n  // draw text list\n\n  textList.forEach(function (item, index) {\n    var startX = offset.x + arrowWidth + 2 * config.toolTipPadding + legendWidth + legendMarginRight;\n    if (isOverRightBorder) {\n      startX = offset.x - toolTipWidth - arrowWidth + 2 * config.toolTipPadding + +legendWidth + legendMarginRight;\n    }\n    var startY = offset.y + (config.toolTipLineHeight - config.fontSize) / 2 + config.toolTipLineHeight * index +\n    config.toolTipPadding;\n    context.beginPath();\n    context.setFontSize(config.fontSize);\n    context.setFillStyle(toolTipOption.fontColor);\n    context.fillText(item.text, startX, startY + config.fontSize);\n    context.closePath();\n    context.stroke();\n  });\n}\n\nfunction drawYAxisTitle(title, opts, config, context) {\n  var startX = config.xAxisHeight + (opts.height - config.xAxisHeight - measureText(title)) / 2;\n  context.save();\n  context.beginPath();\n  context.setFontSize(config.fontSize);\n  context.setFillStyle(opts.yAxis.titleFontColor || '#333333');\n  context.translate(0, opts.height);\n  context.rotate(-90 * Math.PI / 180);\n  context.fillText(title, startX, opts.padding[3] + 0.5 * config.fontSize);\n  context.closePath();\n  context.stroke();\n  context.restore();\n}\n\nfunction drawColumnDataPoints(series, opts, config, context) {\n  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n  var xAxisData = opts.chartData.xAxisData,\n  xAxisPoints = xAxisData.xAxisPoints,\n  eachSpacing = xAxisData.eachSpacing;\n  var columnOption = assign({}, {\n    type: 'group',\n    width: eachSpacing / 2,\n    meter: {\n      border: 4,\n      fillColor: '#FFFFFF' } },\n\n  opts.extra.column);\n\n  var calPoints = [];\n  context.save();\n\n  var leftNum = -2;\n  var rightNum = xAxisPoints.length + 2;\n\n  if (opts._scrollDistance_ && opts._scrollDistance_ !== 0 && opts.enableScroll === true) {\n    context.translate(opts._scrollDistance_, 0);\n    leftNum = Math.floor(-opts._scrollDistance_ / eachSpacing) - 2;\n    rightNum = leftNum + opts.xAxis.itemCount + 4;\n  }\n  if (opts.tooltip && opts.tooltip.textList && opts.tooltip.textList.length && process === 1) {\n    drawToolTipSplitArea(opts.tooltip.offset.x, opts, config, context, eachSpacing);\n  }\n\n  series.forEach(function (eachSeries, seriesIndex) {\n    var ranges, minRange, maxRange;\n    ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);\n    minRange = ranges.pop();\n    maxRange = ranges.shift();\n\n    var data = eachSeries.data;\n    switch (columnOption.type) {\n      case 'group':\n        var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);\n        var tooltipPoints = getStackDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, seriesIndex, series, process);\n        calPoints.push(tooltipPoints);\n        points = fixColumeData(points, eachSpacing, series.length, seriesIndex, config, opts);\n        for (var i = 0; i < points.length; i++) {\n          var item = points[i];\n          if (item !== null && i > leftNum && i < rightNum) {\n            context.beginPath();\n            context.setStrokeStyle(item.color || eachSeries.color);\n            context.setLineWidth(1);\n            context.setFillStyle(item.color || eachSeries.color);\n            var startX = item.x - item.width / 2;\n            var height = opts.height - item.y - opts.area[2];\n            context.moveTo(startX, item.y);\n            context.lineTo(startX + item.width - 2, item.y);\n            context.lineTo(startX + item.width - 2, opts.height - opts.area[2]);\n            context.lineTo(startX, opts.height - opts.area[2]);\n            context.lineTo(startX, item.y);\n            context.closePath();\n            context.stroke();\n            context.fill();\n          }\n        };\n        break;\n      case 'stack':\n        // 绘制堆叠数据图\n        var points = getStackDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, seriesIndex, series, process);\n        calPoints.push(points);\n        points = fixColumeStackData(points, eachSpacing, series.length, seriesIndex, config, opts, series);\n\n        for (var _i14 = 0; _i14 < points.length; _i14++) {\n          var _item7 = points[_i14];\n          if (_item7 !== null && _i14 > leftNum && _i14 < rightNum) {\n            context.beginPath();\n            context.setFillStyle(_item7.color || eachSeries.color);\n            var startX = _item7.x - _item7.width / 2 + 1;\n            var height = opts.height - _item7.y - opts.area[2];\n            var height0 = opts.height - _item7.y0 - opts.area[2];\n            if (seriesIndex > 0) {\n              height -= height0;\n            }\n            context.moveTo(startX, _item7.y);\n            context.fillRect(startX, _item7.y, _item7.width - 2, height);\n            context.closePath();\n            context.fill();\n          }\n        };\n        break;\n      case 'meter':\n        // 绘制温度计数据图\n        var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);\n        calPoints.push(points);\n        points = fixColumeMeterData(points, eachSpacing, series.length, seriesIndex, config, opts, columnOption.meter.border);\n        if (seriesIndex == 0) {\n          for (var _i15 = 0; _i15 < points.length; _i15++) {\n            var _item8 = points[_i15];\n            if (_item8 !== null && _i15 > leftNum && _i15 < rightNum) {\n              //画背景颜色\n              context.beginPath();\n              context.setFillStyle(columnOption.meter.fillColor);\n              var startX = _item8.x - _item8.width / 2;\n              var height = opts.height - _item8.y - opts.area[2];\n              context.moveTo(startX, _item8.y);\n              context.fillRect(startX, _item8.y, _item8.width, height);\n              context.closePath();\n              context.fill();\n              //画边框线\n              if (columnOption.meter.border > 0) {\n                context.beginPath();\n                context.setStrokeStyle(eachSeries.color);\n                context.setLineWidth(columnOption.meter.border * opts.pixelRatio);\n                context.moveTo(startX + columnOption.meter.border * 0.5, _item8.y + height);\n                context.lineTo(startX + columnOption.meter.border * 0.5, _item8.y + columnOption.meter.border * 0.5);\n                context.lineTo(startX + _item8.width - columnOption.meter.border * 0.5, _item8.y + columnOption.meter.border * 0.5);\n                context.lineTo(startX + _item8.width - columnOption.meter.border * 0.5, _item8.y + height);\n                context.stroke();\n              }\n            }\n          };\n        } else {\n          for (var _i16 = 0; _i16 < points.length; _i16++) {\n            var _item9 = points[_i16];\n            if (_item9 !== null && _i16 > leftNum && _i16 < rightNum) {\n              context.beginPath();\n              context.setFillStyle(_item9.color || eachSeries.color);\n              var startX = _item9.x - _item9.width / 2;\n              var height = opts.height - _item9.y - opts.area[2];\n              context.moveTo(startX, _item9.y);\n              context.fillRect(startX, _item9.y, _item9.width, height);\n              context.closePath();\n              context.fill();\n            }\n          };\n        }\n        break;}\n\n  });\n\n  if (opts.dataLabel !== false && process === 1) {\n    series.forEach(function (eachSeries, seriesIndex) {\n      var ranges, minRange, maxRange;\n      ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);\n      minRange = ranges.pop();\n      maxRange = ranges.shift();\n      var data = eachSeries.data;\n      switch (columnOption.type) {\n        case 'group':\n          var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);\n          points = fixColumeData(points, eachSpacing, series.length, seriesIndex, config, opts);\n          drawPointText(points, eachSeries, config, context);\n          break;\n        case 'stack':\n          var points = getStackDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, seriesIndex, series, process);\n          drawPointText(points, eachSeries, config, context);\n          break;\n        case 'meter':\n          var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);\n          drawPointText(points, eachSeries, config, context);\n          break;}\n\n    });\n  }\n\n  context.restore();\n\n  return {\n    xAxisPoints: xAxisPoints,\n    calPoints: calPoints,\n    eachSpacing: eachSpacing };\n\n}\n\nfunction drawCandleDataPoints(series, seriesMA, opts, config, context) {\n  var process = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 1;\n  var candleOption = assign({}, {\n    color: {},\n    average: {} },\n  opts.extra.candle);\n  candleOption.color = assign({}, {\n    upLine: '#f04864',\n    upFill: '#f04864',\n    downLine: '#2fc25b',\n    downFill: '#2fc25b' },\n  candleOption.color);\n  candleOption.average = assign({}, {\n    show: false,\n    name: [],\n    day: [],\n    color: config.colors },\n  candleOption.average);\n  opts.extra.candle = candleOption;\n\n  var xAxisData = opts.chartData.xAxisData,\n  xAxisPoints = xAxisData.xAxisPoints,\n  eachSpacing = xAxisData.eachSpacing;\n\n  var calPoints = [];\n\n  context.save();\n\n  var leftNum = -2;\n  var rightNum = xAxisPoints.length + 2;\n  var leftSpace = 0;\n  var rightSpace = opts.width + eachSpacing;\n\n  if (opts._scrollDistance_ && opts._scrollDistance_ !== 0 && opts.enableScroll === true) {\n    context.translate(opts._scrollDistance_, 0);\n    leftNum = Math.floor(-opts._scrollDistance_ / eachSpacing) - 2;\n    rightNum = leftNum + opts.xAxis.itemCount + 4;\n    leftSpace = -opts._scrollDistance_ - eachSpacing + opts.area[3];\n    rightSpace = leftSpace + (opts.xAxis.itemCount + 4) * eachSpacing;\n  }\n\n  //画均线\n  if (candleOption.average.show) {\n    seriesMA.forEach(function (eachSeries, seriesIndex) {\n      var ranges, minRange, maxRange;\n      ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);\n      minRange = ranges.pop();\n      maxRange = ranges.shift();\n\n      var data = eachSeries.data;\n      var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);\n      var splitPointList = splitPoints(points);\n\n      for (var i = 0; i < splitPointList.length; i++) {\n        var _points = splitPointList[i];\n        context.beginPath();\n        context.setStrokeStyle(eachSeries.color);\n        context.setLineWidth(1);\n        if (_points.length === 1) {\n          context.moveTo(_points[0].x, _points[0].y);\n          context.arc(_points[0].x, _points[0].y, 1, 0, 2 * Math.PI);\n        } else {\n          context.moveTo(_points[0].x, _points[0].y);\n          var startPoint = 0;\n          for (var j = 0; j < _points.length; j++) {\n            var item = _points[j];\n            if (startPoint == 0 && item.x > leftSpace) {\n              context.moveTo(item.x, item.y);\n              startPoint = 1;\n            }\n            if (j > 0 && item.x > leftSpace && item.x < rightSpace) {\n              var ctrlPoint = createCurveControlPoints(_points, j - 1);\n              context.bezierCurveTo(ctrlPoint.ctrA.x, ctrlPoint.ctrA.y, ctrlPoint.ctrB.x, ctrlPoint.ctrB.y, item.x, item.y);\n            }\n          }\n          context.moveTo(_points[0].x, _points[0].y);\n        }\n        context.closePath();\n        context.stroke();\n      }\n    });\n  }\n  //画K线\n  series.forEach(function (eachSeries, seriesIndex) {\n    var ranges, minRange, maxRange;\n    ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);\n    minRange = ranges.pop();\n    maxRange = ranges.shift();\n    var data = eachSeries.data;\n    var points = getCandleDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);\n    calPoints.push(points);\n    var splitPointList = splitPoints(points);\n\n    for (var i = 0; i < splitPointList[0].length; i++) {\n      if (i > leftNum && i < rightNum) {\n        var item = splitPointList[0][i];\n        context.beginPath();\n        //如果上涨\n        if (data[i][1] - data[i][0] > 0) {\n          context.setStrokeStyle(candleOption.color.upLine);\n          context.setFillStyle(candleOption.color.upFill);\n          context.setLineWidth(1 * opts.pixelRatio);\n          context.moveTo(item[3].x, item[3].y); //顶点\n          context.lineTo(item[1].x, item[1].y); //收盘中间点\n          context.lineTo(item[1].x - eachSpacing / 4, item[1].y); //收盘左侧点\n          context.lineTo(item[0].x - eachSpacing / 4, item[0].y); //开盘左侧点\n          context.lineTo(item[0].x, item[0].y); //开盘中间点\n          context.lineTo(item[2].x, item[2].y); //底点\n          context.lineTo(item[0].x, item[0].y); //开盘中间点\n          context.lineTo(item[0].x + eachSpacing / 4, item[0].y); //开盘右侧点\n          context.lineTo(item[1].x + eachSpacing / 4, item[1].y); //收盘右侧点\n          context.lineTo(item[1].x, item[1].y); //收盘中间点\n          context.moveTo(item[3].x, item[3].y); //顶点\n        } else {\n          context.setStrokeStyle(candleOption.color.downLine);\n          context.setFillStyle(candleOption.color.downFill);\n          context.setLineWidth(1 * opts.pixelRatio);\n          context.moveTo(item[3].x, item[3].y); //顶点\n          context.lineTo(item[0].x, item[0].y); //开盘中间点\n          context.lineTo(item[0].x - eachSpacing / 4, item[0].y); //开盘左侧点\n          context.lineTo(item[1].x - eachSpacing / 4, item[1].y); //收盘左侧点\n          context.lineTo(item[1].x, item[1].y); //收盘中间点\n          context.lineTo(item[2].x, item[2].y); //底点\n          context.lineTo(item[1].x, item[1].y); //收盘中间点\n          context.lineTo(item[1].x + eachSpacing / 4, item[1].y); //收盘右侧点\n          context.lineTo(item[0].x + eachSpacing / 4, item[0].y); //开盘右侧点\n          context.lineTo(item[0].x, item[0].y); //开盘中间点\n          context.moveTo(item[3].x, item[3].y); //顶点\n        }\n        context.closePath();\n        context.fill();\n        context.stroke();\n      }\n    }\n  });\n\n  context.restore();\n\n  return {\n    xAxisPoints: xAxisPoints,\n    calPoints: calPoints,\n    eachSpacing: eachSpacing };\n\n}\n\nfunction drawAreaDataPoints(series, opts, config, context) {\n  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n  var areaOption = assign({}, {\n    type: 'straight',\n    opacity: 0.2,\n    addLine: false,\n    width: 2,\n    gradient: false },\n  opts.extra.area);\n\n  var xAxisData = opts.chartData.xAxisData,\n  xAxisPoints = xAxisData.xAxisPoints,\n  eachSpacing = xAxisData.eachSpacing;\n\n  var endY = opts.height - opts.area[2];\n  var calPoints = [];\n\n  context.save();\n  var leftSpace = 0;\n  var rightSpace = opts.width + eachSpacing;\n  if (opts._scrollDistance_ && opts._scrollDistance_ !== 0 && opts.enableScroll === true) {\n    context.translate(opts._scrollDistance_, 0);\n    leftSpace = -opts._scrollDistance_ - eachSpacing + opts.area[3];\n    rightSpace = leftSpace + (opts.xAxis.itemCount + 4) * eachSpacing;\n  }\n\n  series.forEach(function (eachSeries, seriesIndex) {\n    var ranges, minRange, maxRange;\n    ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);\n    minRange = ranges.pop();\n    maxRange = ranges.shift();\n    var data = eachSeries.data;\n    var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);\n    calPoints.push(points);\n\n    var splitPointList = splitPoints(points);\n    for (var i = 0; i < splitPointList.length; i++) {\n      var _points2 = splitPointList[i];\n      // 绘制区域数\n      context.beginPath();\n      context.setStrokeStyle(hexToRgb(eachSeries.color, areaOption.opacity));\n      if (areaOption.gradient) {\n        var gradient = context.createLinearGradient(0, opts.area[0], 0, opts.height - opts.area[2]);\n        gradient.addColorStop('0', hexToRgb(eachSeries.color, areaOption.opacity));\n        gradient.addColorStop('1.0', hexToRgb(\"#FFFFFF\", 0.1));\n        context.setFillStyle(gradient);\n      } else {\n        context.setFillStyle(hexToRgb(eachSeries.color, areaOption.opacity));\n      }\n      context.setLineWidth(areaOption.width * opts.pixelRatio);\n      if (_points2.length > 1) {\n        var firstPoint = _points2[0];\n        var lastPoint = _points2[_points2.length - 1];\n        context.moveTo(firstPoint.x, firstPoint.y);\n        var startPoint = 0;\n        if (areaOption.type === 'curve') {\n          for (var j = 0; j < _points2.length; j++) {\n            var item = _points2[j];\n            if (startPoint == 0 && item.x > leftSpace) {\n              context.moveTo(item.x, item.y);\n              startPoint = 1;\n            }\n            if (j > 0 && item.x > leftSpace && item.x < rightSpace) {\n              var ctrlPoint = createCurveControlPoints(_points2, j - 1);\n              context.bezierCurveTo(ctrlPoint.ctrA.x, ctrlPoint.ctrA.y, ctrlPoint.ctrB.x, ctrlPoint.ctrB.y, item.x, item.y);\n            }\n          };\n        } else {\n          for (var _j = 0; _j < _points2.length; _j++) {\n            var _item10 = _points2[_j];\n            if (startPoint == 0 && _item10.x > leftSpace) {\n              context.moveTo(_item10.x, _item10.y);\n              startPoint = 1;\n            }\n            if (_j > 0 && _item10.x > leftSpace && _item10.x < rightSpace) {\n              context.lineTo(_item10.x, _item10.y);\n            }\n          };\n        }\n\n        context.lineTo(lastPoint.x, endY);\n        context.lineTo(firstPoint.x, endY);\n        context.lineTo(firstPoint.x, firstPoint.y);\n      } else {\n        var _item11 = _points2[0];\n        context.moveTo(_item11.x - eachSpacing / 2, _item11.y);\n        context.lineTo(_item11.x + eachSpacing / 2, _item11.y);\n        context.lineTo(_item11.x + eachSpacing / 2, endY);\n        context.lineTo(_item11.x - eachSpacing / 2, endY);\n        context.moveTo(_item11.x - eachSpacing / 2, _item11.y);\n      }\n      context.closePath();\n      context.fill();\n\n      //画连线\n      if (areaOption.addLine) {\n        if (eachSeries.lineType == 'dash') {\n          var dashLength = eachSeries.dashLength ? eachSeries.dashLength : 8;\n          dashLength *= opts.pixelRatio;\n          context.setLineDash([dashLength, dashLength]);\n        }\n        context.beginPath();\n        context.setStrokeStyle(eachSeries.color);\n        context.setLineWidth(areaOption.width * opts.pixelRatio);\n        if (_points2.length === 1) {\n          context.moveTo(_points2[0].x, _points2[0].y);\n          context.arc(_points2[0].x, _points2[0].y, 1, 0, 2 * Math.PI);\n        } else {\n          context.moveTo(_points2[0].x, _points2[0].y);\n          var _startPoint = 0;\n          if (areaOption.type === 'curve') {\n            for (var _j2 = 0; _j2 < _points2.length; _j2++) {\n              var _item12 = _points2[_j2];\n              if (_startPoint == 0 && _item12.x > leftSpace) {\n                context.moveTo(_item12.x, _item12.y);\n                _startPoint = 1;\n              }\n              if (_j2 > 0 && _item12.x > leftSpace && _item12.x < rightSpace) {\n                var _ctrlPoint = createCurveControlPoints(_points2, _j2 - 1);\n                context.bezierCurveTo(_ctrlPoint.ctrA.x, _ctrlPoint.ctrA.y, _ctrlPoint.ctrB.x, _ctrlPoint.ctrB.y, _item12.x, _item12.y);\n              }\n            };\n          } else {\n            for (var _j3 = 0; _j3 < _points2.length; _j3++) {\n              var _item13 = _points2[_j3];\n              if (_startPoint == 0 && _item13.x > leftSpace) {\n                context.moveTo(_item13.x, _item13.y);\n                _startPoint = 1;\n              }\n              if (_j3 > 0 && _item13.x > leftSpace && _item13.x < rightSpace) {\n                context.lineTo(_item13.x, _item13.y);\n              }\n            };\n          }\n          context.moveTo(_points2[0].x, _points2[0].y);\n        }\n        context.stroke();\n        context.setLineDash([]);\n      }\n    }\n\n    //画点\n    if (opts.dataPointShape !== false) {\n      drawPointShape(points, eachSeries.color, eachSeries.pointShape, context, opts);\n    }\n\n  });\n\n  if (opts.dataLabel !== false && process === 1) {\n    series.forEach(function (eachSeries, seriesIndex) {\n      var ranges, minRange, maxRange;\n      ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);\n      minRange = ranges.pop();\n      maxRange = ranges.shift();\n      var data = eachSeries.data;\n      var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);\n      drawPointText(points, eachSeries, config, context);\n    });\n  }\n\n  context.restore();\n\n  return {\n    xAxisPoints: xAxisPoints,\n    calPoints: calPoints,\n    eachSpacing: eachSpacing };\n\n}\n\nfunction drawLineDataPoints(series, opts, config, context) {\n  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n  var lineOption = assign({}, {\n    type: 'straight',\n    width: 2 },\n  opts.extra.line);\n  lineOption.width *= opts.pixelRatio;\n\n  var xAxisData = opts.chartData.xAxisData,\n  xAxisPoints = xAxisData.xAxisPoints,\n  eachSpacing = xAxisData.eachSpacing;\n  var calPoints = [];\n\n  context.save();\n  var leftSpace = 0;\n  var rightSpace = opts.width + eachSpacing;\n  if (opts._scrollDistance_ && opts._scrollDistance_ !== 0 && opts.enableScroll === true) {\n    context.translate(opts._scrollDistance_, 0);\n    leftSpace = -opts._scrollDistance_ - eachSpacing + opts.area[3];\n    rightSpace = leftSpace + (opts.xAxis.itemCount + 4) * eachSpacing;\n  }\n\n  series.forEach(function (eachSeries, seriesIndex) {\n    var ranges, minRange, maxRange;\n    ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);\n    minRange = ranges.pop();\n    maxRange = ranges.shift();\n    var data = eachSeries.data;\n    var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);\n    calPoints.push(points);\n    var splitPointList = splitPoints(points);\n\n    if (eachSeries.lineType == 'dash') {\n      var dashLength = eachSeries.dashLength ? eachSeries.dashLength : 8;\n      dashLength *= opts.pixelRatio;\n      context.setLineDash([dashLength, dashLength]);\n    }\n    context.beginPath();\n    context.setStrokeStyle(eachSeries.color);\n    context.setLineWidth(lineOption.width);\n\n    splitPointList.forEach(function (points, index) {\n\n      if (points.length === 1) {\n        context.moveTo(points[0].x, points[0].y);\n        context.arc(points[0].x, points[0].y, 1, 0, 2 * Math.PI);\n      } else {\n        context.moveTo(points[0].x, points[0].y);\n        var startPoint = 0;\n        if (lineOption.type === 'curve') {\n          for (var j = 0; j < points.length; j++) {\n            var item = points[j];\n            if (startPoint == 0 && item.x > leftSpace) {\n              context.moveTo(item.x, item.y);\n              startPoint = 1;\n            }\n            if (j > 0 && item.x > leftSpace && item.x < rightSpace) {\n              var ctrlPoint = createCurveControlPoints(points, j - 1);\n              context.bezierCurveTo(ctrlPoint.ctrA.x, ctrlPoint.ctrA.y, ctrlPoint.ctrB.x, ctrlPoint.ctrB.y, item.x, item.y);\n            }\n          };\n        } else {\n          for (var _j4 = 0; _j4 < points.length; _j4++) {\n            var _item14 = points[_j4];\n            if (startPoint == 0 && _item14.x > leftSpace) {\n              context.moveTo(_item14.x, _item14.y);\n              startPoint = 1;\n            }\n            if (_j4 > 0 && _item14.x > leftSpace && _item14.x < rightSpace) {\n              context.lineTo(_item14.x, _item14.y);\n            }\n          };\n        }\n        context.moveTo(points[0].x, points[0].y);\n      }\n\n    });\n\n    context.stroke();\n    context.setLineDash([]);\n\n    if (opts.dataPointShape !== false) {\n      drawPointShape(points, eachSeries.color, eachSeries.pointShape, context, opts);\n    }\n  });\n\n  if (opts.dataLabel !== false && process === 1) {\n    series.forEach(function (eachSeries, seriesIndex) {\n      var ranges, minRange, maxRange;\n      ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);\n      minRange = ranges.pop();\n      maxRange = ranges.shift();\n      var data = eachSeries.data;\n      var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);\n      drawPointText(points, eachSeries, config, context);\n    });\n  }\n\n  context.restore();\n\n  return {\n    xAxisPoints: xAxisPoints,\n    calPoints: calPoints,\n    eachSpacing: eachSpacing };\n\n}\n\nfunction drawMixDataPoints(series, opts, config, context) {\n  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n\n  var xAxisData = opts.chartData.xAxisData,\n  xAxisPoints = xAxisData.xAxisPoints,\n  eachSpacing = xAxisData.eachSpacing;\n\n  var endY = opts.height - opts.area[2];\n  var calPoints = [];\n\n  var columnIndex = 0;\n  var columnLength = 0;\n  series.forEach(function (eachSeries, seriesIndex) {\n    if (eachSeries.type == 'column') {\n      columnLength += 1;\n    }\n  });\n  context.save();\n  var leftNum = -2;\n  var rightNum = xAxisPoints.length + 2;\n  var leftSpace = 0;\n  var rightSpace = opts.width + eachSpacing;\n  if (opts._scrollDistance_ && opts._scrollDistance_ !== 0 && opts.enableScroll === true) {\n    context.translate(opts._scrollDistance_, 0);\n    leftNum = Math.floor(-opts._scrollDistance_ / eachSpacing) - 2;\n    rightNum = leftNum + opts.xAxis.itemCount + 4;\n    leftSpace = -opts._scrollDistance_ - eachSpacing + opts.area[3];\n    rightSpace = leftSpace + (opts.xAxis.itemCount + 4) * eachSpacing;\n  }\n\n  series.forEach(function (eachSeries, seriesIndex) {\n    var ranges, minRange, maxRange;\n\n    ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);\n    minRange = ranges.pop();\n    maxRange = ranges.shift();\n\n    var data = eachSeries.data;\n    var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);\n    calPoints.push(points);\n\n    // 绘制柱状数据图\n    if (eachSeries.type == 'column') {\n      points = fixColumeData(points, eachSpacing, columnLength, columnIndex, config, opts);\n      for (var i = 0; i < points.length; i++) {\n        var item = points[i];\n        if (item !== null && i > leftNum && i < rightNum) {\n          context.beginPath();\n          context.setStrokeStyle(item.color || eachSeries.color);\n          context.setLineWidth(1);\n          context.setFillStyle(item.color || eachSeries.color);\n          var startX = item.x - item.width / 2;\n          var height = opts.height - item.y - opts.area[2];\n          context.moveTo(startX, item.y);\n          context.moveTo(startX, item.y);\n          context.lineTo(startX + item.width - 2, item.y);\n          context.lineTo(startX + item.width - 2, opts.height - opts.area[2]);\n          context.lineTo(startX, opts.height - opts.area[2]);\n          context.lineTo(startX, item.y);\n          context.closePath();\n          context.stroke();\n          context.fill();\n          context.closePath();\n          context.fill();\n        }\n      }\n      columnIndex += 1;\n    }\n\n    //绘制区域图数据\n\n    if (eachSeries.type == 'area') {\n      var _splitPointList = splitPoints(points);\n      for (var _i17 = 0; _i17 < _splitPointList.length; _i17++) {\n        var _points3 = _splitPointList[_i17];\n        // 绘制区域数据\n        context.beginPath();\n        context.setStrokeStyle(eachSeries.color);\n        context.setFillStyle(hexToRgb(eachSeries.color, 0.2));\n        context.setLineWidth(2 * opts.pixelRatio);\n        if (_points3.length > 1) {\n          var firstPoint = _points3[0];\n          var lastPoint = _points3[_points3.length - 1];\n          context.moveTo(firstPoint.x, firstPoint.y);\n          var startPoint = 0;\n          if (eachSeries.style === 'curve') {\n            for (var j = 0; j < _points3.length; j++) {\n              var _item15 = _points3[j];\n              if (startPoint == 0 && _item15.x > leftSpace) {\n                context.moveTo(_item15.x, _item15.y);\n                startPoint = 1;\n              }\n              if (j > 0 && _item15.x > leftSpace && _item15.x < rightSpace) {\n                var ctrlPoint = createCurveControlPoints(_points3, j - 1);\n                context.bezierCurveTo(ctrlPoint.ctrA.x, ctrlPoint.ctrA.y, ctrlPoint.ctrB.x, ctrlPoint.ctrB.y, _item15.x, _item15.y);\n              }\n            };\n          } else {\n            for (var _j5 = 0; _j5 < _points3.length; _j5++) {\n              var _item16 = _points3[_j5];\n              if (startPoint == 0 && _item16.x > leftSpace) {\n                context.moveTo(_item16.x, _item16.y);\n                startPoint = 1;\n              }\n              if (_j5 > 0 && _item16.x > leftSpace && _item16.x < rightSpace) {\n                context.lineTo(_item16.x, _item16.y);\n              }\n            };\n          }\n          context.lineTo(lastPoint.x, endY);\n          context.lineTo(firstPoint.x, endY);\n          context.lineTo(firstPoint.x, firstPoint.y);\n        } else {\n          var _item17 = _points3[0];\n          context.moveTo(_item17.x - eachSpacing / 2, _item17.y);\n          context.lineTo(_item17.x + eachSpacing / 2, _item17.y);\n          context.lineTo(_item17.x + eachSpacing / 2, endY);\n          context.lineTo(_item17.x - eachSpacing / 2, endY);\n          context.moveTo(_item17.x - eachSpacing / 2, _item17.y);\n        }\n        context.closePath();\n        context.fill();\n      }\n    }\n\n    // 绘制折线数据图\n    if (eachSeries.type == 'line') {\n      var splitPointList = splitPoints(points);\n      splitPointList.forEach(function (points, index) {\n        if (eachSeries.lineType == 'dash') {\n          var dashLength = eachSeries.dashLength ? eachSeries.dashLength : 8;\n          dashLength *= opts.pixelRatio;\n          context.setLineDash([dashLength, dashLength]);\n        }\n        context.beginPath();\n        context.setStrokeStyle(eachSeries.color);\n        context.setLineWidth(2 * opts.pixelRatio);\n        if (points.length === 1) {\n          context.moveTo(points[0].x, points[0].y);\n          context.arc(points[0].x, points[0].y, 1, 0, 2 * Math.PI);\n        } else {\n          context.moveTo(points[0].x, points[0].y);\n          var _startPoint2 = 0;\n          if (eachSeries.style == 'curve') {\n            for (var _j6 = 0; _j6 < points.length; _j6++) {\n              var _item18 = points[_j6];\n              if (_startPoint2 == 0 && _item18.x > leftSpace) {\n                context.moveTo(_item18.x, _item18.y);\n                _startPoint2 = 1;\n              }\n              if (_j6 > 0 && _item18.x > leftSpace && _item18.x < rightSpace) {\n                var ctrlPoint = createCurveControlPoints(points, _j6 - 1);\n                context.bezierCurveTo(ctrlPoint.ctrA.x, ctrlPoint.ctrA.y, ctrlPoint.ctrB.x, ctrlPoint.ctrB.y, _item18.x, _item18.y);\n              }\n            }\n          } else {\n            for (var _j7 = 0; _j7 < points.length; _j7++) {\n              var _item19 = points[_j7];\n              if (_startPoint2 == 0 && _item19.x > leftSpace) {\n                context.moveTo(_item19.x, _item19.y);\n                _startPoint2 = 1;\n              }\n              if (_j7 > 0 && _item19.x > leftSpace && _item19.x < rightSpace) {\n                context.lineTo(_item19.x, _item19.y);\n              }\n            }\n          }\n          context.moveTo(points[0].x, points[0].y);\n        }\n        context.stroke();\n        context.setLineDash([]);\n      });\n    }\n\n    // 绘制点数据图\n    if (eachSeries.type == 'point') {\n      eachSeries.addPoint = true;\n    }\n\n    if (eachSeries.addPoint == true && eachSeries.type !== 'column') {\n      drawPointShape(points, eachSeries.color, eachSeries.pointShape, context, opts);\n    }\n  });\n  if (opts.dataLabel !== false && process === 1) {\n    var columnIndex = 0;\n    series.forEach(function (eachSeries, seriesIndex) {\n      var ranges, minRange, maxRange;\n\n      ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);\n      minRange = ranges.pop();\n      maxRange = ranges.shift();\n\n      var data = eachSeries.data;\n      var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);\n      if (eachSeries.type !== 'column') {\n        drawPointText(points, eachSeries, config, context);\n      } else {\n        points = fixColumeData(points, eachSpacing, columnLength, columnIndex, config, opts);\n        drawPointText(points, eachSeries, config, context);\n        columnIndex += 1;\n      }\n\n    });\n  }\n\n  context.restore();\n\n  return {\n    xAxisPoints: xAxisPoints,\n    calPoints: calPoints,\n    eachSpacing: eachSpacing };\n\n}\n\nfunction drawToolTipBridge(opts, config, context, process, eachSpacing, xAxisPoints) {\n  var toolTipOption = opts.extra.tooltip || {};\n  if (toolTipOption.horizentalLine && opts.tooltip && process === 1 && (opts.type == 'line' || opts.type == 'area' || opts.type == 'column' || opts.type == 'candle' || opts.type == 'mix')) {\n    drawToolTipHorizentalLine(opts, config, context, eachSpacing, xAxisPoints);\n  }\n  context.save();\n  if (opts._scrollDistance_ && opts._scrollDistance_ !== 0 && opts.enableScroll === true) {\n    context.translate(opts._scrollDistance_, 0);\n  }\n  if (opts.tooltip && opts.tooltip.textList && opts.tooltip.textList.length && process === 1) {\n    drawToolTip(opts.tooltip.textList, opts.tooltip.offset, opts, config, context, eachSpacing, xAxisPoints);\n  }\n  context.restore();\n\n}\n\nfunction drawXAxis(categories, opts, config, context) {\n\n  var xAxisData = opts.chartData.xAxisData,\n  xAxisPoints = xAxisData.xAxisPoints,\n  startX = xAxisData.startX,\n  endX = xAxisData.endX,\n  eachSpacing = xAxisData.eachSpacing;\n  var boundaryGap = 'center';\n  if (opts.type == 'line' || opts.type == 'area') {\n    boundaryGap = opts.xAxis.boundaryGap;\n  }\n  var startY = opts.height - opts.area[2];\n  var endY = opts.area[0];\n\n  //绘制滚动条\n  if (opts.enableScroll && opts.xAxis.scrollShow) {\n    var scrollY = opts.height - opts.area[2] + config.xAxisHeight;\n    var scrollScreenWidth = endX - startX;\n    var scrollTotalWidth = eachSpacing * (xAxisPoints.length - 1);\n    var scrollWidth = scrollScreenWidth * scrollScreenWidth / scrollTotalWidth;\n    var scrollLeft = 0;\n    if (opts._scrollDistance_) {\n      scrollLeft = -opts._scrollDistance_ * scrollScreenWidth / scrollTotalWidth;\n    }\n    context.beginPath();\n    context.setLineCap('round');\n    context.setLineWidth(6 * opts.pixelRatio);\n    context.setStrokeStyle(opts.xAxis.scrollBackgroundColor || \"#EFEBEF\");\n    context.moveTo(startX, scrollY);\n    context.lineTo(endX, scrollY);\n    context.stroke();\n    context.closePath();\n    context.beginPath();\n    context.setLineCap('round');\n    context.setLineWidth(6 * opts.pixelRatio);\n    context.setStrokeStyle(opts.xAxis.scrollColor || \"#A6A6A6\");\n    context.moveTo(startX + scrollLeft, scrollY);\n    context.lineTo(startX + scrollLeft + scrollWidth, scrollY);\n    context.stroke();\n    context.closePath();\n    context.setLineCap('butt');\n  }\n\n  context.save();\n\n  if (opts._scrollDistance_ && opts._scrollDistance_ !== 0) {\n    context.translate(opts._scrollDistance_, 0);\n  }\n\n  //绘制X轴刻度线\n  if (opts.xAxis.calibration === true) {\n    context.setStrokeStyle(opts.xAxis.gridColor || \"#cccccc\");\n    context.setLineCap('butt');\n    context.setLineWidth(1 * opts.pixelRatio);\n    xAxisPoints.forEach(function (item, index) {\n      if (index > 0) {\n        context.beginPath();\n        context.moveTo(item - eachSpacing / 2, startY);\n        context.lineTo(item - eachSpacing / 2, startY + 3 * opts.pixelRatio);\n        context.closePath();\n        context.stroke();\n      }\n    });\n  }\n  //绘制X轴网格\n  if (opts.xAxis.disableGrid !== true) {\n    context.setStrokeStyle(opts.xAxis.gridColor || \"#cccccc\");\n    context.setLineCap('butt');\n    context.setLineWidth(1 * opts.pixelRatio);\n    if (opts.xAxis.gridType == 'dash') {\n      context.setLineDash([opts.xAxis.dashLength, opts.xAxis.dashLength]);\n    }\n    opts.xAxis.gridEval = opts.xAxis.gridEval || 1;\n    xAxisPoints.forEach(function (item, index) {\n      if (index % opts.xAxis.gridEval == 0) {\n        context.beginPath();\n        context.moveTo(item, startY);\n        context.lineTo(item, endY);\n        context.stroke();\n      }\n    });\n    context.setLineDash([]);\n  }\n\n\n  //绘制X轴文案\n  if (opts.xAxis.disabled !== true) {\n    // 对X轴列表做抽稀处理\n    //默认全部显示X轴标签\n    var maxXAxisListLength = categories.length;\n    //如果设置了X轴单屏数量\n    if (opts.xAxis.labelCount) {\n      //如果设置X轴密度\n      if (opts.xAxis.itemCount) {\n        maxXAxisListLength = Math.ceil(categories.length / opts.xAxis.itemCount * opts.xAxis.labelCount);\n      } else {\n        maxXAxisListLength = opts.xAxis.labelCount;\n      }\n      maxXAxisListLength -= 1;\n    }\n\n    var ratio = Math.ceil(categories.length / maxXAxisListLength);\n\n    var newCategories = [];\n    var cgLength = categories.length;\n    for (var i = 0; i < cgLength; i++) {\n      if (i % ratio !== 0) {\n        newCategories.push(\"\");\n      } else {\n        newCategories.push(categories[i]);\n      }\n    }\n    newCategories[cgLength - 1] = categories[cgLength - 1];\n\n    var xAxisFontSize = opts.xAxis.fontSize || config.fontSize;\n    if (config._xAxisTextAngle_ === 0) {\n      newCategories.forEach(function (item, index) {\n        var offset = -measureText(String(item), xAxisFontSize) / 2;\n        if (boundaryGap == 'center') {\n          offset += eachSpacing / 2;\n        }\n        var scrollHeight = 0;\n        if (opts.xAxis.scrollShow) {\n          scrollHeight = 6 * opts.pixelRatio;\n        }\n        context.beginPath();\n        context.setFontSize(xAxisFontSize);\n        context.setFillStyle(opts.xAxis.fontColor || '#666666');\n        context.fillText(String(item), xAxisPoints[index] + offset, startY + xAxisFontSize + (config.xAxisHeight - scrollHeight - xAxisFontSize) / 2);\n        context.closePath();\n        context.stroke();\n      });\n\n    } else {\n      newCategories.forEach(function (item, index) {\n        context.save();\n        context.beginPath();\n        context.setFontSize(xAxisFontSize);\n        context.setFillStyle(opts.xAxis.fontColor || '#666666');\n        var textWidth = measureText(String(item), xAxisFontSize);\n        var offset = -textWidth;\n        if (boundaryGap == 'center') {\n          offset += eachSpacing / 2;\n        }\n        var _calRotateTranslate = calRotateTranslate(xAxisPoints[index] + eachSpacing / 2, startY + xAxisFontSize / 2 + 5, opts.height),\n        transX = _calRotateTranslate.transX,\n        transY = _calRotateTranslate.transY;\n\n        context.rotate(-1 * config._xAxisTextAngle_);\n        context.translate(transX, transY);\n        context.fillText(String(item), xAxisPoints[index] + offset, startY + xAxisFontSize + 5);\n        context.closePath();\n        context.stroke();\n        context.restore();\n      });\n    }\n  }\n  context.restore();\n\n  //绘制X轴轴线\n  if (opts.xAxis.axisLine) {\n    context.beginPath();\n    context.setStrokeStyle(opts.xAxis.axisLineColor);\n    context.setLineWidth(1 * opts.pixelRatio);\n    context.moveTo(startX, opts.height - opts.area[2]);\n    context.lineTo(endX, opts.height - opts.area[2]);\n    context.stroke();\n  }\n}\n\nfunction drawYAxisGrid(categories, opts, config, context) {\n  if (opts.yAxis.disableGrid === true) {\n    return;\n  }\n  var spacingValid = opts.height - opts.area[0] - opts.area[2];\n  var eachSpacing = spacingValid / opts.yAxis.splitNumber;\n  var startX = opts.area[3];\n  var xAxisPoints = opts.chartData.xAxisData.xAxisPoints,\n  xAxiseachSpacing = opts.chartData.xAxisData.eachSpacing;\n  var TotalWidth = xAxiseachSpacing * (xAxisPoints.length - 1);\n  var endX = startX + TotalWidth;\n\n  var points = [];\n  for (var i = 0; i < opts.yAxis.splitNumber + 1; i++) {\n    points.push(opts.height - opts.area[2] - eachSpacing * i);\n  }\n\n  context.save();\n  if (opts._scrollDistance_ && opts._scrollDistance_ !== 0) {\n    context.translate(opts._scrollDistance_, 0);\n  }\n\n  if (opts.yAxis.gridType == 'dash') {\n    context.setLineDash([opts.yAxis.dashLength, opts.yAxis.dashLength]);\n  }\n  context.setStrokeStyle(opts.yAxis.gridColor);\n  context.setLineWidth(1 * opts.pixelRatio);\n  points.forEach(function (item, index) {\n    context.beginPath();\n    context.moveTo(startX, item);\n    context.lineTo(endX, item);\n    context.stroke();\n  });\n  context.setLineDash([]);\n\n  context.restore();\n}\n\nfunction drawYAxis(series, opts, config, context) {\n  if (opts.yAxis.disabled === true) {\n    return;\n  }\n  var spacingValid = opts.height - opts.area[0] - opts.area[2];\n  var eachSpacing = spacingValid / opts.yAxis.splitNumber;\n  var startX = opts.area[3];\n  var endX = opts.width - opts.area[1];\n  var endY = opts.height - opts.area[2];\n  var fillEndY = endY + config.xAxisHeight;\n  if (opts.xAxis.scrollShow) {\n    fillEndY -= 3 * opts.pixelRatio;\n  }\n  if (opts.xAxis.rotateLabel) {\n    fillEndY = opts.height - opts.area[2] + 3;\n  }\n  // set YAxis background\n  context.beginPath();\n  context.setFillStyle(opts.background || '#ffffff');\n  if (opts._scrollDistance_ < 0) {\n    context.fillRect(0, 0, startX, fillEndY);\n  }\n  if (opts.enableScroll == true) {\n    context.fillRect(endX, 0, opts.width, fillEndY);\n  }\n  context.closePath();\n  context.stroke();\n\n  var points = [];\n  for (var i = 0; i <= opts.yAxis.splitNumber; i++) {\n    points.push(opts.area[0] + eachSpacing * i);\n  }\n\n  var tStartLeft = opts.area[3];\n  var tStartRight = opts.width - opts.area[1];var _loop4 = function _loop4(\n\n  _i18) {\n    var yData = opts.yAxis.data[_i18];\n    if (yData.disabled !== true) {\n      var rangesFormat = opts.chartData.yAxisData.rangesFormat[_i18];\n      var yAxisFontSize = yData.fontSize || config.fontSize;\n      var yAxisWidth = opts.chartData.yAxisData.yAxisWidth[_i18];\n      //画Y轴刻度及文案\n      rangesFormat.forEach(function (item, index) {\n        var pos = points[index] ? points[index] : endY;\n        context.beginPath();\n        context.setFontSize(yAxisFontSize);\n        context.setLineWidth(1 * opts.pixelRatio);\n        context.setStrokeStyle(yData.axisLineColor || '#cccccc');\n        context.setFillStyle(yData.fontColor || '#666666');\n        if (yAxisWidth.position == 'left') {\n          context.fillText(String(item), tStartLeft - yAxisWidth.width, pos + yAxisFontSize / 2);\n          //画刻度线\n          if (yData.calibration == true) {\n            context.moveTo(tStartLeft, pos);\n            context.lineTo(tStartLeft - 3 * opts.pixelRatio, pos);\n          }\n        } else {\n          context.fillText(String(item), tStartRight + 4 * opts.pixelRatio, pos + yAxisFontSize / 2);\n          //画刻度线\n          if (yData.calibration == true) {\n            context.moveTo(tStartRight, pos);\n            context.lineTo(tStartRight + 3 * opts.pixelRatio, pos);\n          }\n        }\n        context.closePath();\n        context.stroke();\n      });\n      //画Y轴轴线\n      if (yData.axisLine !== false) {\n        context.beginPath();\n        context.setStrokeStyle(yData.axisLineColor || '#cccccc');\n        context.setLineWidth(1 * opts.pixelRatio);\n        if (yAxisWidth.position == 'left') {\n          context.moveTo(tStartLeft, opts.height - opts.area[2]);\n          context.lineTo(tStartLeft, opts.area[0]);\n        } else {\n          context.moveTo(tStartRight, opts.height - opts.area[2]);\n          context.lineTo(tStartRight, opts.area[0]);\n        }\n        context.stroke();\n      }\n\n      //画Y轴标题\n      if (opts.yAxis.showTitle) {\n\n        var titleFontSize = yData.titleFontSize || config.fontSize;\n        var title = yData.title;\n        context.beginPath();\n        context.setFontSize(titleFontSize);\n        context.setFillStyle(yData.titleFontColor || '#666666');\n        if (yAxisWidth.position == 'left') {\n          context.fillText(title, tStartLeft - measureText(title, titleFontSize) / 2, opts.area[0] - 10 * opts.pixelRatio);\n        } else {\n          context.fillText(title, tStartRight - measureText(title, titleFontSize) / 2, opts.area[0] - 10 * opts.pixelRatio);\n        }\n        context.closePath();\n        context.stroke();\n      }\n      if (yAxisWidth.position == 'left') {\n        tStartLeft -= yAxisWidth.width + opts.yAxis.padding;\n      } else {\n        tStartRight += yAxisWidth.width + opts.yAxis.padding;\n      }\n    }};for (var _i18 = 0; _i18 < opts.yAxis.data.length; _i18++) {_loop4(_i18);\n  }\n}\n\nfunction drawLegend(series, opts, config, context, chartData) {\n  if (opts.legend.show === false) {\n    return;\n  }\n  var legendData = chartData.legendData;\n  var legendList = legendData.points;\n  var legendArea = legendData.area;\n  var padding = opts.legend.padding;\n  var fontSize = opts.legend.fontSize;\n  var shapeWidth = 15 * opts.pixelRatio;\n  var shapeRight = 5 * opts.pixelRatio;\n  var itemGap = opts.legend.itemGap;\n  var lineHeight = Math.max(opts.legend.lineHeight * opts.pixelRatio, fontSize);\n\n  //画背景及边框\n  context.beginPath();\n  context.setLineWidth(opts.legend.borderWidth);\n  context.setStrokeStyle(opts.legend.borderColor);\n  context.setFillStyle(opts.legend.backgroundColor);\n  context.moveTo(legendArea.start.x, legendArea.start.y);\n  context.rect(legendArea.start.x, legendArea.start.y, legendArea.width, legendArea.height);\n  context.closePath();\n  context.fill();\n  context.stroke();\n\n  legendList.forEach(function (itemList, listIndex) {\n    var width = 0;\n    var height = 0;\n    width = legendData.widthArr[listIndex];\n    height = legendData.heightArr[listIndex];\n    var startX = 0;\n    var startY = 0;\n    if (opts.legend.position == 'top' || opts.legend.position == 'bottom') {\n      startX = legendArea.start.x + (legendArea.width - width) / 2;\n      startY = legendArea.start.y + padding + listIndex * lineHeight;\n    } else {\n      if (listIndex == 0) {\n        width = 0;\n      } else {\n        width = legendData.widthArr[listIndex - 1];\n      }\n      startX = legendArea.start.x + padding + width;\n      startY = legendArea.start.y + padding + (legendArea.height - height) / 2;\n    }\n\n    context.setFontSize(config.fontSize);\n    for (var i = 0; i < itemList.length; i++) {\n      var item = itemList[i];\n      item.area = [0, 0, 0, 0];\n      item.area[0] = startX;\n      item.area[1] = startY;\n      item.area[3] = startY + lineHeight;\n      context.beginPath();\n      context.setLineWidth(1 * opts.pixelRatio);\n      context.setStrokeStyle(item.show ? item.color : opts.legend.hiddenColor);\n      context.setFillStyle(item.show ? item.color : opts.legend.hiddenColor);\n      switch (item.legendShape) {\n        case 'line':\n          context.moveTo(startX, startY + 0.5 * lineHeight - 2 * opts.pixelRatio);\n          context.fillRect(startX, startY + 0.5 * lineHeight - 2 * opts.pixelRatio, 15 * opts.pixelRatio, 4 * opts.pixelRatio);\n          break;\n        case 'triangle':\n          context.moveTo(startX + 7.5 * opts.pixelRatio, startY + 0.5 * lineHeight - 5 * opts.pixelRatio);\n          context.lineTo(startX + 2.5 * opts.pixelRatio, startY + 0.5 * lineHeight + 5 * opts.pixelRatio);\n          context.lineTo(startX + 12.5 * opts.pixelRatio, startY + 0.5 * lineHeight + 5 * opts.pixelRatio);\n          context.lineTo(startX + 7.5 * opts.pixelRatio, startY + 0.5 * lineHeight - 5 * opts.pixelRatio);\n          break;\n        case 'diamond':\n          context.moveTo(startX + 7.5 * opts.pixelRatio, startY + 0.5 * lineHeight - 5 * opts.pixelRatio);\n          context.lineTo(startX + 2.5 * opts.pixelRatio, startY + 0.5 * lineHeight);\n          context.lineTo(startX + 7.5 * opts.pixelRatio, startY + 0.5 * lineHeight + 5 * opts.pixelRatio);\n          context.lineTo(startX + 12.5 * opts.pixelRatio, startY + 0.5 * lineHeight);\n          context.lineTo(startX + 7.5 * opts.pixelRatio, startY + 0.5 * lineHeight - 5 * opts.pixelRatio);\n          break;\n        case 'circle':\n          context.moveTo(startX + 7.5 * opts.pixelRatio, startY + 0.5 * lineHeight);\n          context.arc(startX + 7.5 * opts.pixelRatio, startY + 0.5 * lineHeight, 5 * opts.pixelRatio, 0, 2 * Math.PI);\n          break;\n        case 'rect':\n          context.moveTo(startX, startY + 0.5 * lineHeight - 5 * opts.pixelRatio);\n          context.fillRect(startX, startY + 0.5 * lineHeight - 5 * opts.pixelRatio, 15 * opts.pixelRatio, 10 * opts.pixelRatio);\n          break;\n        default:\n          context.moveTo(startX, startY + 0.5 * lineHeight - 5 * opts.pixelRatio);\n          context.fillRect(startX, startY + 0.5 * lineHeight - 5 * opts.pixelRatio, 15 * opts.pixelRatio, 10 * opts.pixelRatio);}\n\n      context.closePath();\n      context.fill();\n      context.stroke();\n\n      startX += shapeWidth + shapeRight;\n      var fontTrans = 0.5 * lineHeight + 0.5 * fontSize - 2;\n      context.beginPath();\n      context.setFontSize(fontSize);\n      context.setFillStyle(item.show ? opts.legend.fontColor : opts.legend.hiddenColor);\n      context.fillText(item.name, startX, startY + fontTrans);\n      context.closePath();\n      context.stroke();\n      if (opts.legend.position == 'top' || opts.legend.position == 'bottom') {\n        startX += measureText(item.name, fontSize) + itemGap;\n        item.area[2] = startX;\n      } else {\n        item.area[2] = startX + measureText(item.name, fontSize) + itemGap;;\n        startX -= shapeWidth + shapeRight;\n        startY += lineHeight;\n      }\n    }\n  });\n}\n\nfunction drawPieDataPoints(series, opts, config, context) {\n  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n  var pieOption = assign({}, {\n    activeOpacity: 0.5,\n    activeRadius: 10 * opts.pixelRatio,\n    offsetAngle: 0,\n    labelWidth: 15 * opts.pixelRatio,\n    ringWidth: 0,\n    border: false,\n    borderWidth: 2,\n    borderColor: '#FFFFFF' },\n  opts.extra.pie);\n  var centerPosition = {\n    x: opts.area[3] + (opts.width - opts.area[1] - opts.area[3]) / 2,\n    y: opts.area[0] + (opts.height - opts.area[0] - opts.area[2]) / 2 };\n\n  if (config.pieChartLinePadding == 0) {\n    config.pieChartLinePadding = pieOption.activeRadius;\n  }\n\n  var radius = Math.min((opts.width - opts.area[1] - opts.area[3]) / 2 - config.pieChartLinePadding - config.pieChartTextPadding - config._pieTextMaxLength_, (opts.height - opts.area[0] - opts.area[2]) / 2 - config.pieChartLinePadding - config.pieChartTextPadding);\n\n  series = getPieDataPoints(series, radius, process);\n\n  var activeRadius = pieOption.activeRadius;\n\n  series = series.map(function (eachSeries) {\n    eachSeries._start_ += pieOption.offsetAngle * Math.PI / 180;\n    return eachSeries;\n  });\n  series.forEach(function (eachSeries, seriesIndex) {\n    if (opts.tooltip) {\n      if (opts.tooltip.index == seriesIndex) {\n        context.beginPath();\n        context.setFillStyle(hexToRgb(eachSeries.color, opts.extra.pie.activeOpacity || 0.5));\n        context.moveTo(centerPosition.x, centerPosition.y);\n        context.arc(centerPosition.x, centerPosition.y, eachSeries._radius_ + activeRadius, eachSeries._start_,\n        eachSeries._start_ + 2 *\n        eachSeries._proportion_ * Math.PI);\n        context.closePath();\n        context.fill();\n      }\n    }\n    context.beginPath();\n    context.setLineWidth(pieOption.borderWidth * opts.pixelRatio);\n    context.lineJoin = \"round\";\n    context.setStrokeStyle(pieOption.borderColor);\n    context.setFillStyle(eachSeries.color);\n    context.moveTo(centerPosition.x, centerPosition.y);\n    context.arc(centerPosition.x, centerPosition.y, eachSeries._radius_, eachSeries._start_, eachSeries._start_ + 2 * eachSeries._proportion_ * Math.PI);\n    context.closePath();\n    context.fill();\n    if (pieOption.border == true) {\n      context.stroke();\n    }\n  });\n\n  if (opts.type === 'ring') {\n    var innerPieWidth = radius * 0.6;\n    if (typeof opts.extra.pie.ringWidth === 'number' && opts.extra.pie.ringWidth > 0) {\n      innerPieWidth = Math.max(0, radius - opts.extra.pie.ringWidth);\n    }\n    context.beginPath();\n    context.setFillStyle(opts.background || '#ffffff');\n    context.moveTo(centerPosition.x, centerPosition.y);\n    context.arc(centerPosition.x, centerPosition.y, innerPieWidth, 0, 2 * Math.PI);\n    context.closePath();\n    context.fill();\n  }\n\n  if (opts.dataLabel !== false && process === 1) {\n    var valid = false;\n    for (var i = 0, len = series.length; i < len; i++) {\n      if (series[i].data > 0) {\n        valid = true;\n        break;\n      }\n    }\n\n    if (valid) {\n      drawPieText(series, opts, config, context, radius, centerPosition);\n    }\n  }\n\n  if (process === 1 && opts.type === 'ring') {\n    drawRingTitle(opts, config, context, centerPosition);\n  }\n\n  return {\n    center: centerPosition,\n    radius: radius,\n    series: series };\n\n}\n\nfunction drawRoseDataPoints(series, opts, config, context) {\n  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n  var roseOption = assign({}, {\n    type: 'area',\n    activeOpacity: 0.5,\n    activeRadius: 10 * opts.pixelRatio,\n    offsetAngle: 0,\n    labelWidth: 15 * opts.pixelRatio,\n    border: false,\n    borderWidth: 2,\n    borderColor: '#FFFFFF' },\n  opts.extra.rose);\n  if (config.pieChartLinePadding == 0) {\n    config.pieChartLinePadding = roseOption.activeRadius;\n  }\n  var centerPosition = {\n    x: opts.area[3] + (opts.width - opts.area[1] - opts.area[3]) / 2,\n    y: opts.area[0] + (opts.height - opts.area[0] - opts.area[2]) / 2 };\n\n  var radius = Math.min((opts.width - opts.area[1] - opts.area[3]) / 2 - config.pieChartLinePadding - config.pieChartTextPadding - config._pieTextMaxLength_, (opts.height - opts.area[0] - opts.area[2]) / 2 - config.pieChartLinePadding - config.pieChartTextPadding);\n  var minRadius = roseOption.minRadius || radius * 0.5;\n\n  series = getRoseDataPoints(series, roseOption.type, minRadius, radius, process);\n\n  var activeRadius = roseOption.activeRadius;\n\n  series = series.map(function (eachSeries) {\n    eachSeries._start_ += (roseOption.offsetAngle || 0) * Math.PI / 180;\n    return eachSeries;\n  });\n\n  series.forEach(function (eachSeries, seriesIndex) {\n    if (opts.tooltip) {\n      if (opts.tooltip.index == seriesIndex) {\n        context.beginPath();\n        context.setFillStyle(hexToRgb(eachSeries.color, roseOption.activeOpacity || 0.5));\n        context.moveTo(centerPosition.x, centerPosition.y);\n        context.arc(centerPosition.x, centerPosition.y, activeRadius + eachSeries._radius_, eachSeries._start_,\n        eachSeries._start_ + 2 * eachSeries._rose_proportion_ * Math.PI);\n        context.closePath();\n        context.fill();\n      }\n    }\n    context.beginPath();\n    context.setLineWidth(roseOption.borderWidth * opts.pixelRatio);\n    context.lineJoin = \"round\";\n    context.setStrokeStyle(roseOption.borderColor);\n    context.setFillStyle(eachSeries.color);\n    context.moveTo(centerPosition.x, centerPosition.y);\n    context.arc(centerPosition.x, centerPosition.y, eachSeries._radius_, eachSeries._start_, eachSeries._start_ + 2 *\n    eachSeries._rose_proportion_ * Math.PI);\n    context.closePath();\n    context.fill();\n    if (roseOption.border == true) {\n      context.stroke();\n    }\n  });\n\n  if (opts.dataLabel !== false && process === 1) {\n    var valid = false;\n    for (var i = 0, len = series.length; i < len; i++) {\n      if (series[i].data > 0) {\n        valid = true;\n        break;\n      }\n    }\n\n    if (valid) {\n      drawPieText(series, opts, config, context, radius, centerPosition);\n    }\n  }\n\n  return {\n    center: centerPosition,\n    radius: radius,\n    series: series };\n\n}\n\nfunction drawArcbarDataPoints(series, opts, config, context) {\n  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n  var arcbarOption = assign({}, {\n    startAngle: 0.75,\n    endAngle: 0.25,\n    type: 'default',\n    width: 12 * opts.pixelRatio,\n    gap: 2 * opts.pixelRatio },\n  opts.extra.arcbar);\n\n  series = getArcbarDataPoints(series, arcbarOption, process);\n\n  var centerPosition;\n  if (arcbarOption.center) {\n    centerPosition = arcbarOption.center;\n  } else {\n    centerPosition = {\n      x: opts.width / 2,\n      y: opts.height / 2 };\n\n  }\n\n  var radius;\n  if (arcbarOption.radius) {\n    radius = arcbarOption.radius;\n  } else {\n    radius = Math.min(centerPosition.x, centerPosition.y);\n    radius -= 5 * opts.pixelRatio;\n    radius -= arcbarOption.width / 2;\n  }\n\n  for (var i = 0; i < series.length; i++) {\n    var eachSeries = series[i];\n    //背景颜色\n    context.setLineWidth(arcbarOption.width);\n    context.setStrokeStyle(arcbarOption.backgroundColor || '#E9E9E9');\n    context.setLineCap('round');\n    context.beginPath();\n    if (arcbarOption.type == 'default') {\n      context.arc(centerPosition.x, centerPosition.y, radius - (arcbarOption.width + arcbarOption.gap) * i, arcbarOption.startAngle * Math.PI, arcbarOption.endAngle * Math.PI, false);\n    } else {\n      context.arc(centerPosition.x, centerPosition.y, radius - (arcbarOption.width + arcbarOption.gap) * i, 0, 2 * Math.PI, false);\n    }\n    context.stroke();\n    //进度条\n    context.setLineWidth(arcbarOption.width);\n    context.setStrokeStyle(eachSeries.color);\n    context.setLineCap('round');\n    context.beginPath();\n    context.arc(centerPosition.x, centerPosition.y, radius - (arcbarOption.width + arcbarOption.gap) * i, arcbarOption.startAngle * Math.PI, eachSeries._proportion_ * Math.PI, false);\n    context.stroke();\n  }\n\n  drawRingTitle(opts, config, context, centerPosition);\n\n  return {\n    center: centerPosition,\n    radius: radius,\n    series: series };\n\n}\n\nfunction drawGaugeDataPoints(categories, series, opts, config, context) {\n  var process = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 1;\n  var gaugeOption = assign({}, {\n    type: 'default',\n    startAngle: 0.75,\n    endAngle: 0.25,\n    width: 15,\n    splitLine: {\n      fixRadius: 0,\n      splitNumber: 10,\n      width: 15,\n      color: '#FFFFFF',\n      childNumber: 5,\n      childWidth: 5 },\n\n    pointer: {\n      width: 15,\n      color: 'auto' } },\n\n  opts.extra.gauge);\n\n  if (gaugeOption.oldAngle == undefined) {\n    gaugeOption.oldAngle = gaugeOption.startAngle;\n  }\n  if (gaugeOption.oldData == undefined) {\n    gaugeOption.oldData = 0;\n  }\n  categories = getGaugeAxisPoints(categories, gaugeOption.startAngle, gaugeOption.endAngle);\n\n  var centerPosition = {\n    x: opts.width / 2,\n    y: opts.height / 2 };\n\n  var radius = Math.min(centerPosition.x, centerPosition.y);\n  radius -= 5 * opts.pixelRatio;\n  radius -= gaugeOption.width / 2;\n  var innerRadius = radius - gaugeOption.width;\n  var totalAngle = 0;\n\n  //判断仪表盘的样式：default百度样式，progress新样式\n  if (gaugeOption.type == 'progress') {\n\n    //## 第一步画中心圆形背景和进度条背景\n    //中心圆形背景\n    var pieRadius = radius - gaugeOption.width * 3;\n    context.beginPath();\n    var gradient = context.createLinearGradient(centerPosition.x, centerPosition.y - pieRadius, centerPosition.x, centerPosition.y + pieRadius);\n    //配置渐变填充（起点：中心点向上减半径；结束点中心点向下加半径）\n    gradient.addColorStop('0', hexToRgb(series[0].color, 0.3));\n    gradient.addColorStop('1.0', hexToRgb(\"#FFFFFF\", 0.1));\n    context.setFillStyle(gradient);\n    context.arc(centerPosition.x, centerPosition.y, pieRadius, 0, 2 * Math.PI, false);\n    context.fill();\n    //画进度条背景\n    context.setLineWidth(gaugeOption.width);\n    context.setStrokeStyle(hexToRgb(series[0].color, 0.3));\n    context.setLineCap('round');\n    context.beginPath();\n    context.arc(centerPosition.x, centerPosition.y, innerRadius, gaugeOption.startAngle * Math.PI, gaugeOption.endAngle * Math.PI, false);\n    context.stroke();\n\n    //## 第二步画刻度线\n    totalAngle = gaugeOption.startAngle - gaugeOption.endAngle + 1;\n    var splitAngle = totalAngle / gaugeOption.splitLine.splitNumber;\n    var childAngle = totalAngle / gaugeOption.splitLine.splitNumber / gaugeOption.splitLine.childNumber;\n    var startX = -radius - gaugeOption.width * 0.5 - gaugeOption.splitLine.fixRadius;\n    var endX = -radius - gaugeOption.width - gaugeOption.splitLine.fixRadius + gaugeOption.splitLine.width;\n    context.save();\n    context.translate(centerPosition.x, centerPosition.y);\n    context.rotate((gaugeOption.startAngle - 1) * Math.PI);\n    var len = gaugeOption.splitLine.splitNumber * gaugeOption.splitLine.childNumber + 1;\n    var proc = series[0].data * process;\n    for (var i = 0; i < len; i++) {\n      context.beginPath();\n      //刻度线随进度变色\n      if (proc > i / len) {\n        context.setStrokeStyle(hexToRgb(series[0].color, 1));\n      } else {\n        context.setStrokeStyle(hexToRgb(series[0].color, 0.3));\n      }\n      context.setLineWidth(3 * opts.pixelRatio);\n      context.moveTo(startX, 0);\n      context.lineTo(endX, 0);\n      context.stroke();\n      context.rotate(childAngle * Math.PI);\n    }\n    context.restore();\n\n    //## 第三步画进度条\n    series = getArcbarDataPoints(series, gaugeOption, process);\n    context.setLineWidth(gaugeOption.width);\n    context.setStrokeStyle(series[0].color);\n    context.setLineCap('round');\n    context.beginPath();\n    context.arc(centerPosition.x, centerPosition.y, innerRadius, gaugeOption.startAngle * Math.PI, series[0]._proportion_ * Math.PI, false);\n    context.stroke();\n\n    //## 第四步画指针\n    var pointerRadius = radius - gaugeOption.width * 2.5;\n    context.save();\n    context.translate(centerPosition.x, centerPosition.y);\n    context.rotate((series[0]._proportion_ - 1) * Math.PI);\n    context.beginPath();\n    context.setLineWidth(gaugeOption.width / 3);\n    var gradient3 = context.createLinearGradient(0, -pointerRadius * 0.6, 0, pointerRadius * 0.6);\n    gradient3.addColorStop('0', hexToRgb('#FFFFFF', 0));\n    gradient3.addColorStop('0.5', hexToRgb(series[0].color, 1));\n    gradient3.addColorStop('1.0', hexToRgb('#FFFFFF', 0));\n    context.setStrokeStyle(gradient3);\n    context.arc(0, 0, pointerRadius, 0.85 * Math.PI, 1.15 * Math.PI, false);\n    context.stroke();\n    context.beginPath();\n    context.setLineWidth(1);\n    context.setStrokeStyle(series[0].color);\n    context.setFillStyle(series[0].color);\n    context.moveTo(-pointerRadius - gaugeOption.width / 3 / 2, -4);\n    context.lineTo(-pointerRadius - gaugeOption.width / 3 / 2 - 4, 0);\n    context.lineTo(-pointerRadius - gaugeOption.width / 3 / 2, 4);\n    context.lineTo(-pointerRadius - gaugeOption.width / 3 / 2, -4);\n    context.stroke();\n    context.fill();\n    context.restore();\n\n    //default百度样式\n  } else {\n    //画背景\n    context.setLineWidth(gaugeOption.width);\n    context.setLineCap('butt');\n    for (var _i19 = 0; _i19 < categories.length; _i19++) {\n      var eachCategories = categories[_i19];\n      context.beginPath();\n      context.setStrokeStyle(eachCategories.color);\n      context.arc(centerPosition.x, centerPosition.y, radius, eachCategories._startAngle_ * Math.PI, eachCategories._endAngle_ * Math.PI, false);\n      context.stroke();\n    }\n    context.save();\n\n    //画刻度线\n    totalAngle = gaugeOption.startAngle - gaugeOption.endAngle + 1;\n    var _splitAngle = totalAngle / gaugeOption.splitLine.splitNumber;\n    var _childAngle = totalAngle / gaugeOption.splitLine.splitNumber / gaugeOption.splitLine.childNumber;\n    var _startX2 = -radius - gaugeOption.width * 0.5 - gaugeOption.splitLine.fixRadius;\n    var _endX = -radius - gaugeOption.width * 0.5 - gaugeOption.splitLine.fixRadius + gaugeOption.splitLine.width;\n    var childendX = -radius - gaugeOption.width * 0.5 - gaugeOption.splitLine.fixRadius + gaugeOption.splitLine.childWidth;\n\n    context.translate(centerPosition.x, centerPosition.y);\n    context.rotate((gaugeOption.startAngle - 1) * Math.PI);\n\n    for (var _i20 = 0; _i20 < gaugeOption.splitLine.splitNumber + 1; _i20++) {\n      context.beginPath();\n      context.setStrokeStyle(gaugeOption.splitLine.color);\n      context.setLineWidth(2 * opts.pixelRatio);\n      context.moveTo(_startX2, 0);\n      context.lineTo(_endX, 0);\n      context.stroke();\n      context.rotate(_splitAngle * Math.PI);\n    }\n    context.restore();\n\n    context.save();\n    context.translate(centerPosition.x, centerPosition.y);\n    context.rotate((gaugeOption.startAngle - 1) * Math.PI);\n\n    for (var _i21 = 0; _i21 < gaugeOption.splitLine.splitNumber * gaugeOption.splitLine.childNumber + 1; _i21++) {\n      context.beginPath();\n      context.setStrokeStyle(gaugeOption.splitLine.color);\n      context.setLineWidth(1 * opts.pixelRatio);\n      context.moveTo(_startX2, 0);\n      context.lineTo(childendX, 0);\n      context.stroke();\n      context.rotate(_childAngle * Math.PI);\n    }\n    context.restore();\n\n    //画指针\n    series = getGaugeDataPoints(series, categories, gaugeOption, process);\n\n    for (var _i22 = 0; _i22 < series.length; _i22++) {\n      var eachSeries = series[_i22];\n      context.save();\n      context.translate(centerPosition.x, centerPosition.y);\n      context.rotate((eachSeries._proportion_ - 1) * Math.PI);\n      context.beginPath();\n      context.setFillStyle(eachSeries.color);\n      context.moveTo(gaugeOption.pointer.width, 0);\n      context.lineTo(0, -gaugeOption.pointer.width / 2);\n      context.lineTo(-innerRadius, 0);\n      context.lineTo(0, gaugeOption.pointer.width / 2);\n      context.lineTo(gaugeOption.pointer.width, 0);\n      context.closePath();\n      context.fill();\n      context.beginPath();\n      context.setFillStyle('#FFFFFF');\n      context.arc(0, 0, gaugeOption.pointer.width / 6, 0, 2 * Math.PI, false);\n      context.fill();\n      context.restore();\n    }\n\n    if (opts.dataLabel !== false) {\n      drawGaugeLabel(gaugeOption, radius, centerPosition, opts, config, context);\n    }\n  }\n\n  //画仪表盘标题，副标题\n  drawRingTitle(opts, config, context, centerPosition);\n\n  if (process === 1 && opts.type === 'gauge') {\n    opts.extra.gauge.oldAngle = series[0]._proportion_;\n    opts.extra.gauge.oldData = series[0].data;\n  }\n  return {\n    center: centerPosition,\n    radius: radius,\n    innerRadius: innerRadius,\n    categories: categories,\n    totalAngle: totalAngle };\n\n}\n\nfunction drawRadarDataPoints(series, opts, config, context) {\n  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n  var radarOption = assign({}, {\n    gridColor: '#cccccc',\n    labelColor: '#666666',\n    opacity: 0.2,\n    gridCount: 3 },\n  opts.extra.radar);\n\n  var coordinateAngle = getRadarCoordinateSeries(opts.categories.length);\n\n  var centerPosition = {\n    x: opts.area[3] + (opts.width - opts.area[1] - opts.area[3]) / 2,\n    y: opts.area[0] + (opts.height - opts.area[0] - opts.area[2]) / 2 };\n\n\n  var radius = Math.min(centerPosition.x - (getMaxTextListLength(opts.categories) + config.radarLabelTextMargin),\n  centerPosition.y - config.radarLabelTextMargin);\n  //TODO逻辑不对\n  radius -= opts.padding[1];\n\n  // draw grid\n  context.beginPath();\n  context.setLineWidth(1 * opts.pixelRatio);\n  context.setStrokeStyle(radarOption.gridColor);\n  coordinateAngle.forEach(function (angle) {\n    var pos = convertCoordinateOrigin(radius * Math.cos(angle), radius * Math.sin(angle), centerPosition);\n    context.moveTo(centerPosition.x, centerPosition.y);\n    context.lineTo(pos.x, pos.y);\n  });\n  context.stroke();\n  context.closePath();\n  // draw split line grid\n\n  var _loop = function _loop(i) {\n    var startPos = {};\n    context.beginPath();\n    context.setLineWidth(1 * opts.pixelRatio);\n    context.setStrokeStyle(radarOption.gridColor);\n    coordinateAngle.forEach(function (angle, index) {\n      var pos = convertCoordinateOrigin(radius / radarOption.gridCount * i * Math.cos(angle), radius / radarOption.gridCount * i * Math.sin(angle), centerPosition);\n      if (index === 0) {\n        startPos = pos;\n        context.moveTo(pos.x, pos.y);\n      } else {\n        context.lineTo(pos.x, pos.y);\n      }\n    });\n    context.lineTo(startPos.x, startPos.y);\n    context.stroke();\n    context.closePath();\n  };\n\n  for (var i = 1; i <= radarOption.gridCount; i++) {\n    _loop(i);\n  }\n\n  var radarDataPoints = getRadarDataPoints(coordinateAngle, centerPosition, radius, series, opts, process);\n\n  radarDataPoints.forEach(function (eachSeries, seriesIndex) {\n    // 绘制区域数据\n    context.beginPath();\n    context.setFillStyle(hexToRgb(eachSeries.color, radarOption.opacity));\n    eachSeries.data.forEach(function (item, index) {\n      if (index === 0) {\n        context.moveTo(item.position.x, item.position.y);\n      } else {\n        context.lineTo(item.position.x, item.position.y);\n      }\n    });\n    context.closePath();\n    context.fill();\n\n    if (opts.dataPointShape !== false) {\n      var points = eachSeries.data.map(function (item) {\n        return item.position;\n      });\n      drawPointShape(points, eachSeries.color, eachSeries.pointShape, context, opts);\n    }\n  });\n  // draw label text\n  drawRadarLabel(coordinateAngle, radius, centerPosition, opts, config, context);\n\n  return {\n    center: centerPosition,\n    radius: radius,\n    angleList: coordinateAngle };\n\n}\n\nfunction normalInt(min, max, iter) {\n  iter = iter == 0 ? 1 : iter;\n  var arr = [];\n  for (var i = 0; i < iter; i++) {\n    arr[i] = Math.random();\n  };\n  return Math.floor(arr.reduce(function (i, j) {return i + j;}) / iter * (max - min)) + min;\n};\n\nfunction collisionNew(area, points, width, height) {\n  var isIn = false;\n  for (var i = 0; i < points.length; i++) {\n    if (points[i].area) {\n      if (area[3] < points[i].area[1] || area[0] > points[i].area[2] || area[1] > points[i].area[3] || area[2] < points[i].area[0]) {\n        if (area[0] < 0 || area[1] < 0 || area[2] > width || area[3] > height) {\n          isIn = true;\n          break;\n        } else {\n          isIn = false;\n        }\n      } else {\n        isIn = true;\n        break;\n      }\n    }\n  }\n  return isIn;\n};\n\nfunction getBoundingBox(data) {\n  var bounds = {},coords;\n  bounds.xMin = 180;\n  bounds.xMax = 0;\n  bounds.yMin = 90;\n  bounds.yMax = 0;\n  for (var i = 0; i < data.length; i++) {\n    var coorda = data[i].geometry.coordinates;\n    for (var k = 0; k < coorda.length; k++) {\n      coords = coorda[k];\n      if (coords.length == 1) {\n        coords = coords[0];\n      }\n      for (var j = 0; j < coords.length; j++) {\n        var longitude = coords[j][0];\n        var latitude = coords[j][1];\n        var point = {\n          x: longitude,\n          y: latitude };\n\n        bounds.xMin = bounds.xMin < point.x ? bounds.xMin : point.x;\n        bounds.xMax = bounds.xMax > point.x ? bounds.xMax : point.x;\n        bounds.yMin = bounds.yMin < point.y ? bounds.yMin : point.y;\n        bounds.yMax = bounds.yMax > point.y ? bounds.yMax : point.y;\n      }\n    }\n  }\n  return bounds;\n}\n\nfunction coordinateToPoint(latitude, longitude, bounds, scale, xoffset, yoffset) {\n  return {\n    x: (longitude - bounds.xMin) * scale + xoffset,\n    y: (bounds.yMax - latitude) * scale + yoffset };\n\n}\n\nfunction pointToCoordinate(pointY, pointX, bounds, scale, xoffset, yoffset) {\n  return {\n    x: (pointX - xoffset) / scale + bounds.xMin,\n    y: bounds.yMax - (pointY - yoffset) / scale };\n\n}\n\nfunction isRayIntersectsSegment(poi, s_poi, e_poi) {\n  if (s_poi[1] == e_poi[1]) {return false;}\n  if (s_poi[1] > poi[1] && e_poi[1] > poi[1]) {return false;}\n  if (s_poi[1] < poi[1] && e_poi[1] < poi[1]) {return false;}\n  if (s_poi[1] == poi[1] && e_poi[1] > poi[1]) {return false;}\n  if (e_poi[1] == poi[1] && s_poi[1] > poi[1]) {return false;}\n  if (s_poi[0] < poi[0] && e_poi[1] < poi[1]) {return false;}\n  var xseg = e_poi[0] - (e_poi[0] - s_poi[0]) * (e_poi[1] - poi[1]) / (e_poi[1] - s_poi[1]);\n  if (xseg < poi[0]) {\n    return false;\n  } else {\n    return true;\n  }\n}\n\nfunction isPoiWithinPoly(poi, poly) {\n  var sinsc = 0;\n  for (var i = 0; i < poly.length; i++) {\n    var epoly = poly[i][0];\n    if (poly.length == 1) {\n      epoly = poly[i][0];\n    }\n    for (var j = 0; j < epoly.length - 1; j++) {\n      var s_poi = epoly[j];\n      var e_poi = epoly[j + 1];\n      if (isRayIntersectsSegment(poi, s_poi, e_poi)) {\n        sinsc += 1;\n      }\n    }\n  }\n\n  if (sinsc % 2 == 1) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\nfunction drawMapDataPoints(series, opts, config, context) {\n  var mapOption = assign({}, {\n    border: true,\n    borderWidth: 1,\n    borderColor: '#666666',\n    fillOpacity: 0.6,\n    activeBorderColor: '#f04864',\n    activeFillColor: '#facc14',\n    activeFillOpacity: 1 },\n  opts.extra.map);\n  var coords, point;\n  var data = series;\n  var bounds = getBoundingBox(data);\n  var xScale = opts.width / Math.abs(bounds.xMax - bounds.xMin);\n  var yScale = opts.height / Math.abs(bounds.yMax - bounds.yMin);\n  var scale = xScale < yScale ? xScale : yScale;\n  var xoffset = opts.width / 2 - Math.abs(bounds.xMax - bounds.xMin) / 2 * scale;\n  var yoffset = opts.height / 2 - Math.abs(bounds.yMax - bounds.yMin) / 2 * scale;\n  context.beginPath();\n  context.clearRect(0, 0, opts.width, opts.height);\n  context.setFillStyle(opts.background || '#FFFFFF');\n  context.rect(0, 0, opts.width, opts.height);\n  context.fill();\n  for (var i = 0; i < data.length; i++) {\n    context.beginPath();\n    context.setLineWidth(mapOption.borderWidth * opts.pixelRatio);\n    context.setStrokeStyle(mapOption.borderColor);\n    context.setFillStyle(hexToRgb(series[i].color, mapOption.fillOpacity));\n    if (opts.tooltip) {\n      if (opts.tooltip.index == i) {\n        context.setStrokeStyle(mapOption.activeBorderColor);\n        context.setFillStyle(hexToRgb(mapOption.activeFillColor, mapOption.activeFillOpacity));\n      }\n    }\n    var coorda = data[i].geometry.coordinates;\n    for (var k = 0; k < coorda.length; k++) {\n      coords = coorda[k];\n      if (coords.length == 1) {\n        coords = coords[0];\n      }\n      for (var j = 0; j < coords.length; j++) {\n        point = coordinateToPoint(coords[j][1], coords[j][0], bounds, scale, xoffset, yoffset);\n        if (j === 0) {\n          context.beginPath();\n          context.moveTo(point.x, point.y);\n        } else {\n          context.lineTo(point.x, point.y);\n        }\n      }\n      context.fill();\n      if (mapOption.border == true) {\n        context.stroke();\n      }\n    }\n    if (opts.dataLabel == true) {\n      var centerPoint = data[i].properties.centroid;\n      if (centerPoint) {\n        point = coordinateToPoint(centerPoint[1], centerPoint[0], bounds, scale, xoffset, yoffset);\n        var fontSize = data[i].textSize || config.fontSize;\n        var text = data[i].properties.name;\n        context.beginPath();\n        context.setFontSize(fontSize);\n        context.setFillStyle(data[i].textColor || '#666666');\n        context.fillText(text, point.x - measureText(text, fontSize) / 2, point.y + fontSize / 2);\n        context.closePath();\n        context.stroke();\n      }\n    }\n  }\n  opts.chartData.mapData = {\n    bounds: bounds,\n    scale: scale,\n    xoffset: xoffset,\n    yoffset: yoffset };\n\n  drawToolTipBridge(opts, config, context, 1);\n  context.draw();\n}\n\nfunction getWordCloudPoint(opts, type) {\n  var points = opts.series.sort(function (a, b) {return parseInt(b.textSize) - parseInt(a.textSize);});\n  switch (type) {\n    case 'normal':\n      for (var i = 0; i < points.length; i++) {\n        var text = points[i].name;\n        var tHeight = points[i].textSize;\n        var tWidth = measureText(text, tHeight);\n        var x = void 0,y = void 0;\n        var area = void 0;\n        var breaknum = 0;\n        while (true) {\n          breaknum++;\n          x = normalInt(-opts.width / 2, opts.width / 2, 5) - tWidth / 2;\n          y = normalInt(-opts.height / 2, opts.height / 2, 5) + tHeight / 2;\n          area = [x - 5 + opts.width / 2, y - 5 - tHeight + opts.height / 2, x + tWidth + 5 + opts.width / 2, y + 5 + opts.height / 2];\n          var isCollision = collisionNew(area, points, opts.width, opts.height);\n          if (!isCollision) break;\n          if (breaknum == 1000) {\n            area = [-100, -100, -100, -100];\n            break;\n          }\n        };\n        points[i].area = area;\n      }\n      break;\n    case 'vertical':var\n      Spin = function Spin() {\n        //获取均匀随机值，是否旋转，旋转的概率为（1-0.5）\n        if (Math.random() > 0.7) {\n          return true;\n        } else {return false;};\n      };;\n      for (var _i23 = 0; _i23 < points.length; _i23++) {\n        var _text = points[_i23].name;\n        var _tHeight = points[_i23].textSize;\n        var _tWidth = measureText(_text, _tHeight);\n        var isSpin = Spin();\n        var _x = void 0,_y = void 0,_area = void 0,areav = void 0;\n        var _breaknum = 0;\n        while (true) {\n          _breaknum++;\n          var _isCollision = void 0;\n          if (isSpin) {\n            _x = normalInt(-opts.width / 2, opts.width / 2, 5) - _tWidth / 2;\n            _y = normalInt(-opts.height / 2, opts.height / 2, 5) + _tHeight / 2;\n            _area = [_y - 5 - _tWidth + opts.width / 2, -_x - 5 + opts.height / 2, _y + 5 + opts.width / 2, -_x + _tHeight + 5 + opts.height / 2];\n            areav = [opts.width - (opts.width / 2 - opts.height / 2) - (-_x + _tHeight + 5 + opts.height / 2) - 5, opts.height / 2 - opts.width / 2 + (_y - 5 - _tWidth + opts.width / 2) - 5, opts.width - (opts.width / 2 - opts.height / 2) - (-_x + _tHeight + 5 + opts.height / 2) + _tHeight, opts.height / 2 - opts.width / 2 + (_y - 5 - _tWidth + opts.width / 2) + _tWidth + 5];\n            _isCollision = collisionNew(areav, points, opts.height, opts.width);\n          } else {\n            _x = normalInt(-opts.width / 2, opts.width / 2, 5) - _tWidth / 2;\n            _y = normalInt(-opts.height / 2, opts.height / 2, 5) + _tHeight / 2;\n            _area = [_x - 5 + opts.width / 2, _y - 5 - _tHeight + opts.height / 2, _x + _tWidth + 5 + opts.width / 2, _y + 5 + opts.height / 2];\n            _isCollision = collisionNew(_area, points, opts.width, opts.height);\n          }\n          if (!_isCollision) break;\n          if (_breaknum == 1000) {\n            _area = [-1000, -1000, -1000, -1000];\n            break;\n          }\n        };\n        if (isSpin) {\n          points[_i23].area = areav;\n          points[_i23].areav = _area;\n        } else {\n          points[_i23].area = _area;\n        }\n        points[_i23].rotate = isSpin;\n      };\n      break;}\n\n  return points;\n}\n\n\nfunction drawWordCloudDataPoints(series, opts, config, context) {\n  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n  var wordOption = assign({}, {\n    type: 'normal',\n    autoColors: true },\n  opts.extra.word);\n\n  context.beginPath();\n  context.setFillStyle(opts.background || '#FFFFFF');\n  context.rect(0, 0, opts.width, opts.height);\n  context.fill();\n  context.save();\n  var points = opts.chartData.wordCloudData;\n  context.translate(opts.width / 2, opts.height / 2);\n\n  for (var i = 0; i < points.length; i++) {\n    context.save();\n    if (points[i].rotate) {\n      context.rotate(90 * Math.PI / 180);\n    }\n    var text = points[i].name;\n    var tHeight = points[i].textSize;\n    var tWidth = measureText(text, tHeight);\n    context.beginPath();\n    context.setStrokeStyle(points[i].color);\n    context.setFillStyle(points[i].color);\n    context.setFontSize(tHeight);\n    if (points[i].rotate) {\n      if (points[i].areav[0] > 0) {\n        if (opts.tooltip) {\n          if (opts.tooltip.index == i) {\n            context.strokeText(text, (points[i].areav[0] + 5 - opts.width / 2) * process - tWidth * (1 - process) / 2, (points[i].areav[1] + 5 + tHeight - opts.height / 2) * process);\n          } else {\n            context.fillText(text, (points[i].areav[0] + 5 - opts.width / 2) * process - tWidth * (1 - process) / 2, (points[i].areav[1] + 5 + tHeight - opts.height / 2) * process);\n          }\n        } else {\n          context.fillText(text, (points[i].areav[0] + 5 - opts.width / 2) * process - tWidth * (1 - process) / 2, (points[i].areav[1] + 5 + tHeight - opts.height / 2) * process);\n        }\n      }\n    } else {\n      if (points[i].area[0] > 0) {\n        if (opts.tooltip) {\n          if (opts.tooltip.index == i) {\n            context.strokeText(text, (points[i].area[0] + 5 - opts.width / 2) * process - tWidth * (1 - process) / 2, (points[i].area[1] + 5 + tHeight - opts.height / 2) * process);\n          } else {\n            context.fillText(text, (points[i].area[0] + 5 - opts.width / 2) * process - tWidth * (1 - process) / 2, (points[i].area[1] + 5 + tHeight - opts.height / 2) * process);\n          }\n        } else {\n          context.fillText(text, (points[i].area[0] + 5 - opts.width / 2) * process - tWidth * (1 - process) / 2, (points[i].area[1] + 5 + tHeight - opts.height / 2) * process);\n        }\n\n      }\n    }\n\n    context.stroke();\n    context.restore();\n  }\n  context.restore();\n}\n\nfunction drawFunnelDataPoints(series, opts, config, context) {\n  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n  var funnelOption = assign({}, {\n    activeWidth: 10,\n    activeOpacity: 0.3,\n    border: false,\n    borderWidth: 2,\n    borderColor: '#FFFFFF',\n    fillOpacity: 1,\n    labelAlign: 'right' },\n  opts.extra.funnel);\n  var eachSpacing = (opts.height - opts.area[0] - opts.area[2]) / series.length;\n  var centerPosition = {\n    x: opts.area[3] + (opts.width - opts.area[1] - opts.area[3]) / 2,\n    y: opts.height - opts.area[2] };\n\n  var activeWidth = funnelOption.activeWidth;\n  var radius = Math.min((opts.width - opts.area[1] - opts.area[3]) / 2 - activeWidth, (opts.height - opts.area[0] - opts.area[2]) / 2 - activeWidth);\n  series = getFunnelDataPoints(series, radius, process);\n  context.save();\n  context.translate(centerPosition.x, centerPosition.y);\n  for (var i = 0; i < series.length; i++) {\n    if (i == 0) {\n      if (opts.tooltip) {\n        if (opts.tooltip.index == i) {\n          context.beginPath();\n          context.setFillStyle(hexToRgb(series[i].color, funnelOption.activeOpacity));\n          context.moveTo(-activeWidth, 0);\n          context.lineTo(-series[i].radius - activeWidth, -eachSpacing);\n          context.lineTo(series[i].radius + activeWidth, -eachSpacing);\n          context.lineTo(activeWidth, 0);\n          context.lineTo(-activeWidth, 0);\n          context.closePath();\n          context.fill();\n        }\n      }\n      series[i].funnelArea = [centerPosition.x - series[i].radius, centerPosition.y - eachSpacing, centerPosition.x + series[i].radius, centerPosition.y];\n      context.beginPath();\n      context.setLineWidth(funnelOption.borderWidth * opts.pixelRatio);\n      context.setStrokeStyle(funnelOption.borderColor);\n      context.setFillStyle(hexToRgb(series[i].color, funnelOption.fillOpacity));\n      context.moveTo(0, 0);\n      context.lineTo(-series[i].radius, -eachSpacing);\n      context.lineTo(series[i].radius, -eachSpacing);\n      context.lineTo(0, 0);\n      context.closePath();\n      context.fill();\n      if (funnelOption.border == true) {\n        context.stroke();\n      }\n    } else {\n      if (opts.tooltip) {\n        if (opts.tooltip.index == i) {\n          context.beginPath();\n          context.setFillStyle(hexToRgb(series[i].color, funnelOption.activeOpacity));\n          context.moveTo(0, 0);\n          context.lineTo(-series[i - 1].radius - activeWidth, 0);\n          context.lineTo(-series[i].radius - activeWidth, -eachSpacing);\n          context.lineTo(series[i].radius + activeWidth, -eachSpacing);\n          context.lineTo(series[i - 1].radius + activeWidth, 0);\n          context.lineTo(0, 0);\n          context.closePath();\n          context.fill();\n        }\n      }\n      series[i].funnelArea = [centerPosition.x - series[i].radius, centerPosition.y - eachSpacing * (i + 1), centerPosition.x + series[i].radius, centerPosition.y - eachSpacing * i];\n      context.beginPath();\n      context.setLineWidth(funnelOption.borderWidth * opts.pixelRatio);\n      context.setStrokeStyle(funnelOption.borderColor);\n      context.setFillStyle(hexToRgb(series[i].color, funnelOption.fillOpacity));\n      context.moveTo(0, 0);\n      context.lineTo(-series[i - 1].radius, 0);\n      context.lineTo(-series[i].radius, -eachSpacing);\n      context.lineTo(series[i].radius, -eachSpacing);\n      context.lineTo(series[i - 1].radius, 0);\n      context.lineTo(0, 0);\n      context.closePath();\n      context.fill();\n      if (funnelOption.border == true) {\n        context.stroke();\n      }\n    }\n    context.translate(0, -eachSpacing);\n  }\n  context.restore();\n\n  if (opts.dataLabel !== false && process === 1) {\n    drawFunnelText(series, opts, context, eachSpacing, funnelOption.labelAlign, activeWidth, centerPosition);\n  }\n\n  return {\n    center: centerPosition,\n    radius: radius,\n    series: series };\n\n}\n\nfunction drawFunnelText(series, opts, context, eachSpacing, labelAlign, activeWidth, centerPosition) {\n  for (var i = 0; i < series.length; i++) {\n    var item = series[i];\n    var startX = void 0,endX = void 0,startY = void 0,fontSize = void 0;\n    var text = item.format ? item.format(+item._proportion_.toFixed(2)) : util.toFixed(item._proportion_ * 100) + '%';\n    if (labelAlign == 'right') {\n      if (i == 0) {\n        startX = (item.funnelArea[2] + centerPosition.x) / 2;\n      } else {\n        startX = (item.funnelArea[2] + series[i - 1].funnelArea[2]) / 2;\n      }\n      endX = startX + activeWidth * 2;\n      startY = item.funnelArea[1] + eachSpacing / 2;\n      fontSize = item.textSize || opts.fontSize;\n      context.setLineWidth(1 * opts.pixelRatio);\n      context.setStrokeStyle(item.color);\n      context.setFillStyle(item.color);\n      context.beginPath();\n      context.moveTo(startX, startY);\n      context.lineTo(endX, startY);\n      context.stroke();\n      context.closePath();\n      context.beginPath();\n      context.moveTo(endX, startY);\n      context.arc(endX, startY, 2, 0, 2 * Math.PI);\n      context.closePath();\n      context.fill();\n      context.beginPath();\n      context.setFontSize(fontSize);\n      context.setFillStyle(item.textColor || '#666666');\n      context.fillText(text, endX + 5, startY + fontSize / 2 - 2);\n      context.closePath();\n      context.stroke();\n      context.closePath();\n    } else {\n      if (i == 0) {\n        startX = (item.funnelArea[0] + centerPosition.x) / 2;\n      } else {\n        startX = (item.funnelArea[0] + series[i - 1].funnelArea[0]) / 2;\n      }\n      endX = startX - activeWidth * 2;\n      startY = item.funnelArea[1] + eachSpacing / 2;\n      fontSize = item.textSize || opts.fontSize;\n      context.setLineWidth(1 * opts.pixelRatio);\n      context.setStrokeStyle(item.color);\n      context.setFillStyle(item.color);\n      context.beginPath();\n      context.moveTo(startX, startY);\n      context.lineTo(endX, startY);\n      context.stroke();\n      context.closePath();\n      context.beginPath();\n      context.moveTo(endX, startY);\n      context.arc(endX, startY, 2, 0, 2 * Math.PI);\n      context.closePath();\n      context.fill();\n      context.beginPath();\n      context.setFontSize(fontSize);\n      context.setFillStyle(item.textColor || '#666666');\n      context.fillText(text, endX - 5 - measureText(text), startY + fontSize / 2 - 2);\n      context.closePath();\n      context.stroke();\n      context.closePath();\n    }\n\n  }\n}\n\n\nfunction drawCanvas(opts, context) {\n  context.draw();\n}\n\nvar Timing = {\n  easeIn: function easeIn(pos) {\n    return Math.pow(pos, 3);\n  },\n  easeOut: function easeOut(pos) {\n    return Math.pow(pos - 1, 3) + 1;\n  },\n  easeInOut: function easeInOut(pos) {\n    if ((pos /= 0.5) < 1) {\n      return 0.5 * Math.pow(pos, 3);\n    } else {\n      return 0.5 * (Math.pow(pos - 2, 3) + 2);\n    }\n  },\n  linear: function linear(pos) {\n    return pos;\n  } };\n\n\nfunction Animation(opts) {\n  this.isStop = false;\n  opts.duration = typeof opts.duration === 'undefined' ? 1000 : opts.duration;\n  opts.timing = opts.timing || 'linear';\n  var delay = 17;\n\n  function createAnimationFrame() {\n    if (typeof setTimeout !== 'undefined') {\n      return function (step, delay) {\n        setTimeout(function () {\n          var timeStamp = +new Date();\n          step(timeStamp);\n        }, delay);\n      };\n    } else if (typeof requestAnimationFrame !== 'undefined') {\n      return requestAnimationFrame;\n    } else {\n      return function (step) {\n        step(null);\n      };\n    }\n  };\n  var animationFrame = createAnimationFrame();\n  var startTimeStamp = null;\n  var _step = function step(timestamp) {\n    if (timestamp === null || this.isStop === true) {\n      opts.onProcess && opts.onProcess(1);\n      opts.onAnimationFinish && opts.onAnimationFinish();\n      return;\n    }\n    if (startTimeStamp === null) {\n      startTimeStamp = timestamp;\n    }\n    if (timestamp - startTimeStamp < opts.duration) {\n      var process = (timestamp - startTimeStamp) / opts.duration;\n      var timingFunction = Timing[opts.timing];\n      process = timingFunction(process);\n\n      opts.onProcess && opts.onProcess(process);\n      animationFrame(_step, delay);\n    } else {\n      opts.onProcess && opts.onProcess(1);\n      opts.onAnimationFinish && opts.onAnimationFinish();\n    }\n  };\n  _step = _step.bind(this);\n  animationFrame(_step, delay);\n}\n\n// stop animation immediately\n// and tigger onAnimationFinish\nAnimation.prototype.stop = function () {\n  this.isStop = true;\n};\n\nfunction drawCharts(type, opts, config, context) {\n  var _this = this;\n  var series = opts.series;\n  var categories = opts.categories;\n  series = fillSeries(series, opts, config);\n  var duration = opts.animation ? opts.duration : 0;\n  _this.animationInstance && _this.animationInstance.stop();\n  var seriesMA = null;\n  if (type == 'candle') {\n    var average = assign({}, opts.extra.candle.average);\n    if (average.show) {\n      seriesMA = calCandleMA(average.day, average.name, average.color, series[0].data);\n      seriesMA = fillSeries(seriesMA, opts, config);\n      opts.seriesMA = seriesMA;\n    } else if (opts.seriesMA) {\n      seriesMA = opts.seriesMA = fillSeries(opts.seriesMA, opts, config);\n    } else {\n      seriesMA = series;\n    }\n  } else {\n    seriesMA = series;\n  }\n\n  /* 过滤掉show=false的series */\n  opts._series_ = series = filterSeries(series);\n\n  //重新计算图表区域\n\n  opts.area = new Array(4);\n  //复位绘图区域\n  for (var j = 0; j < 4; j++) {\n    opts.area[j] = opts.padding[j];\n  }\n\n  //通过计算三大区域：图例、X轴、Y轴的大小，确定绘图区域\n  var _calLegendData = calLegendData(seriesMA, opts, config, opts.chartData),\n  legendHeight = _calLegendData.area.wholeHeight,\n  legendWidth = _calLegendData.area.wholeWidth;\n\n  switch (opts.legend.position) {\n    case 'top':\n      opts.area[0] += legendHeight;\n      break;\n    case 'bottom':\n      opts.area[2] += legendHeight;\n      break;\n    case 'left':\n      opts.area[3] += legendWidth;\n      break;\n    case 'right':\n      opts.area[1] += legendWidth;\n      break;}\n\n\n  var _calYAxisData = {},yAxisWidth = 0;\n  if (opts.type === 'line' || opts.type === 'column' || opts.type === 'area' || opts.type === 'mix' || opts.type === 'candle') {\n    _calYAxisData = calYAxisData(series, opts, config);\n    yAxisWidth = _calYAxisData.yAxisWidth;\n    //如果显示Y轴标题\n    if (opts.yAxis.showTitle) {\n      var maxTitleHeight = 0;\n      for (var i = 0; i < opts.yAxis.data.length; i++) {\n        maxTitleHeight = Math.max(maxTitleHeight, opts.yAxis.data[i].titleFontSize ? opts.yAxis.data[i].titleFontSize : config.fontSize);\n      }\n      opts.area[0] += (maxTitleHeight + 6) * opts.pixelRatio;\n    }\n    var rightIndex = 0,leftIndex = 0;\n    //计算主绘图区域左右位置\n    for (var _i24 = 0; _i24 < yAxisWidth.length; _i24++) {\n      if (yAxisWidth[_i24].position == 'left') {\n        if (leftIndex > 0) {\n          opts.area[3] += yAxisWidth[_i24].width + opts.yAxis.padding;\n        } else {\n          opts.area[3] += yAxisWidth[_i24].width;\n        }\n        leftIndex += 1;\n      } else {\n        if (rightIndex > 0) {\n          opts.area[1] += yAxisWidth[_i24].width + opts.yAxis.padding;\n        } else {\n          opts.area[1] += yAxisWidth[_i24].width;\n        }\n        rightIndex += 1;\n      }\n    }\n  } else {\n    config.yAxisWidth = yAxisWidth;\n  }\n  opts.chartData.yAxisData = _calYAxisData;\n\n  if (opts.categories && opts.categories.length) {\n    opts.chartData.xAxisData = getXAxisPoints(opts.categories, opts, config);\n    var _calCategoriesData = calCategoriesData(opts.categories, opts, config, opts.chartData.xAxisData.eachSpacing),\n    xAxisHeight = _calCategoriesData.xAxisHeight,\n    angle = _calCategoriesData.angle;\n    config.xAxisHeight = xAxisHeight;\n    config._xAxisTextAngle_ = angle;\n    opts.area[2] += xAxisHeight;\n    opts.chartData.categoriesData = _calCategoriesData;\n  } else {\n    if (opts.type === 'line' || opts.type === 'area' || opts.type === 'points') {\n      opts.chartData.xAxisData = calXAxisData(series, opts, config);\n      categories = opts.chartData.xAxisData.rangesFormat;\n      var _calCategoriesData2 = calCategoriesData(categories, opts, config, opts.chartData.xAxisData.eachSpacing),\n      _xAxisHeight = _calCategoriesData2.xAxisHeight,\n      _angle = _calCategoriesData2.angle;\n      config.xAxisHeight = _xAxisHeight;\n      config._xAxisTextAngle_ = _angle;\n      opts.area[2] += _xAxisHeight;\n      opts.chartData.categoriesData = _calCategoriesData2;\n    } else {\n      opts.chartData.xAxisData = {\n        xAxisPoints: [] };\n\n    }\n  }\n  //计算右对齐偏移距离\n  if (opts.enableScroll && opts.xAxis.scrollAlign == 'right' && opts._scrollDistance_ === undefined) {\n    var offsetLeft = 0,\n    xAxisPoints = opts.chartData.xAxisData.xAxisPoints,\n    startX = opts.chartData.xAxisData.startX,\n    endX = opts.chartData.xAxisData.endX,\n    eachSpacing = opts.chartData.xAxisData.eachSpacing;\n    var totalWidth = eachSpacing * (xAxisPoints.length - 1);\n    var screenWidth = endX - startX;\n    offsetLeft = screenWidth - totalWidth;\n    _this.scrollOption = {\n      currentOffset: offsetLeft,\n      startTouchX: offsetLeft,\n      distance: 0,\n      lastMoveTime: 0 };\n\n    opts._scrollDistance_ = offsetLeft;\n  }\n\n  if (type === 'pie' || type === 'ring' || type === 'rose') {\n    config._pieTextMaxLength_ = opts.dataLabel === false ? 0 : getPieTextMaxLength(seriesMA);\n  }\n\n  switch (type) {\n    case 'word':\n      var wordOption = assign({}, {\n        type: 'normal',\n        autoColors: true },\n      opts.extra.word);\n      if (opts.updateData == true || opts.updateData == undefined) {\n        opts.chartData.wordCloudData = getWordCloudPoint(opts, wordOption.type);\n      }\n      this.animationInstance = new Animation({\n        timing: 'easeInOut',\n        duration: duration,\n        onProcess: function onProcess(process) {\n          context.clearRect(0, 0, opts.width, opts.height);\n          if (opts.rotate) {\n            contextRotate(context, opts);\n          }\n          drawWordCloudDataPoints(series, opts, config, context, process);\n          drawCanvas(opts, context);\n        },\n        onAnimationFinish: function onAnimationFinish() {\n          _this.event.trigger('renderComplete');\n        } });\n\n      break;\n    case 'map':\n      context.clearRect(0, 0, opts.width, opts.height);\n      drawMapDataPoints(series, opts, config, context);\n      break;\n    case 'funnel':\n      this.animationInstance = new Animation({\n        timing: 'easeInOut',\n        duration: duration,\n        onProcess: function onProcess(process) {\n          context.clearRect(0, 0, opts.width, opts.height);\n          if (opts.rotate) {\n            contextRotate(context, opts);\n          }\n          opts.chartData.funnelData = drawFunnelDataPoints(series, opts, config, context, process);\n          drawLegend(opts.series, opts, config, context, opts.chartData);\n          drawToolTipBridge(opts, config, context, process);\n          drawCanvas(opts, context);\n        },\n        onAnimationFinish: function onAnimationFinish() {\n          _this.event.trigger('renderComplete');\n        } });\n\n      break;\n    case 'line':\n      this.animationInstance = new Animation({\n        timing: 'easeIn',\n        duration: duration,\n        onProcess: function onProcess(process) {\n          context.clearRect(0, 0, opts.width, opts.height);\n          if (opts.rotate) {\n            contextRotate(context, opts);\n          }\n          drawYAxisGrid(categories, opts, config, context);\n          drawXAxis(categories, opts, config, context);\n          var _drawLineDataPoints = drawLineDataPoints(series, opts, config, context, process),\n          xAxisPoints = _drawLineDataPoints.xAxisPoints,\n          calPoints = _drawLineDataPoints.calPoints,\n          eachSpacing = _drawLineDataPoints.eachSpacing;\n          opts.chartData.xAxisPoints = xAxisPoints;\n          opts.chartData.calPoints = calPoints;\n          opts.chartData.eachSpacing = eachSpacing;\n          drawYAxis(series, opts, config, context);\n          if (opts.enableMarkLine !== false && process === 1) {\n            drawMarkLine(opts, config, context);\n          }\n          drawLegend(opts.series, opts, config, context, opts.chartData);\n          drawToolTipBridge(opts, config, context, process, eachSpacing, xAxisPoints);\n          drawCanvas(opts, context);\n\n        },\n        onAnimationFinish: function onAnimationFinish() {\n          _this.event.trigger('renderComplete');\n        } });\n\n      break;\n    case 'mix':\n      this.animationInstance = new Animation({\n        timing: 'easeIn',\n        duration: duration,\n        onProcess: function onProcess(process) {\n          context.clearRect(0, 0, opts.width, opts.height);\n          if (opts.rotate) {\n            contextRotate(context, opts);\n          }\n          drawYAxisGrid(categories, opts, config, context);\n          drawXAxis(categories, opts, config, context);\n          var _drawMixDataPoints = drawMixDataPoints(series, opts, config, context, process),\n          xAxisPoints = _drawMixDataPoints.xAxisPoints,\n          calPoints = _drawMixDataPoints.calPoints,\n          eachSpacing = _drawMixDataPoints.eachSpacing;\n          opts.chartData.xAxisPoints = xAxisPoints;\n          opts.chartData.calPoints = calPoints;\n          opts.chartData.eachSpacing = eachSpacing;\n          drawYAxis(series, opts, config, context);\n          if (opts.enableMarkLine !== false && process === 1) {\n            drawMarkLine(opts, config, context);\n          }\n          drawLegend(opts.series, opts, config, context, opts.chartData);\n          drawToolTipBridge(opts, config, context, process, eachSpacing, xAxisPoints);\n          drawCanvas(opts, context);\n        },\n        onAnimationFinish: function onAnimationFinish() {\n          _this.event.trigger('renderComplete');\n        } });\n\n      break;\n    case 'column':\n      this.animationInstance = new Animation({\n        timing: 'easeIn',\n        duration: duration,\n        onProcess: function onProcess(process) {\n          context.clearRect(0, 0, opts.width, opts.height);\n          if (opts.rotate) {\n            contextRotate(context, opts);\n          }\n          drawYAxisGrid(categories, opts, config, context);\n          drawXAxis(categories, opts, config, context);\n          var _drawColumnDataPoints = drawColumnDataPoints(series, opts, config, context, process),\n          xAxisPoints = _drawColumnDataPoints.xAxisPoints,\n          calPoints = _drawColumnDataPoints.calPoints,\n          eachSpacing = _drawColumnDataPoints.eachSpacing;\n          opts.chartData.xAxisPoints = xAxisPoints;\n          opts.chartData.calPoints = calPoints;\n          opts.chartData.eachSpacing = eachSpacing;\n          drawYAxis(series, opts, config, context);\n          if (opts.enableMarkLine !== false && process === 1) {\n            drawMarkLine(opts, config, context);\n          }\n          drawLegend(opts.series, opts, config, context, opts.chartData);\n          drawToolTipBridge(opts, config, context, process, eachSpacing, xAxisPoints);\n          drawCanvas(opts, context);\n        },\n        onAnimationFinish: function onAnimationFinish() {\n          _this.event.trigger('renderComplete');\n        } });\n\n      break;\n    case 'area':\n      this.animationInstance = new Animation({\n        timing: 'easeIn',\n        duration: duration,\n        onProcess: function onProcess(process) {\n          context.clearRect(0, 0, opts.width, opts.height);\n          if (opts.rotate) {\n            contextRotate(context, opts);\n          }\n          drawYAxisGrid(categories, opts, config, context);\n          drawXAxis(categories, opts, config, context);\n          var _drawAreaDataPoints = drawAreaDataPoints(series, opts, config, context, process),\n          xAxisPoints = _drawAreaDataPoints.xAxisPoints,\n          calPoints = _drawAreaDataPoints.calPoints,\n          eachSpacing = _drawAreaDataPoints.eachSpacing;\n          opts.chartData.xAxisPoints = xAxisPoints;\n          opts.chartData.calPoints = calPoints;\n          opts.chartData.eachSpacing = eachSpacing;\n          drawYAxis(series, opts, config, context);\n          if (opts.enableMarkLine !== false && process === 1) {\n            drawMarkLine(opts, config, context);\n          }\n          drawLegend(opts.series, opts, config, context, opts.chartData);\n          drawToolTipBridge(opts, config, context, process, eachSpacing, xAxisPoints);\n          drawCanvas(opts, context);\n        },\n        onAnimationFinish: function onAnimationFinish() {\n          _this.event.trigger('renderComplete');\n        } });\n\n      break;\n    case 'ring':\n    case 'pie':\n      this.animationInstance = new Animation({\n        timing: 'easeInOut',\n        duration: duration,\n        onProcess: function onProcess(process) {\n          context.clearRect(0, 0, opts.width, opts.height);\n          if (opts.rotate) {\n            contextRotate(context, opts);\n          }\n          opts.chartData.pieData = drawPieDataPoints(series, opts, config, context, process);\n          drawLegend(opts.series, opts, config, context, opts.chartData);\n          drawToolTipBridge(opts, config, context, process);\n          drawCanvas(opts, context);\n        },\n        onAnimationFinish: function onAnimationFinish() {\n          _this.event.trigger('renderComplete');\n        } });\n\n      break;\n    case 'rose':\n      this.animationInstance = new Animation({\n        timing: 'easeInOut',\n        duration: duration,\n        onProcess: function onProcess(process) {\n          context.clearRect(0, 0, opts.width, opts.height);\n          if (opts.rotate) {\n            contextRotate(context, opts);\n          }\n          opts.chartData.pieData = drawRoseDataPoints(series, opts, config, context, process);\n          drawLegend(opts.series, opts, config, context, opts.chartData);\n          drawToolTipBridge(opts, config, context, process);\n          drawCanvas(opts, context);\n        },\n        onAnimationFinish: function onAnimationFinish() {\n          _this.event.trigger('renderComplete');\n        } });\n\n      break;\n    case 'radar':\n      this.animationInstance = new Animation({\n        timing: 'easeInOut',\n        duration: duration,\n        onProcess: function onProcess(process) {\n          context.clearRect(0, 0, opts.width, opts.height);\n          if (opts.rotate) {\n            contextRotate(context, opts);\n          }\n          opts.chartData.radarData = drawRadarDataPoints(series, opts, config, context, process);\n          drawLegend(opts.series, opts, config, context, opts.chartData);\n          drawToolTipBridge(opts, config, context, process);\n          drawCanvas(opts, context);\n        },\n        onAnimationFinish: function onAnimationFinish() {\n          _this.event.trigger('renderComplete');\n        } });\n\n      break;\n    case 'arcbar':\n      this.animationInstance = new Animation({\n        timing: 'easeInOut',\n        duration: duration,\n        onProcess: function onProcess(process) {\n          context.clearRect(0, 0, opts.width, opts.height);\n          if (opts.rotate) {\n            contextRotate(context, opts);\n          }\n          opts.chartData.arcbarData = drawArcbarDataPoints(series, opts, config, context, process);\n          drawCanvas(opts, context);\n        },\n        onAnimationFinish: function onAnimationFinish() {\n          _this.event.trigger('renderComplete');\n        } });\n\n      break;\n    case 'gauge':\n      this.animationInstance = new Animation({\n        timing: 'easeInOut',\n        duration: duration,\n        onProcess: function onProcess(process) {\n          context.clearRect(0, 0, opts.width, opts.height);\n          if (opts.rotate) {\n            contextRotate(context, opts);\n          }\n          opts.chartData.gaugeData = drawGaugeDataPoints(categories, series, opts, config, context, process);\n          drawCanvas(opts, context);\n        },\n        onAnimationFinish: function onAnimationFinish() {\n          _this.event.trigger('renderComplete');\n        } });\n\n      break;\n    case 'candle':\n      this.animationInstance = new Animation({\n        timing: 'easeIn',\n        duration: duration,\n        onProcess: function onProcess(process) {\n          context.clearRect(0, 0, opts.width, opts.height);\n          if (opts.rotate) {\n            contextRotate(context, opts);\n          }\n          drawYAxisGrid(categories, opts, config, context);\n          drawXAxis(categories, opts, config, context);\n          var _drawCandleDataPoints = drawCandleDataPoints(series, seriesMA, opts, config, context, process),\n          xAxisPoints = _drawCandleDataPoints.xAxisPoints,\n          calPoints = _drawCandleDataPoints.calPoints,\n          eachSpacing = _drawCandleDataPoints.eachSpacing;\n          opts.chartData.xAxisPoints = xAxisPoints;\n          opts.chartData.calPoints = calPoints;\n          opts.chartData.eachSpacing = eachSpacing;\n          drawYAxis(series, opts, config, context);\n          if (opts.enableMarkLine !== false && process === 1) {\n            drawMarkLine(opts, config, context);\n          }\n          if (seriesMA) {\n            drawLegend(seriesMA, opts, config, context, opts.chartData);\n          } else {\n            drawLegend(opts.series, opts, config, context, opts.chartData);\n          }\n          drawToolTipBridge(opts, config, context, process, eachSpacing, xAxisPoints);\n          drawCanvas(opts, context);\n        },\n        onAnimationFinish: function onAnimationFinish() {\n          _this.event.trigger('renderComplete');\n        } });\n\n      break;}\n\n}\n\n// simple event implement\n\nfunction Event() {\n  this.events = {};\n}\n\nEvent.prototype.addEventListener = function (type, listener) {\n  this.events[type] = this.events[type] || [];\n  this.events[type].push(listener);\n};\n\nEvent.prototype.trigger = function () {\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  var type = args[0];\n  var params = args.slice(1);\n  if (!!this.events[type]) {\n    this.events[type].forEach(function (listener) {\n      try {\n        listener.apply(null, params);\n      } catch (e) {\n        __f__(\"error\", e, \" at components/uCharts/u-charts.js:5120\");\n      }\n    });\n  }\n};\n\nvar Charts = function Charts(opts) {\n  opts.pixelRatio = opts.pixelRatio ? opts.pixelRatio : 1;\n  opts.fontSize = opts.fontSize ? opts.fontSize * opts.pixelRatio : 13 * opts.pixelRatio;\n  opts.title = assign({}, opts.title);\n  opts.subtitle = assign({}, opts.subtitle);\n  opts.duration = opts.duration ? opts.duration : 1000;\n  opts.yAxis = assign({}, {\n    data: [],\n    showTitle: false,\n    disabled: false,\n    disableGrid: false,\n    splitNumber: 5,\n    gridType: 'solid',\n    dashLength: 4 * opts.pixelRatio,\n    gridColor: '#cccccc',\n    padding: 10,\n    fontColor: '#666666' },\n  opts.yAxis);\n  opts.yAxis.dashLength *= opts.pixelRatio;\n  opts.yAxis.padding *= opts.pixelRatio;\n  opts.xAxis = assign({}, {\n    rotateLabel: false,\n    type: 'calibration',\n    gridType: 'solid',\n    dashLength: 4,\n    scrollAlign: 'left',\n    boundaryGap: 'center',\n    axisLine: true,\n    axisLineColor: '#cccccc' },\n  opts.xAxis);\n  opts.xAxis.dashLength *= opts.pixelRatio;\n  opts.legend = assign({}, {\n    show: true,\n    position: 'bottom',\n    float: 'center',\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    padding: 5,\n    margin: 5,\n    itemGap: 10,\n    fontSize: opts.fontSize,\n    lineHeight: opts.fontSize,\n    fontColor: '#333333',\n    format: {},\n    hiddenColor: '#CECECE' },\n  opts.legend);\n  opts.legend.borderWidth = opts.legend.borderWidth * opts.pixelRatio;\n  opts.legend.itemGap = opts.legend.itemGap * opts.pixelRatio;\n  opts.legend.padding = opts.legend.padding * opts.pixelRatio;\n  opts.legend.margin = opts.legend.margin * opts.pixelRatio;\n  opts.extra = assign({}, opts.extra);\n  opts.rotate = opts.rotate ? true : false;\n  opts.animation = opts.animation ? true : false;\n  opts.rotate = opts.rotate ? true : false;\n\n  var config$$1 = JSON.parse(JSON.stringify(config));\n  config$$1.colors = opts.colors ? opts.colors : config$$1.colors;\n  config$$1.yAxisTitleWidth = opts.yAxis.disabled !== true && opts.yAxis.title ? config$$1.yAxisTitleWidth : 0;\n  if (opts.type == 'pie' || opts.type == 'ring') {\n    config$$1.pieChartLinePadding = opts.dataLabel === false ? 0 : opts.extra.pie.labelWidth * opts.pixelRatio || config$$1.pieChartLinePadding * opts.pixelRatio;\n  }\n  if (opts.type == 'rose') {\n    config$$1.pieChartLinePadding = opts.dataLabel === false ? 0 : opts.extra.rose.labelWidth * opts.pixelRatio || config$$1.pieChartLinePadding * opts.pixelRatio;\n  }\n  config$$1.pieChartTextPadding = opts.dataLabel === false ? 0 : config$$1.pieChartTextPadding * opts.pixelRatio;\n  config$$1.yAxisSplit = opts.yAxis.splitNumber ? opts.yAxis.splitNumber : config.yAxisSplit;\n\n  //屏幕旋转\n  config$$1.rotate = opts.rotate;\n  if (opts.rotate) {\n    var tempWidth = opts.width;\n    var tempHeight = opts.height;\n    opts.width = tempHeight;\n    opts.height = tempWidth;\n  }\n\n  //适配高分屏\n  opts.padding = opts.padding ? opts.padding : config$$1.padding;\n  for (var i = 0; i < 4; i++) {\n    opts.padding[i] *= opts.pixelRatio;\n  }\n  config$$1.yAxisWidth = config.yAxisWidth * opts.pixelRatio;\n  config$$1.xAxisHeight = config.xAxisHeight * opts.pixelRatio;\n  if (opts.enableScroll && opts.xAxis.scrollShow) {\n    config$$1.xAxisHeight += 6 * opts.pixelRatio;\n  }\n  config$$1.xAxisLineHeight = config.xAxisLineHeight * opts.pixelRatio;\n  config$$1.fontSize = opts.fontSize;\n  config$$1.titleFontSize = config.titleFontSize * opts.pixelRatio;\n  config$$1.subtitleFontSize = config.subtitleFontSize * opts.pixelRatio;\n  config$$1.toolTipPadding = config.toolTipPadding * opts.pixelRatio;\n  config$$1.toolTipLineHeight = config.toolTipLineHeight * opts.pixelRatio;\n  config$$1.columePadding = config.columePadding * opts.pixelRatio;\n  opts.$this = opts.$this ? opts.$this : this;\n\n  this.context = uni.createCanvasContext(opts.canvasId, opts.$this);\n  /* 兼容原生H5\r\n                                                                     this.context = document.getElementById(opts.canvasId).getContext(\"2d\");\r\n                                                                     this.context.setStrokeStyle = function(e){ return this.strokeStyle=e; }\r\n                                                                     this.context.setLineWidth = function(e){ return this.lineWidth=e; }\r\n                                                                     this.context.setLineCap = function(e){ return this.lineCap=e; }\r\n                                                                     this.context.setFontSize = function(e){ return this.font=e+\"px sans-serif\"; }\r\n                                                                     this.context.setFillStyle = function(e){ return this.fillStyle=e; }\r\n                                                                     this.context.draw = function(){ }\r\n                                                                     */\n\n  opts.chartData = {};\n  this.event = new Event();\n  this.scrollOption = {\n    currentOffset: 0,\n    startTouchX: 0,\n    distance: 0,\n    lastMoveTime: 0 };\n\n\n  this.opts = opts;\n  this.config = config$$1;\n\n  drawCharts.call(this, opts.type, opts, config$$1, this.context);\n};\n\nCharts.prototype.updateData = function () {\n  var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  this.opts = assign({}, this.opts, data);\n  this.opts.updateData = true;\n  var scrollPosition = data.scrollPosition || 'current';\n  switch (scrollPosition) {\n    case 'current':\n      this.opts._scrollDistance_ = this.scrollOption.currentOffset;\n      break;\n    case 'left':\n      this.opts._scrollDistance_ = 0;\n      this.scrollOption = {\n        currentOffset: 0,\n        startTouchX: 0,\n        distance: 0,\n        lastMoveTime: 0 };\n\n      break;\n    case 'right':\n      var _calYAxisData = calYAxisData(this.opts.series, this.opts, this.config),\n      yAxisWidth = _calYAxisData.yAxisWidth;\n      this.config.yAxisWidth = yAxisWidth;\n      var offsetLeft = 0;\n      var _getXAxisPoints0 = getXAxisPoints(this.opts.categories, this.opts, this.config),\n      xAxisPoints = _getXAxisPoints0.xAxisPoints,\n      startX = _getXAxisPoints0.startX,\n      endX = _getXAxisPoints0.endX,\n      eachSpacing = _getXAxisPoints0.eachSpacing;\n      var totalWidth = eachSpacing * (xAxisPoints.length - 1);\n      var screenWidth = endX - startX;\n      offsetLeft = screenWidth - totalWidth;\n      this.scrollOption = {\n        currentOffset: offsetLeft,\n        startTouchX: offsetLeft,\n        distance: 0,\n        lastMoveTime: 0 };\n\n      this.opts._scrollDistance_ = offsetLeft;\n      break;}\n\n  drawCharts.call(this, this.opts.type, this.opts, this.config, this.context);\n};\n\nCharts.prototype.zoom = function () {\n  var val = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.opts.xAxis.itemCount;\n  if (this.opts.enableScroll !== true) {\n    __f__(\"log\", '请启用滚动条后使用！', \" at components/uCharts/u-charts.js:5294\");\n    return;\n  }\n  //当前屏幕中间点\n  var centerPoint = Math.round(Math.abs(this.scrollOption.currentOffset) / this.opts.chartData.eachSpacing) + Math.round(\n  this.opts.xAxis.itemCount / 2);\n  this.opts.animation = false;\n  this.opts.xAxis.itemCount = val.itemCount;\n  //重新计算x轴偏移距离\n  var _calYAxisData = calYAxisData(this.opts.series, this.opts, this.config),\n  yAxisWidth = _calYAxisData.yAxisWidth;\n  this.config.yAxisWidth = yAxisWidth;\n  var offsetLeft = 0;\n  var _getXAxisPoints0 = getXAxisPoints(this.opts.categories, this.opts, this.config),\n  xAxisPoints = _getXAxisPoints0.xAxisPoints,\n  startX = _getXAxisPoints0.startX,\n  endX = _getXAxisPoints0.endX,\n  eachSpacing = _getXAxisPoints0.eachSpacing;\n  var centerLeft = eachSpacing * centerPoint;\n  var screenWidth = endX - startX;\n  var MaxLeft = screenWidth - eachSpacing * (xAxisPoints.length - 1);\n  offsetLeft = screenWidth / 2 - centerLeft;\n  if (offsetLeft > 0) {\n    offsetLeft = 0;\n  }\n  if (offsetLeft < MaxLeft) {\n    offsetLeft = MaxLeft;\n  }\n  this.scrollOption = {\n    currentOffset: offsetLeft,\n    startTouchX: offsetLeft,\n    distance: 0,\n    lastMoveTime: 0 };\n\n  this.opts._scrollDistance_ = offsetLeft;\n  drawCharts.call(this, this.opts.type, this.opts, this.config, this.context);\n};\n\nCharts.prototype.stopAnimation = function () {\n  this.animationInstance && this.animationInstance.stop();\n};\n\nCharts.prototype.addEventListener = function (type, listener) {\n  this.event.addEventListener(type, listener);\n};\n\nCharts.prototype.getCurrentDataIndex = function (e) {\n  var touches = null;\n  if (e.changedTouches) {\n    touches = e.changedTouches[0];\n  } else {\n    touches = e.mp.changedTouches[0];\n  }\n  if (touches) {\n    var _touches$ = getTouches(touches, this.opts, e);\n    if (this.opts.type === 'pie' || this.opts.type === 'ring' || this.opts.type === 'rose') {\n      return findPieChartCurrentIndex({\n        x: _touches$.x,\n        y: _touches$.y },\n      this.opts.chartData.pieData);\n    } else if (this.opts.type === 'radar') {\n      return findRadarChartCurrentIndex({\n        x: _touches$.x,\n        y: _touches$.y },\n      this.opts.chartData.radarData, this.opts.categories.length);\n    } else if (this.opts.type === 'funnel') {\n      return findFunnelChartCurrentIndex({\n        x: _touches$.x,\n        y: _touches$.y },\n      this.opts.chartData.funnelData);\n    } else if (this.opts.type === 'map') {\n      return findMapChartCurrentIndex({\n        x: _touches$.x,\n        y: _touches$.y },\n      this.opts);\n    } else if (this.opts.type === 'word') {\n      return findWordChartCurrentIndex({\n        x: _touches$.x,\n        y: _touches$.y },\n      this.opts.chartData.wordCloudData);\n    } else {\n      return findCurrentIndex({\n        x: _touches$.x,\n        y: _touches$.y },\n      this.opts.chartData.calPoints, this.opts, this.config, Math.abs(this.scrollOption.currentOffset));\n    }\n  }\n  return -1;\n};\n\nCharts.prototype.getLegendDataIndex = function (e) {\n  var touches = null;\n  if (e.changedTouches) {\n    touches = e.changedTouches[0];\n  } else {\n    touches = e.mp.changedTouches[0];\n  }\n  if (touches) {\n    var _touches$ = getTouches(touches, this.opts, e);\n    return findLegendIndex({\n      x: _touches$.x,\n      y: _touches$.y },\n    this.opts.chartData.legendData);\n  }\n  return -1;\n};\n\nCharts.prototype.touchLegend = function (e) {\n  var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var touches = null;\n  if (e.changedTouches) {\n    touches = e.changedTouches[0];\n  } else {\n    touches = e.mp.changedTouches[0];\n  }\n  if (touches) {\n    var _touches$ = getTouches(touches, this.opts, e);\n    var index = this.getLegendDataIndex(e);\n    if (index >= 0) {\n      this.opts.series[index].show = !this.opts.series[index].show;\n      this.opts.animation = option.animation ? true : false;\n      this.opts._scrollDistance_ = this.scrollOption.currentOffset;\n      drawCharts.call(this, this.opts.type, this.opts, this.config, this.context);\n    }\n  }\n\n};\n\nCharts.prototype.showToolTip = function (e) {\n  var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var touches = null;\n  if (e.changedTouches) {\n    touches = e.changedTouches[0];\n  } else {\n    touches = e.mp.changedTouches[0];\n  }\n  if (!touches) {\n    __f__(\"log\", \"touchError\", \" at components/uCharts/u-charts.js:5431\");\n  }\n  var _touches$ = getTouches(touches, this.opts, e);\n  var currentOffset = this.scrollOption.currentOffset;\n  var opts = assign({}, this.opts, {\n    _scrollDistance_: currentOffset,\n    animation: false });\n\n  if (this.opts.type === 'line' || this.opts.type === 'area' || this.opts.type === 'column') {\n    var index = option.index == undefined ? this.getCurrentDataIndex(e) : option.index;\n    if (index > -1) {\n      var seriesData = getSeriesDataItem(this.opts.series, index);\n      if (seriesData.length !== 0) {\n        var _getToolTipData = getToolTipData(seriesData, this.opts.chartData.calPoints, index, this.opts.categories, option),\n        textList = _getToolTipData.textList,\n        offset = _getToolTipData.offset;\n        offset.y = _touches$.y;\n        opts.tooltip = {\n          textList: option.textList ? option.textList : textList,\n          offset: offset,\n          option: option,\n          index: index };\n\n      }\n    }\n    drawCharts.call(this, opts.type, opts, this.config, this.context);\n  }\n  if (this.opts.type === 'mix') {\n    var index = option.index == undefined ? this.getCurrentDataIndex(e) : option.index;\n    if (index > -1) {\n      var currentOffset = this.scrollOption.currentOffset;\n      var opts = assign({}, this.opts, {\n        _scrollDistance_: currentOffset,\n        animation: false });\n\n      var seriesData = getSeriesDataItem(this.opts.series, index);\n      if (seriesData.length !== 0) {\n        var _getMixToolTipData = getMixToolTipData(seriesData, this.opts.chartData.calPoints, index, this.opts.categories, option),\n        textList = _getMixToolTipData.textList,\n        offset = _getMixToolTipData.offset;\n        offset.y = _touches$.y;\n        opts.tooltip = {\n          textList: option.textList ? option.textList : textList,\n          offset: offset,\n          option: option,\n          index: index };\n\n      }\n    }\n    drawCharts.call(this, opts.type, opts, this.config, this.context);\n  }\n  if (this.opts.type === 'candle') {\n    var index = option.index == undefined ? this.getCurrentDataIndex(e) : option.index;\n    if (index > -1) {\n      var currentOffset = this.scrollOption.currentOffset;\n      var opts = assign({}, this.opts, {\n        _scrollDistance_: currentOffset,\n        animation: false });\n\n      var seriesData = getSeriesDataItem(this.opts.series, index);\n      if (seriesData.length !== 0) {\n        var _getToolTipData = getCandleToolTipData(this.opts.series[0].data, seriesData, this.opts.chartData.calPoints,\n        index, this.opts.categories, this.opts.extra.candle, option),\n        textList = _getToolTipData.textList,\n        offset = _getToolTipData.offset;\n        offset.y = _touches$.y;\n        opts.tooltip = {\n          textList: option.textList ? option.textList : textList,\n          offset: offset,\n          option: option,\n          index: index };\n\n      }\n    }\n    drawCharts.call(this, opts.type, opts, this.config, this.context);\n  }\n  if (this.opts.type === 'pie' || this.opts.type === 'ring' || this.opts.type === 'rose' || this.opts.type === 'funnel') {\n    var index = option.index == undefined ? this.getCurrentDataIndex(e) : option.index;\n    if (index > -1) {\n      var currentOffset = this.scrollOption.currentOffset;\n      var opts = assign({}, this.opts, {\n        _scrollDistance_: currentOffset,\n        animation: false });\n\n      var seriesData = this.opts._series_[index];\n      var textList = [{\n        text: option.format ? option.format(seriesData) : seriesData.name + ': ' + seriesData.data,\n        color: seriesData.color }];\n\n      var offset = {\n        x: _touches$.x,\n        y: _touches$.y };\n\n      opts.tooltip = {\n        textList: option.textList ? option.textList : textList,\n        offset: offset,\n        option: option,\n        index: index };\n\n    }\n    drawCharts.call(this, opts.type, opts, this.config, this.context);\n  }\n  if (this.opts.type === 'map' || this.opts.type === 'word') {\n    var index = option.index == undefined ? this.getCurrentDataIndex(e) : option.index;\n    if (index > -1) {\n      var currentOffset = this.scrollOption.currentOffset;\n      var opts = assign({}, this.opts, {\n        _scrollDistance_: currentOffset,\n        animation: false });\n\n      var seriesData = this.opts._series_[index];\n      var textList = [{\n        text: option.format ? option.format(seriesData) : seriesData.properties.name,\n        color: seriesData.color }];\n\n      var offset = {\n        x: _touches$.x,\n        y: _touches$.y };\n\n      opts.tooltip = {\n        textList: option.textList ? option.textList : textList,\n        offset: offset,\n        option: option,\n        index: index };\n\n    }\n    opts.updateData = false;\n    drawCharts.call(this, opts.type, opts, this.config, this.context);\n  }\n  if (this.opts.type === 'radar') {\n    var index = option.index == undefined ? this.getCurrentDataIndex(e) : option.index;\n    if (index > -1) {\n      var currentOffset = this.scrollOption.currentOffset;\n      var opts = assign({}, this.opts, {\n        _scrollDistance_: currentOffset,\n        animation: false });\n\n      var seriesData = getSeriesDataItem(this.opts.series, index);\n      if (seriesData.length !== 0) {\n        var textList = seriesData.map(function (item) {\n          return {\n            text: option.format ? option.format(item) : item.name + ': ' + item.data,\n            color: item.color };\n\n        });\n        var offset = {\n          x: _touches$.x,\n          y: _touches$.y };\n\n        opts.tooltip = {\n          textList: option.textList ? option.textList : textList,\n          offset: offset,\n          option: option,\n          index: index };\n\n      }\n    }\n    drawCharts.call(this, opts.type, opts, this.config, this.context);\n  }\n};\n\nCharts.prototype.translate = function (distance) {\n  this.scrollOption = {\n    currentOffset: distance,\n    startTouchX: distance,\n    distance: 0,\n    lastMoveTime: 0 };\n\n  var opts = assign({}, this.opts, {\n    _scrollDistance_: distance,\n    animation: false });\n\n  drawCharts.call(this, this.opts.type, opts, this.config, this.context);\n};\n\nCharts.prototype.scrollStart = function (e) {\n  var touches = null;\n  if (e.changedTouches) {\n    touches = e.changedTouches[0];\n  } else {\n    touches = e.mp.changedTouches[0];\n  }\n  var _touches$ = getTouches(touches, this.opts, e);\n  if (touches && this.opts.enableScroll === true) {\n    this.scrollOption.startTouchX = _touches$.x;\n  }\n};\n\nCharts.prototype.scroll = function (e) {\n  if (this.scrollOption.lastMoveTime === 0) {\n    this.scrollOption.lastMoveTime = Date.now();\n  }\n  var Limit = this.opts.extra.touchMoveLimit || 20;\n  var currMoveTime = Date.now();\n  var duration = currMoveTime - this.scrollOption.lastMoveTime;\n  if (duration < Math.floor(1000 / Limit)) return;\n  this.scrollOption.lastMoveTime = currMoveTime;\n  var touches = null;\n  if (e.changedTouches) {\n    touches = e.changedTouches[0];\n  } else {\n    touches = e.mp.changedTouches[0];\n  }\n  if (touches && this.opts.enableScroll === true) {\n    var _touches$ = getTouches(touches, this.opts, e);\n    var _distance;\n    _distance = _touches$.x - this.scrollOption.startTouchX;\n    var currentOffset = this.scrollOption.currentOffset;\n    var validDistance = calValidDistance(this, currentOffset + _distance, this.opts.chartData, this.config, this.opts);\n    this.scrollOption.distance = _distance = validDistance - currentOffset;\n    var opts = assign({}, this.opts, {\n      _scrollDistance_: currentOffset + _distance,\n      animation: false });\n\n    drawCharts.call(this, opts.type, opts, this.config, this.context);\n    return currentOffset + _distance;\n  }\n};\n\nCharts.prototype.scrollEnd = function (e) {\n  if (this.opts.enableScroll === true) {\n    var _scrollOption = this.scrollOption,\n    currentOffset = _scrollOption.currentOffset,\n    distance = _scrollOption.distance;\n    this.scrollOption.currentOffset = currentOffset + distance;\n    this.scrollOption.distance = 0;\n  }\n};\nif ( true && typeof module.exports === \"object\") {\n  module.exports = Charts;\n  //export default Charts;//建议使用nodejs的module导出方式，如报错请使用export方式导出\n}\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js */ 8)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///35\n");

/***/ }),
/* 36 */
/*!**********************!*\
  !*** external "Vue" ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = Vue;

/***/ })
],[[0,"app-config"]]]);